{"variants":[{"paths":["\/documentation\/c3\/autolayout\/referenceattachable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/ReferenceAttachable-Implementations","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"article","metadata":{"modules":[{"name":"C3"}],"role":"collectionGroup","title":"ReferenceAttachable Implementations"},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceAlignment","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceBetween","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceUnion"],"generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/noReference()","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:)","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:_:max:)-3lcsd","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:_:max:)-8cmtw","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:alignmentId:)-4p077","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:alignmentId:)-4pv4z","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:alignmentId:)-6jjsn","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:alignmentId:)-87rrq","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:id:max:)","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:ordinal:max:)","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:tag:max:)","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(alignmentId:_:)","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceAlignment(id:_:)","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceBetween(edges:axis:inverted:id:between:and:)","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceGrid(_:)","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceGuide(_:)","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceLayer(_:)","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceNode(_:)","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceSafeArea(minInsets:maxInsets:)","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceSelf(_:)","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceView(_:)"],"generated":true}],"references":{"doc://com.davidbjames.C3/documentation/C3/AutoLayout/referenceAlignment":{"role":"symbol","title":"referenceAlignment","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"referenceAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Reference an existing alignment layer that you have already setup."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceAlignment","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/referencealignment"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/referenceLayer(_:)":{"role":"symbol","title":"referenceLayer(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"referenceLayer"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CALayer","preciseIdentifier":"c:objc(cs)CALayer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference layer to which all frame calculations will be based on."},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the reference, follow this call with attachToReference()."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceLayer(_:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/referencelayer(_:)"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/referenceSelf(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"QueryInterface"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"referenceSelf(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"referenceSelf"},{"kind":"text","text":"((("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference to self item to which all frame"},{"type":"text","text":" "},{"type":"text","text":"calculations will be based on."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceSelf(_:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/referenceself(_:)"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/reference(_:alignmentId:)-4pv4z":{"role":"symbol","title":"reference(_:alignmentId:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference_11alignmentIdxAA7MutatorVyqd__qd_0_GSg_SSSgtAA9QueryableRd__AA14DebuggableItemRd_0_AA0G10ExportableRd_0_AaKRd_0_r0_lF1PL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"U","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference_11alignmentIdxAA7MutatorVyqd__qd_0_GSg_SSSgtAA9QueryableRd__AA14DebuggableItemRd_0_AA0G10ExportableRd_0_AaKRd_0_r0_lF1UL_qd_0_mfp"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"alignmentId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference mutator’s query to which all frame calculations"},{"type":"text","text":" "},{"type":"text","text":"will be based on. If there is more than one item returned"},{"type":"text","text":" "},{"type":"text","text":"from the reference query AND those items are siblings,"},{"type":"text","text":" "},{"type":"text","text":"an alignment layer will be used that is the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"union"}]},{"type":"text","text":" of all"},{"type":"text","text":" "},{"type":"text","text":"items returned, such that any frame calculations made will"},{"type":"text","text":" "},{"type":"text","text":"be relative to the union of those items."},{"type":"text","text":" "},{"type":"text","text":"NOTE: For union references (based on multiple items), the"},{"type":"text","text":" "},{"type":"text","text":"query’s "},{"type":"emphasis","inlineContent":[{"type":"text","text":"base"}]},{"type":"text","text":" item must be the literal parent of the query items,"},{"type":"text","text":" "},{"type":"text","text":"in order for the alignment to occur relative to it’s coordinate space."},{"type":"text","text":" "},{"type":"text","text":"If more than one union reference is used within a given parent"},{"type":"text","text":" "},{"type":"text","text":"(e.g. reference based on diverse items) pass a unique “alignment id” to"},{"type":"text","text":" "},{"type":"text","text":"ensure there is no conflict with alignment layers."},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the reference, follow this call with attachToReference()."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:alignmentId:)-4pv4z","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/reference(_:alignmentid:)-4pv4z"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/reference(_:id:max:)":{"role":"symbol","title":"reference(_:id:max:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference_2id3maxxqd__m_SSSgSiSgtAA14DebuggableItemRd__AA9QueryableRd__lF1RL_qd__mfp"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference item to which all frame calculations"},{"type":"text","text":" "},{"type":"text","text":"will be based on. Specify the item type and identifier."},{"type":"text","text":" "},{"type":"text","text":"This method performs a query from the current query’s base and"},{"type":"text","text":" "},{"type":"text","text":"assigns the first item found (of type and identifier) to the"},{"type":"text","text":" "},{"type":"text","text":"query’s reference."},{"type":"text","text":" "},{"type":"text","text":"Example: query.reference(CircleView.self, id:“foo”).mutate"},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the reference, follow this call with attachToReference()."},{"type":"text","text":" "},{"type":"text","text":"Supports multiple item references (union) – if items are siblings."},{"type":"text","text":" "},{"type":"text","text":"To reference multiple items of the same type\/id provide "},{"type":"codeVoice","code":"max"},{"type":"text","text":" "},{"type":"text","text":"value which can be an integer of the number of items to be found"},{"type":"text","text":" "},{"type":"text","text":"or if that value is not known, nil. (For performance prefer"},{"type":"text","text":" "},{"type":"text","text":"explicitly providing integer value.)"},{"type":"text","text":" "},{"type":"text","text":"To debug the hierarchy used for the reference search precede"},{"type":"text","text":" "},{"type":"text","text":"this call with "},{"type":"codeVoice","code":".debug(.hierarchy)"},{"type":"text","text":" or "},{"type":"codeVoice","code":".console(.hierarchy)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:id:max:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/reference(_:id:max:)"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/reference(_:alignmentId:)-6jjsn":{"role":"symbol","title":"reference(_:alignmentId:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"AutoLayout","preciseIdentifier":"s:2C310AutoLayoutV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference_11alignmentIdxAA10AutoLayoutVyqd__qd_0_GSg_SSSgtAA9QueryableRd__AA0gH10ExportableRd_0_AA14DebuggableItemRd_0_AaKRd_0_r0_lF1PL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"U","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference_11alignmentIdxAA10AutoLayoutVyqd__qd_0_GSg_SSSgtAA9QueryableRd__AA0gH10ExportableRd_0_AA14DebuggableItemRd_0_AaKRd_0_r0_lF1UL_qd_0_mfp"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"alignmentId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference autolayout’s query to which all frame calculations"},{"type":"text","text":" "},{"type":"text","text":"will be based on. If there is more than one item returned"},{"type":"text","text":" "},{"type":"text","text":"from the reference query AND those items are siblings,"},{"type":"text","text":" "},{"type":"text","text":"an alignment layer will be used that is the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"union"}]},{"type":"text","text":" of all"},{"type":"text","text":" "},{"type":"text","text":"items returned, such that any frame calculations made will"},{"type":"text","text":" "},{"type":"text","text":"be relative to the union of those items."},{"type":"text","text":" "},{"type":"text","text":"NOTE: For union references (based on multiple items), the"},{"type":"text","text":" "},{"type":"text","text":"query’s "},{"type":"emphasis","inlineContent":[{"type":"text","text":"base"}]},{"type":"text","text":" item must be the literal parent of the query items,"},{"type":"text","text":" "},{"type":"text","text":"in order for the alignment to occur relative to it’s coordinate space."},{"type":"text","text":" "},{"type":"text","text":"If more than one union reference is used within a given parent"},{"type":"text","text":" "},{"type":"text","text":"(e.g. reference based on diverse items) pass a unique “alignment id” to"},{"type":"text","text":" "},{"type":"text","text":"ensure there is no conflict with alignment layers."},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the reference, follow this call with attachToReference()."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:alignmentId:)-6jjsn","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/reference(_:alignmentid:)-6jjsn"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/referenceNode(_:)":{"role":"symbol","title":"referenceNode(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"referenceNode"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SKNode","preciseIdentifier":"c:objc(cs)SKNode"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference node to which all frame calculations will be based on."},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the reference, follow this call with attachToReference()."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceNode(_:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/referencenode(_:)"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/referenceAlignment(id:_:)":{"role":"symbol","title":"referenceAlignment(id:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"referenceAlignment"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, (("},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"B","preciseIdentifier":"s:2C315QueryAccessibleP1BQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"AlignmentLayer","preciseIdentifier":"c:@M@C3@objc(cs)AlignmentLayer"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Reference a hidden alignment layer to which subsequent"},{"type":"text","text":" "},{"type":"text","text":"frame calculations will be based on."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceAlignment(id:_:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/referencealignment(id:_:)"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/reference(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AutoLayoutExportable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"reference(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reference"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Referential","preciseIdentifier":"s:2C311ReferentialP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"AutoLayout","preciseIdentifier":"s:2C310AutoLayoutV"}],"abstract":[{"type":"text","text":"Associate a reference item to which all frame calculations will be based on."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/reference(_:)"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/reference(_:_:max:)-3lcsd":{"role":"symbol","title":"reference(_:_:max:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference__3maxxqd__m_AA16IdentifiableItem_pSiSgtAA010DebuggableG0Rd__AA9QueryableRd__lF1RL_qd__mfp"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"IdentifiableItem","preciseIdentifier":"s:2C316IdentifiableItemP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference item to which all frame calculations"},{"type":"text","text":" "},{"type":"text","text":"will be based on. Specify the item type and identifier."},{"type":"text","text":" "},{"type":"text","text":"This method performs a query from the current query’s base and"},{"type":"text","text":" "},{"type":"text","text":"assigns the first item found (of type and identifier) to the"},{"type":"text","text":" "},{"type":"text","text":"query’s reference."},{"type":"text","text":" "},{"type":"text","text":"Example: query.reference(CircleView.self, id:Id.foo).mutate"},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the reference, follow this call with attachToReference()."},{"type":"text","text":" "},{"type":"text","text":"Supports multiple item references (union) – if items are siblings."},{"type":"text","text":" "},{"type":"text","text":"To reference multiple items of the same type\/id provide "},{"type":"codeVoice","code":"max"},{"type":"text","text":" "},{"type":"text","text":"value which can be an integer of the number of items to be found"},{"type":"text","text":" "},{"type":"text","text":"or if that value is not known, nil. (For performance prefer"},{"type":"text","text":" "},{"type":"text","text":"explicitly providing integer value.)"},{"type":"text","text":" "},{"type":"text","text":"To debug the hierarchy used for the reference search precede"},{"type":"text","text":" "},{"type":"text","text":"this call with "},{"type":"codeVoice","code":".debug(.hierarchy)"},{"type":"text","text":" or "},{"type":"codeVoice","code":".console(.hierarchy)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:_:max:)-3lcsd","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/reference(_:_:max:)-3lcsd"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/referenceUnion":{"role":"symbol","title":"referenceUnion","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"referenceUnion"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Reference an existing “union” alignment layer that has already been created."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceUnion","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/referenceunion"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/referenceSafeArea(minInsets:maxInsets:)":{"role":"symbol","title":"referenceSafeArea(minInsets:maxInsets:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"referenceSafeArea"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minInsets"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InsetGroup","preciseIdentifier":"s:2C310InsetGroupV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"maxInsets"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InsetGroup","preciseIdentifier":"s:2C310InsetGroupV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Reference this view’s (or in the case of multiple views,"},{"type":"text","text":" "},{"type":"text","text":"common parent view’s) safe area layout guide to which all"},{"type":"text","text":" "},{"type":"text","text":"subsequent frame calculations will be based on."},{"type":"text","text":" "},{"type":"text","text":"Remember that the safe area guide on the view is the"},{"type":"text","text":" "},{"type":"text","text":"intersection of the safe area of the window and the view’s"},{"type":"text","text":" "},{"type":"text","text":"bounds, which means if you need to pin all edges you can"},{"type":"text","text":" "},{"type":"text","text":"do so in one operation. Remember too, that in the context"},{"type":"text","text":" "},{"type":"text","text":"of a view controller you may use "},{"type":"codeVoice","code":"additionalSafeAreaInsets"},{"type":"text","text":" "},{"type":"text","text":"which will be added to the safe area."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceSafeArea(minInsets:maxInsets:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/referencesafearea(mininsets:maxinsets:)"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout":{"role":"symbol","title":"AutoLayout","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutoLayout"}],"abstract":[{"type":"text","text":"Wrapper for autolayout manipulation."},{"type":"text","text":" "},{"type":"text","text":"Do not instantiate this directly. Use “layout” on a"},{"type":"text","text":" "},{"type":"text","text":"view query to get this."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AutoLayout"}],"url":"\/documentation\/c3\/autolayout"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/reference(_:alignmentId:)-4p077":{"role":"symbol","title":"reference(_:alignmentId:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Query","preciseIdentifier":"s:2C35QueryV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference_11alignmentIdxAA5QueryVyqd__qd_0_GSg_SSSgtAA9QueryableRd__AA14DebuggableItemRd_0_AaKRd_0_r0_lF1PL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"U","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference_11alignmentIdxAA5QueryVyqd__qd_0_GSg_SSSgtAA9QueryableRd__AA14DebuggableItemRd_0_AaKRd_0_r0_lF1UL_qd_0_mfp"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"alignmentId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference query to which all frame calculations"},{"type":"text","text":" "},{"type":"text","text":"will be based on. If there is more than one item returned"},{"type":"text","text":" "},{"type":"text","text":"from the reference query AND those items are siblings,"},{"type":"text","text":" "},{"type":"text","text":"an alignment layer will be used that is the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"union"}]},{"type":"text","text":" of all"},{"type":"text","text":" "},{"type":"text","text":"items returned, such that any frame calculations made will"},{"type":"text","text":" "},{"type":"text","text":"be relative to the union of those items."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:alignmentId:)-4p077","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/reference(_:alignmentid:)-4p077"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/reference(alignmentId:_:)":{"role":"symbol","title":"reference(alignmentId:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">("},{"kind":"externalParam","text":"alignmentId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, ("},{"kind":"typeIdentifier","text":"Query","preciseIdentifier":"s:2C35QueryV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"B","preciseIdentifier":"s:2C315QueryAccessibleP1BQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:2C315QueryAccessibleP1TQa"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Query","preciseIdentifier":"s:2C35QueryV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference11alignmentId_xSSSg_AA5QueryVyqd__qd_0_GSgAHy1BQz1TQzGXEtAA9QueryableRd__AA14DebuggableItemRd_0_AaPRd_0_r0_lF1PL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"U","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference11alignmentId_xSSSg_AA5QueryVyqd__qd_0_GSgAHy1BQz1TQzGXEtAA9QueryableRd__AA14DebuggableItemRd_0_AaPRd_0_r0_lF1UL_qd_0_mfp"},{"kind":"text","text":">?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference query derived from the current query"},{"type":"text","text":" "},{"type":"text","text":"to which all frame calculations will be based on."},{"type":"text","text":" "},{"type":"text","text":"(This variation is “derived” in the sense that you can go from the"},{"type":"text","text":" "},{"type":"text","text":"current query via “with” operator or other export operators to further"},{"type":"text","text":" "},{"type":"text","text":"query the hierarchy using the current query’s items as the base.)"},{"type":"text","text":" "},{"type":"text","text":"If there is more than one item returned from the reference query AND"},{"type":"text","text":" "},{"type":"text","text":"those items are siblings, an alignment layer will be used that is the"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"union"}]},{"type":"text","text":" of all items returned, such that any frame calculations made"},{"type":"text","text":" "},{"type":"text","text":"will be relative to the union of those items."},{"type":"text","text":" "},{"type":"text","text":"NOTE: For union references (based on multiple items), the"},{"type":"text","text":" "},{"type":"text","text":"query’s "},{"type":"emphasis","inlineContent":[{"type":"text","text":"base"}]},{"type":"text","text":" item must be the literal parent of the query items,"},{"type":"text","text":" "},{"type":"text","text":"in order for the alignment to occur relative to it’s coordinate space."},{"type":"text","text":" "},{"type":"text","text":"If more than one union reference is used within a given parent"},{"type":"text","text":" "},{"type":"text","text":"(e.g. reference based on diverse items) pass a unique “alignment id” to"},{"type":"text","text":" "},{"type":"text","text":"ensure there is no conflict with alignment layers."},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the reference, follow this call with attachToReference()."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(alignmentId:_:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/reference(alignmentid:_:)"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/referenceGrid(_:)":{"role":"symbol","title":"referenceGrid(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"referenceGrid"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Quadrant","preciseIdentifier":"c:@M@C3@objc(cs)Quadrant"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a quadrant guide (e.g. “A1:B2”) within a grid"},{"type":"text","text":" "},{"type":"text","text":"(that is the ancestor\/previous from the current query)"},{"type":"text","text":" "},{"type":"text","text":"to which all frame calculations of the item(s) will be based."},{"type":"text","text":" "},{"type":"text","text":"SIDE-EFFECT: If the quadrant does not already exist in the"},{"type":"text","text":" "},{"type":"text","text":"grid it will be created\/attached."},{"type":"text","text":" "},{"type":"text","text":"This supports multiple items referencing a single quadrant."},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the referenced quadrant, follow this call with attachToReference()."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceGrid(_:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/referencegrid(_:)"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/reference(_:alignmentId:)-87rrq":{"role":"symbol","title":"reference(_:alignmentId:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Builder","preciseIdentifier":"s:2C37BuilderC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference_11alignmentIdxAA7BuilderCyqd__qd_0_GSg_SSSgtAA9QueryableRd__AA14DebuggableItemRd_0_AaKRd_0_r0_lF1PL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"U","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference_11alignmentIdxAA7BuilderCyqd__qd_0_GSg_SSSgtAA9QueryableRd__AA14DebuggableItemRd_0_AaKRd_0_r0_lF1UL_qd_0_mfp"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"alignmentId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference builder’s query to which all frame calculations"},{"type":"text","text":" "},{"type":"text","text":"will be based on. If there is more than one item returned"},{"type":"text","text":" "},{"type":"text","text":"from the reference query AND those items are siblings,"},{"type":"text","text":" "},{"type":"text","text":"an alignment layer will be used that is the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"union"}]},{"type":"text","text":" of all"},{"type":"text","text":" "},{"type":"text","text":"items returned, such that any frame calculations made will"},{"type":"text","text":" "},{"type":"text","text":"be relative to the union of those items."},{"type":"text","text":" "},{"type":"text","text":"NOTE: For union references (based on multiple items), the"},{"type":"text","text":" "},{"type":"text","text":"query’s "},{"type":"emphasis","inlineContent":[{"type":"text","text":"base"}]},{"type":"text","text":" item must be the literal parent of the query items,"},{"type":"text","text":" "},{"type":"text","text":"in order for the alignment to occur relative to it’s coordinate space."},{"type":"text","text":" "},{"type":"text","text":"If more than one union reference is used within a given parent"},{"type":"text","text":" "},{"type":"text","text":"(e.g. reference based on diverse items) pass a unique “alignment id” to"},{"type":"text","text":" "},{"type":"text","text":"ensure there is no conflict with alignment layers."},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the reference, follow this call with attachToReference()."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:alignmentId:)-87rrq","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/reference(_:alignmentid:)-87rrq"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/reference(_:ordinal:max:)":{"role":"symbol","title":"reference(_:ordinal:max:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference_7ordinal3maxxqd__m_S2iSgtAA14DebuggableItemRd__AA9QueryableRd__lF1RL_qd__mfp"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"ordinal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference item to which all frame calculations"},{"type":"text","text":" "},{"type":"text","text":"will be based on. Specify the item type and ordinal."},{"type":"text","text":" "},{"type":"text","text":"This method performs a query from the current query’s base and"},{"type":"text","text":" "},{"type":"text","text":"assigns the first item found (of type and ordinal) to the"},{"type":"text","text":" "},{"type":"text","text":"query’s reference."},{"type":"text","text":" "},{"type":"text","text":"Example: query.reference(CircleView.self, ordinal:1).mutate"},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the reference, follow this call with attachToReference()."},{"type":"text","text":" "},{"type":"text","text":"Supports multiple item references (union) – if items are siblings."},{"type":"text","text":" "},{"type":"text","text":"To reference multiple items of the same type\/ordinal provide "},{"type":"codeVoice","code":"max"},{"type":"text","text":" "},{"type":"text","text":"value which can be an integer of the number of items to be found"},{"type":"text","text":" "},{"type":"text","text":"or if that value is not known, nil. (For performance prefer"},{"type":"text","text":" "},{"type":"text","text":"explicitly providing integer value.)"},{"type":"text","text":" "},{"type":"text","text":"To debug the hierarchy used for the reference search precede"},{"type":"text","text":" "},{"type":"text","text":"this call with "},{"type":"codeVoice","code":".debug(.hierarchy)"},{"type":"text","text":" or "},{"type":"codeVoice","code":".console(.hierarchy)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:ordinal:max:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/reference(_:ordinal:max:)"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/referenceBetween":{"role":"symbol","title":"referenceBetween","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"referenceBetween"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Reference an existing “between” alignment space that you have already setup."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceBetween","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/referencebetween"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/reference(_:_:max:)-8cmtw":{"role":"symbol","title":"reference(_:_:max:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference__3maxxqd__m_AA12TaggableItem_pSiSgtAA010DebuggableG0Rd__AA9QueryableRd__lF1RL_qd__mfp"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"TaggableItem","preciseIdentifier":"s:2C312TaggableItemP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference item to which all frame calculations"},{"type":"text","text":" "},{"type":"text","text":"will be based on. Specify the item type and tag."},{"type":"text","text":" "},{"type":"text","text":"This method performs a query from the current query’s base and"},{"type":"text","text":" "},{"type":"text","text":"assigns the first item found (of type and tag) to the"},{"type":"text","text":" "},{"type":"text","text":"query’s reference."},{"type":"text","text":" "},{"type":"text","text":"Example: query.reference(CircleView.self, tag:Tags.foo).mutate"},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the reference, follow this call with attachToReference()."},{"type":"text","text":" "},{"type":"text","text":"Supports multiple item references (union) – if items are siblings."},{"type":"text","text":" "},{"type":"text","text":"To reference multiple items of the same type\/tag provide "},{"type":"codeVoice","code":"max"},{"type":"text","text":" "},{"type":"text","text":"value which can be an integer of the number of items to be found"},{"type":"text","text":" "},{"type":"text","text":"or if that value is not known, nil. (For performance prefer"},{"type":"text","text":" "},{"type":"text","text":"explicitly providing integer value.)"},{"type":"text","text":" "},{"type":"text","text":"To debug the hierarchy used for the reference search precede"},{"type":"text","text":" "},{"type":"text","text":"this call with "},{"type":"codeVoice","code":".debug(.hierarchy)"},{"type":"text","text":" or "},{"type":"codeVoice","code":".console(.hierarchy)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:_:max:)-8cmtw","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/reference(_:_:max:)-8cmtw"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/noReference()":{"role":"symbol","title":"noReference()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"noReference"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Reset the reference to default which means that all frame calculations"},{"type":"text","text":" "},{"type":"text","text":"will be relative to parent (as normal)."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/noReference()","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/noreference()"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/referenceGuide(_:)":{"role":"symbol","title":"referenceGuide(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"referenceGuide"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UILayoutGuide","preciseIdentifier":"c:objc(cs)UILayoutGuide"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference guide to which all frame calculations will be based on."},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the reference, follow this call with attachToReference()."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceGuide(_:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/referenceguide(_:)"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/referenceView(_:)":{"role":"symbol","title":"referenceView(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"referenceView"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UIView","preciseIdentifier":"c:objc(cs)UIView"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference view to which all frame calculations will be based on."},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the reference, follow this call with attachToReference()."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceView(_:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/referenceview(_:)"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/referenceBetween(edges:axis:inverted:id:between:and:)":{"role":"symbol","title":"referenceBetween(edges:axis:inverted:id:between:and:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"referenceBetween"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"U1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"U2"},{"kind":"text","text":">("},{"kind":"externalParam","text":"edges"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Layout","preciseIdentifier":"s:2C36LayoutV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BetweenEdges","preciseIdentifier":"s:2C36LayoutV12BetweenEdgesO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"axis"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Layout","preciseIdentifier":"s:2C36LayoutV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Axis","preciseIdentifier":"s:2C36LayoutV4AxisO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inverted"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"between"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Query","preciseIdentifier":"s:2C35QueryV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"B","preciseIdentifier":"s:2C315QueryAccessibleP1BQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:2C315QueryAccessibleP1TQa"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Query","preciseIdentifier":"s:2C35QueryV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"B","preciseIdentifier":"s:2C315QueryAccessibleP1BQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"U1","preciseIdentifier":"s:2C319ReferenceAttachablePAAE16referenceBetween5edges4axis8inverted2id7between3andxAA6LayoutV0E5EdgesO_AL4AxisOSbSSSgAA5QueryVy1BQzqd__GASyAU1TQzGcASyAUqd_0_GAYctAA14DebuggableItemRd__AA9QueryableRd__AAA_Rd_0_AAA0_Rd_0_r0_lF2U1L_qd__mfp"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"and"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Query","preciseIdentifier":"s:2C35QueryV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"B","preciseIdentifier":"s:2C315QueryAccessibleP1BQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:2C315QueryAccessibleP1TQa"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Query","preciseIdentifier":"s:2C35QueryV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"B","preciseIdentifier":"s:2C315QueryAccessibleP1BQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"U2","preciseIdentifier":"s:2C319ReferenceAttachablePAAE16referenceBetween5edges4axis8inverted2id7between3andxAA6LayoutV0E5EdgesO_AL4AxisOSbSSSgAA5QueryVy1BQzqd__GASyAU1TQzGcASyAUqd_0_GAYctAA14DebuggableItemRd__AA9QueryableRd__AAA_Rd_0_AAA0_Rd_0_r0_lF2U2L_qd_0_mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Reference a space between two items to which subsequent"},{"type":"text","text":" "},{"type":"text","text":"frame calculations will be based on."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/referenceBetween(edges:axis:inverted:id:between:and:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/referencebetween(edges:axis:inverted:id:between:and:)"},"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/documentation/C3/AutoLayout/reference(_:tag:max:)":{"role":"symbol","title":"reference(_:tag:max:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R","preciseIdentifier":"s:2C319ReferenceAttachablePAAE9reference_3tag3maxxqd__m_SSSiSgtAA14DebuggableItemRd__AA9QueryableRd__lF1RL_qd__mfp"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"tag"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Associate a reference item to which all frame calculations"},{"type":"text","text":" "},{"type":"text","text":"will be based on. Specify the item type and tag."},{"type":"text","text":" "},{"type":"text","text":"This method performs a query from the current query’s base and"},{"type":"text","text":" "},{"type":"text","text":"assigns the first item found (of type and tag) to the"},{"type":"text","text":" "},{"type":"text","text":"query’s reference."},{"type":"text","text":" "},{"type":"text","text":"Example: query.reference(CircleView.self, tag:“foo”).mutate"},{"type":"text","text":" "},{"type":"text","text":"TIP: As with all reference operators, to re-parent the item(s)"},{"type":"text","text":" "},{"type":"text","text":"to the reference, follow this call with attachToReference()."},{"type":"text","text":" "},{"type":"text","text":"Supports multiple item references (union) – if items are siblings."},{"type":"text","text":" "},{"type":"text","text":"To reference multiple items of the same type\/tag provide "},{"type":"codeVoice","code":"max"},{"type":"text","text":" "},{"type":"text","text":"value which can be an integer of the number of items to be found"},{"type":"text","text":" "},{"type":"text","text":"or if that value is not known, nil. (For performance prefer"},{"type":"text","text":" "},{"type":"text","text":"explicitly providing integer value.)"},{"type":"text","text":" "},{"type":"text","text":"To debug the hierarchy used for the reference search precede"},{"type":"text","text":" "},{"type":"text","text":"this call with "},{"type":"codeVoice","code":".debug(.hierarchy)"},{"type":"text","text":" or "},{"type":"codeVoice","code":".console(.hierarchy)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoLayout\/reference(_:tag:max:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autolayout\/reference(_:tag:max:)"}}}