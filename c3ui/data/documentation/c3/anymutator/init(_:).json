{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"mutator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"M","preciseIdentifier":"s:2C310AnyMutatorVyACyxq_Gqd__c1BAA15QueryAccessiblePQyd__Rsz1TAGQyd__Rs_AA08AbstractC0Rd__AA04ItemD9InterfaceRd__lufc1ML_qd__mfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AbstractMutator","preciseIdentifier":"s:2C315AbstractMutatorP","text":"AbstractMutator"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ItemQueryInterface","preciseIdentifier":"s:2C318ItemQueryInterfaceP","text":"ItemQueryInterface"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/anymutator\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyMutator\/init(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"M","preciseIdentifier":"s:2C310AnyMutatorVyACyxq_Gqd__c1BAA15QueryAccessiblePQyd__Rsz1TAGQyd__Rs_AA08AbstractC0Rd__AA04ItemD9InterfaceRd__lufc1ML_qd__mfp"},{"kind":"text","text":")"}],"title":"init(_:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:2C310AnyMutatorVyACyxq_Gqd__c1BAA15QueryAccessiblePQyd__Rsz1TAGQyd__Rs_AA08AbstractC0Rd__AA04ItemD9InterfaceRd__lufc","modules":[{"name":"C3"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyMutator"]]},"references":{"doc://com.davidbjames.C3/documentation/C3/AnyMutator":{"role":"symbol","title":"AnyMutator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyMutator"}],"abstract":[{"type":"text","text":"AnyMutator is a typesafe wrapper to "},{"type":"emphasis","inlineContent":[{"type":"text","text":"most"}]},{"type":"text","text":" of the mutator interface."},{"type":"text","text":" "},{"type":"text","text":"It supports using either wrapper – Mutator or AutoLayout –"},{"type":"text","text":" "},{"type":"text","text":"dynamically where code supports either one, without running"},{"type":"text","text":" "},{"type":"text","text":"into compiler errors related to protocols with associated"},{"type":"text","text":" "},{"type":"text","text":"types – a.k.a. “PATs”)."},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: References and other Query state can "},{"type":"emphasis","inlineContent":[{"type":"text","text":"only"}]},{"type":"text","text":" be set"},{"type":"text","text":" "},{"type":"text","text":"on the original Mutator\/AutoLayout wrapper used to instantiate"},{"type":"text","text":" "},{"type":"text","text":"AnyMutator. It’s not possible to change the query state"},{"type":"text","text":" "},{"type":"text","text":"(including using references) via AnyMutator because the original"},{"type":"text","text":" "},{"type":"text","text":"mutator is captured at initialization and cannot be altered."},{"type":"text","text":" "},{"type":"text","text":"PERFORMANCE: Initial tests show that initialization of AnyMutator"},{"type":"text","text":" "},{"type":"text","text":"is relatively cheap, so generally, don’t worry. However, in"},{"type":"text","text":" "},{"type":"text","text":"situations where AnyMutator is constructed repeatedly and often,"},{"type":"text","text":" "},{"type":"text","text":"you may want to profile to ensure no performance issues,"},{"type":"text","text":" "},{"type":"text","text":"and if so, resort to using concrete mutators instead."},{"type":"text","text":" "},{"type":"text","text":"Using AnyMutator in chained situations (what it’s intended for)"},{"type":"text","text":" "},{"type":"text","text":"is not a problem since the initialization only occurs once."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyMutator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyMutator"}],"url":"\/documentation\/c3\/anymutator"},"doc://com.davidbjames.C3/documentation/C3/AnyMutator/init(_:)":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"M","preciseIdentifier":"s:2C310AnyMutatorVyACyxq_Gqd__c1BAA15QueryAccessiblePQyd__Rsz1TAGQyd__Rs_AA08AbstractC0Rd__AA04ItemD9InterfaceRd__lufc1ML_qd__mfp"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyMutator\/init(_:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/anymutator\/init(_:)"},"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/documentation/C3/ItemQueryInterface":{"role":"symbol","title":"ItemQueryInterface","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ItemQueryInterface"}],"abstract":[{"type":"text","text":"ItemQueryInterface represents any wrapper that can"},{"type":"text","text":" "},{"type":"text","text":"access the underlying items and act on them via closure"},{"type":"text","text":" "},{"type":"text","text":"in a way that does not alter the original query."},{"type":"text","text":" "},{"type":"text","text":"Query, Mutator and AutoLayout all support this,"},{"type":"text","text":" "},{"type":"text","text":"as does AnyMutator."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ItemQueryInterface","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ItemQueryInterface"}],"url":"\/documentation\/c3\/itemqueryinterface"},"doc://com.davidbjames.C3/documentation/C3/AbstractMutator":{"role":"symbol","title":"AbstractMutator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AbstractMutator"}],"abstract":[{"type":"text","text":"AbstractMutator represents the primary interface to mutate"},{"type":"text","text":" "},{"type":"text","text":"views, layers, guides and nodes. It is conformed by two wrappers:"},{"type":"text","text":" "},{"type":"text","text":"Mutator and AutoLayout, handling FreeLayout-based (stateless)"},{"type":"text","text":" "},{"type":"text","text":"mutations and AutoLayout-based (stateful) mutations, respectively,"},{"type":"text","text":" "},{"type":"text","text":"using a single consistent API (guaranteed by this protocol)."},{"type":"text","text":" "},{"type":"text","text":"NOTE: This wraps purely "},{"type":"emphasis","inlineContent":[{"type":"text","text":"layout"}]},{"type":"text","text":" API - never "},{"type":"emphasis","inlineContent":[{"type":"text","text":"decorative"}]},{"type":"text","text":" API."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AbstractMutator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AbstractMutator"}],"url":"\/documentation\/c3\/abstractmutator"}}}