{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueMutatorOptions"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/valuemutatoroptions"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/com.davidbjames.C3\/s23CustomStringConvertibleP","doc:\/\/com.davidbjames.C3\/SQ","doc:\/\/com.davidbjames.C3\/s25ExpressibleByArrayLiteralP","doc:\/\/com.davidbjames.C3\/s9OptionSetP","doc:\/\/com.davidbjames.C3\/SY","doc:\/\/com.davidbjames.C3\/s10SetAlgebraP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Options that influence how mutations will be applied."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueMutatorOptions"}],"title":"ValueMutatorOptions","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:2C319ValueMutatorOptionsV","modules":[{"name":"C3"}],"navigatorTitle":[{"kind":"identifier","text":"ValueMutatorOptions"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/init(rawValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/description","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/rawValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/toFreeLayoutOptions()"]},{"title":"Type Properties","identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/additive","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/aspect","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/concentricCorners","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/cumulative","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/debug","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/flex","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/idempotent","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/random","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/randomColor","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/subtractive"]},{"title":"Default Implementations","identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/Equatable-Implementations","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/OptionSet-Implementations","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/SetAlgebra-Implementations"],"generated":true}],"references":{"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/description":{"role":"symbol","title":"description","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/description","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/description"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/toFreeLayoutOptions()":{"role":"symbol","title":"toFreeLayoutOptions()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"toFreeLayoutOptions"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"FreeLayoutOptions","preciseIdentifier":"s:2C317FreeLayoutOptionsV"}],"abstract":[{"type":"text","text":"Export mutator options to relevant free layout options."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/toFreeLayoutOptions()","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/tofreelayoutoptions()"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/OptionSet-Implementations":{"role":"collectionGroup","title":"OptionSet Implementations","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/OptionSet-Implementations","kind":"article","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/optionset-implementations"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/debug":{"role":"symbol","title":"debug","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"debug"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueMutatorOptions","preciseIdentifier":"s:2C319ValueMutatorOptionsV"}],"abstract":[{"type":"text","text":"Used with theme style debugging (so far)."},{"type":"text","text":" "},{"type":"text","text":"Mutator debugging is already available via Mutator.debug operator."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/debug","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/debug"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/flex":{"role":"symbol","title":"flex","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"flex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueMutatorOptions","preciseIdentifier":"s:2C319ValueMutatorOptionsV"}],"abstract":[{"type":"text","text":"Whether items should flex their size by maintaing the position"},{"type":"text","text":" "},{"type":"text","text":"of their opposing side when pinning or aligning. For example,"},{"type":"text","text":" "},{"type":"text","text":"when aligning the top edge, make sure the bottom edge remains"},{"type":"text","text":" "},{"type":"text","text":"anchored to it’s current position, causing the item height to “flex”."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/flex","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/flex"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/init(rawValue:)":{"role":"symbol","title":"init(rawValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/init(rawValue:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/init(rawvalue:)"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/concentricCorners":{"role":"symbol","title":"concentricCorners","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"concentricCorners"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueMutatorOptions","preciseIdentifier":"s:2C319ValueMutatorOptionsV"}],"abstract":[{"type":"text","text":"Whether items with existing corner radius should have that corner"},{"type":"text","text":" "},{"type":"text","text":"radius made "},{"type":"emphasis","inlineContent":[{"type":"text","text":"concentric"}]},{"type":"text","text":" relative to the original radius value"},{"type":"text","text":" "},{"type":"text","text":"whenever any insetting or outsetting occurs."},{"type":"text","text":" "},{"type":"text","text":"For example, given a view with corner radius of 10.0"},{"type":"text","text":" "},{"type":"text","text":"when outsetting the view by 10.0, the corner radius"},{"type":"text","text":" "},{"type":"text","text":"will become 20.0."},{"type":"text","text":" "},{"type":"text","text":"This automatically takes into account existing corner mask"},{"type":"text","text":" "},{"type":"text","text":"(on all or any corners) and existing insets values (leading,"},{"type":"text","text":" "},{"type":"text","text":"trailing, etc) providing concentricity where applicable."},{"type":"text","text":" "},{"type":"text","text":"See https:\/\/a.cl.ly\/5zuBdyDb"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/concentricCorners","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/concentriccorners"},"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/s25ExpressibleByArrayLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/com.davidbjames.C3\/s25ExpressibleByArrayLiteralP"},"doc://com.davidbjames.C3/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/com.davidbjames.C3\/SY"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions":{"role":"symbol","title":"ValueMutatorOptions","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueMutatorOptions"}],"abstract":[{"type":"text","text":"Options that influence how mutations will be applied."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueMutatorOptions"}],"url":"\/documentation\/c3\/valuemutatoroptions"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/randomColor":{"role":"symbol","title":"randomColor","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomColor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueMutatorOptions","preciseIdentifier":"s:2C319ValueMutatorOptionsV"}],"abstract":[{"type":"text","text":"Randomize fill\/border\/derived colors, using deviation to adjust"},{"type":"text","text":" "},{"type":"text","text":"the amount of randomization applied."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/randomColor","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/randomcolor"},"doc://com.davidbjames.C3/s10SetAlgebraP":{"type":"unresolvable","title":"Swift.SetAlgebra","identifier":"doc:\/\/com.davidbjames.C3\/s10SetAlgebraP"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/idempotent":{"role":"symbol","title":"idempotent","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"idempotent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueMutatorOptions","preciseIdentifier":"s:2C319ValueMutatorOptionsV"}],"abstract":[{"type":"text","text":"Whether or not value mutations should be idempotent such that"},{"type":"text","text":" "},{"type":"text","text":"subsequent mutations (after the first) have no effect –"},{"type":"text","text":" "},{"type":"text","text":"given that the change is unnecessary, inefficient or"},{"type":"text","text":" "},{"type":"text","text":"would cause side-effects."},{"type":"text","text":" "},{"type":"text","text":"NOTE: This feature is a work in progress - most mutator"},{"type":"text","text":" "},{"type":"text","text":"API currently does not support it."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/idempotent","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/idempotent"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/additive":{"role":"symbol","title":"additive","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"additive"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueMutatorOptions","preciseIdentifier":"s:2C319ValueMutatorOptionsV"}],"abstract":[{"type":"text","text":"Make all mutations additive."},{"type":"text","text":" "},{"type":"text","text":"e.g. add to existing values, instead of setting new values"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/additive","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/additive"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/SetAlgebra-Implementations":{"role":"collectionGroup","title":"SetAlgebra Implementations","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/SetAlgebra-Implementations","kind":"article","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/setalgebra-implementations"},"doc://com.davidbjames.C3/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/com.davidbjames.C3\/SQ"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/equatable-implementations"},"doc://com.davidbjames.C3/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/com.davidbjames.C3\/s23CustomStringConvertibleP"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/random":{"role":"symbol","title":"random","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueMutatorOptions","preciseIdentifier":"s:2C319ValueMutatorOptionsV"}],"abstract":[{"type":"text","text":"Randomize values added. Use deviation to adjust the amount of"},{"type":"text","text":" "},{"type":"text","text":"randomization applied."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/random","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/random"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/cumulative":{"role":"symbol","title":"cumulative","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"cumulative"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueMutatorOptions","preciseIdentifier":"s:2C319ValueMutatorOptionsV"}],"abstract":[{"type":"text","text":"Make values accumulate from one view to the next."},{"type":"text","text":" "},{"type":"text","text":"Cumulative only works if values are actually passed to"},{"type":"text","text":" "},{"type":"text","text":"the mutators. This is true even if random\/deviation cause mutation."},{"type":"text","text":" "},{"type":"text","text":"In fact, in some cases, merely adding .cumulative, will cause"},{"type":"text","text":" "},{"type":"text","text":"random\/deviation to do nothing, due to the way the formulas work."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/cumulative","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/cumulative"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/subtractive":{"role":"symbol","title":"subtractive","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"subtractive"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueMutatorOptions","preciseIdentifier":"s:2C319ValueMutatorOptionsV"}],"abstract":[{"type":"text","text":"Make all mutations subtractive."},{"type":"text","text":" "},{"type":"text","text":"e.g. subtract from existing values, instead of setting new values"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/subtractive","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/subtractive"},"doc://com.davidbjames.C3/s9OptionSetP":{"type":"unresolvable","title":"Swift.OptionSet","identifier":"doc:\/\/com.davidbjames.C3\/s9OptionSetP"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/rawValue":{"role":"symbol","title":"rawValue","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/rawValue","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/rawvalue"},"doc://com.davidbjames.C3/documentation/C3/ValueMutatorOptions/aspect":{"role":"symbol","title":"aspect","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"aspect"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueMutatorOptions","preciseIdentifier":"s:2C319ValueMutatorOptionsV"}],"abstract":[{"type":"text","text":"Whether width\/height mutations should preserve aspect ratio."},{"type":"text","text":" "},{"type":"text","text":"NOTE: when using this flag, setting width (but not height) will"},{"type":"text","text":" "},{"type":"text","text":"make sure height is scaled proportional to the width, and vice versa."},{"type":"text","text":" "},{"type":"text","text":"If you set both width and height, it ignores this flag and just"},{"type":"text","text":" "},{"type":"text","text":"sets to the explicit values. Setting no values also ignores this flag."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ValueMutatorOptions\/aspect","kind":"symbol","type":"topic","url":"\/documentation\/c3\/valuemutatoroptions\/aspect"}}}