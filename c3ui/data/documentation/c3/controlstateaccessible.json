{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlStateAccessible"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/LayerAssociable","preciseIdentifier":"s:2C315LayerAssociableP","text":"LayerAssociable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/MetaCodable","preciseIdentifier":"s:2C311MetaCodableP","text":"MetaCodable"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"UIControl (and derivitives)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"ControlStateDependent"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"CustomControl (anything with an associated layer"},{"type":"text","text":" "},{"type":"text","text":"which includes views, layers and guides)"}]}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/controlstateaccessible"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/LayerAssociable","doc:\/\/com.davidbjames.C3\/documentation\/C3\/MetaCodable"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/AdhocControl","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateDependent","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateDependentOptional","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateMutable","doc:\/\/com.davidbjames.C3\/documentation\/C3\/CustomControl"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/AdhocHorizontalLine","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AdhocLine","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AdhocShape","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AdhocVerticalLine","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyFlexibleShape","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyShape","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Arc","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Backdrop","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Button","doc:\/\/com.davidbjames.C3\/documentation\/C3\/CancelButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/CancelButton2","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Capsule","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Circle","doc:\/\/com.davidbjames.C3\/documentation\/C3\/CloseSidedShape","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ClosedShape","doc:\/\/com.davidbjames.C3\/documentation\/C3\/CompositeShape","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConfirmButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConfirmButton2","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlBackground","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlBackgroundView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton2","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/DatePicker","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Diamond","doc:\/\/com.davidbjames.C3\/documentation\/C3\/DismissableButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Ellipse","doc:\/\/com.davidbjames.C3\/documentation\/C3\/EquiTriangle","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ExclusiveButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ExclusiveControlButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ExclusiveControlButton2","doc:\/\/com.davidbjames.C3\/documentation\/C3\/FlexibleTextShape","doc:\/\/com.davidbjames.C3\/documentation\/C3\/FrontShape","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Heptagon","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Hexagon","doc:\/\/com.davidbjames.C3\/documentation\/C3\/HorizontalLine","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Kite","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Line","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Octagon","doc:\/\/com.davidbjames.C3\/documentation\/C3\/OpenShape","doc:\/\/com.davidbjames.C3\/documentation\/C3\/OpenSidedShape","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Oval","doc:\/\/com.davidbjames.C3\/documentation\/C3\/PageControl","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Paragram","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Pentagon","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Polygon","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Quadrilateral","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Rectangle","doc:\/\/com.davidbjames.C3\/documentation\/C3\/RightTriangle","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Segmented","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Shape","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ShapeMask","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Slider","doc:\/\/com.davidbjames.C3\/documentation\/C3\/SnapshotOf","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Square","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Star","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Stepper","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Switch","doc:\/\/com.davidbjames.C3\/documentation\/C3\/SwitchableButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/SwitchableControlButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/SwitchableControllButton2","doc:\/\/com.davidbjames.C3\/documentation\/C3\/SystemButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/TextField","doc:\/\/com.davidbjames.C3\/documentation\/C3\/TextShape","doc:\/\/com.davidbjames.C3\/documentation\/C3\/TileMatrix","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Trapezoid","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Triangle","doc:\/\/com.davidbjames.C3\/documentation\/C3\/VerticalLine"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Protocol for classes\/protocols that give access"},{"type":"text","text":" "},{"type":"text","text":"to UIControl.state. Currently provided via:"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlStateAccessible"}],"title":"ControlStateAccessible","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:2C322ControlStateAccessibleP","modules":[{"name":"C3"}],"navigatorTitle":[{"kind":"identifier","text":"ControlStateAccessible"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/controlState","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isAccented","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isEmptyState","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isEnabled","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isFocused","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isHighlighted","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isSelected","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isSpecial"]}],"references":{"doc://com.davidbjames.C3/documentation/C3/AnyShape":{"role":"symbol","title":"AnyShape","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyShape"}],"abstract":[{"type":"text","text":"Any fixed ratio shape provided from a complete path,"},{"type":"text","text":" "},{"type":"text","text":"with aspect ratio being maintained when sized. (Use"},{"type":"text","text":" "},{"type":"text","text":"AnyFlexibleShape for sizing that ignores aspect ratio.)"},{"type":"text","text":" "},{"type":"text","text":"Supports absolute sizing on either (but not both) axes"},{"type":"text","text":" "},{"type":"text","text":"or implicit sizing relative to either (but not both)"},{"type":"text","text":" "},{"type":"text","text":"axes of the container item, with optional adjustment."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyShape","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyShape"}],"url":"\/documentation\/c3\/anyshape"},"doc://com.davidbjames.C3/documentation/C3/MetaCodable":{"role":"symbol","title":"MetaCodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetaCodable"}],"abstract":[{"type":"text","text":"A protocol specialization on protocols that store"},{"type":"text","text":" "},{"type":"text","text":"specific pieces of meta data, with the default"},{"type":"text","text":" "},{"type":"text","text":"storage on layers via KVC."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/MetaCodable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MetaCodable"}],"url":"\/documentation\/c3\/metacodable"},"doc://com.davidbjames.C3/documentation/C3/Backdrop":{"role":"symbol","title":"Backdrop","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Backdrop"}],"abstract":[{"type":"text","text":"Backdrop is a view that is stretched to fill the parent."},{"type":"text","text":" "},{"type":"text","text":"How it is styled is up to the implementor."},{"type":"text","text":" "},{"type":"text","text":"See also C3.Defaults.backdropShade which supports a"},{"type":"text","text":" "},{"type":"text","text":"default backdrop shade."},{"type":"text","text":" "},{"type":"text","text":"Technically it’s a button which is initially disabled"},{"type":"text","text":" "},{"type":"text","text":"from user interaction, unless you choose to allow"},{"type":"text","text":" "},{"type":"text","text":"interaction via BackdropDelegate (for example if"},{"type":"text","text":" "},{"type":"text","text":"tapping is to be used to dismiss something)."},{"type":"text","text":" "},{"type":"text","text":"This is publicly creatable but private for editing."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Backdrop","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Backdrop"}],"url":"\/documentation\/c3\/backdrop"},"doc://com.davidbjames.C3/documentation/C3/Quadrilateral":{"role":"symbol","title":"Quadrilateral","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Quadrilateral"}],"abstract":[{"type":"text","text":"Quadrilateral shape of arbitrary width\/height or"},{"type":"text","text":" "},{"type":"text","text":"implicitly sized to fill container."},{"type":"text","text":" "},{"type":"text","text":"This is different than Rectangle in 2 ways:"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Quadrilateral","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Quadrilateral"}],"url":"\/documentation\/c3\/quadrilateral"},"doc://com.davidbjames.C3/documentation/C3/Oval":{"role":"symbol","title":"Oval","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Oval"}],"abstract":[{"type":"text","text":"Horizontal oval shape with a fixed ratio providing"},{"type":"text","text":" "},{"type":"text","text":"a classic oval which is elongated similar in shape"},{"type":"text","text":" "},{"type":"text","text":"to an egg. Provide arbitrary “span” for the width"},{"type":"text","text":" "},{"type":"text","text":"or “edge” to size implicitly to edge of parent."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Oval","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Oval"}],"url":"\/documentation\/c3\/oval"},"doc://com.davidbjames.C3/documentation/C3/Button":{"role":"symbol","title":"Button","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Button"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Button","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Button"}],"url":"\/documentation\/c3\/button"},"doc://com.davidbjames.C3/documentation/C3/ControlStateAccessible/isAccented":{"role":"symbol","title":"isAccented","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isAccented"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isAccented","kind":"symbol","type":"topic","url":"\/documentation\/c3\/controlstateaccessible\/isaccented"},"doc://com.davidbjames.C3/documentation/C3/ControlStateAccessible/isEmptyState":{"role":"symbol","title":"isEmptyState","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEmptyState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isEmptyState","kind":"symbol","type":"topic","url":"\/documentation\/c3\/controlstateaccessible\/isemptystate"},"doc://com.davidbjames.C3/documentation/C3/ControlStateAccessible/isEnabled":{"role":"symbol","title":"isEnabled","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEnabled"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isEnabled","kind":"symbol","type":"topic","url":"\/documentation\/c3\/controlstateaccessible\/isenabled"},"doc://com.davidbjames.C3/documentation/C3/LayerAssociable":{"role":"symbol","title":"LayerAssociable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayerAssociable"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/LayerAssociable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LayerAssociable"}],"url":"\/documentation\/c3\/layerassociable"},"doc://com.davidbjames.C3/documentation/C3/Octagon":{"role":"symbol","title":"Octagon","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Octagon"}],"abstract":[{"type":"text","text":"Octagon with 8 sides."},{"type":"text","text":" "},{"type":"text","text":"Explicit size provided via span or implicitly"},{"type":"text","text":" "},{"type":"text","text":"based on container."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Octagon","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Octagon"}],"url":"\/documentation\/c3\/octagon"},"doc://com.davidbjames.C3/documentation/C3/ConfirmButton2":{"role":"symbol","title":"ConfirmButton2","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConfirmButton2"}],"abstract":[{"type":"text","text":"ConfirmButton2 supports firing attached actions and handles"},{"type":"text","text":" "},{"type":"text","text":"dismissing any related ancestor Presentable if initialized"},{"type":"text","text":" "},{"type":"text","text":"with “dismissive”."},{"type":"text","text":" "},{"type":"text","text":"Adhoc actions can be attached to this button or via"},{"type":"text","text":" "},{"type":"text","text":"delegate using Mutator event API."},{"type":"text","text":" "},{"type":"text","text":"This button is automatically “control state updatable” for"},{"type":"text","text":" "},{"type":"text","text":"theme changes on the button itself and potentially on a"},{"type":"text","text":" "},{"type":"text","text":"background Shape if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button is also Dismissable if “dismissive” is passed."},{"type":"text","text":" "},{"type":"text","text":"This button supports constructing with data on attachment"},{"type":"text","text":" "},{"type":"text","text":"(i.e. via in(..data:) method). The data type to provide"},{"type":"text","text":" "},{"type":"text","text":"is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and optional corner spec. Using this approach will cause a"},{"type":"text","text":" "},{"type":"text","text":"rectangular shape background (that is also control state"},{"type":"text","text":" "},{"type":"text","text":"updatable) to be added. (The rectangle will obtain corner"},{"type":"text","text":" "},{"type":"text","text":"spec if provided.) Passing a theme to in() is optional"},{"type":"text","text":" "},{"type":"text","text":"but preferred (the theme will be applied to the button"},{"type":"text","text":" "},{"type":"text","text":"as well as the shape)."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as per normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"If you prefer to use your own custom shape for this button"},{"type":"text","text":" "},{"type":"text","text":"then do not use the construct-with-data approach or alternatively,"},{"type":"text","text":" "},{"type":"text","text":"override the construct(data:) method. But keep in mind that"},{"type":"text","text":" "},{"type":"text","text":"your custom shape should pass “updatable:true” to ensure"},{"type":"text","text":" "},{"type":"text","text":"it can participate in control state updates."},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.shapes }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyConfirmButton.self > Shape.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton2) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary."},{"type":"text","text":" "},{"type":"text","text":"See also ConfirmButton that supports regular layer backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConfirmButton2","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConfirmButton2"}],"url":"\/documentation\/c3\/confirmbutton2"},"doc://com.davidbjames.C3/documentation/C3/CompositeShape":{"role":"symbol","title":"CompositeShape","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompositeShape"}],"abstract":[{"type":"text","text":"A shape comprised of arbitrary open and closed paths"},{"type":"text","text":" "},{"type":"text","text":"using points of type CGPoint, BezierPoint, Position"},{"type":"text","text":" "},{"type":"text","text":"or Quadrantal, or combinations thereof."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CompositeShape","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CompositeShape"}],"url":"\/documentation\/c3\/compositeshape"},"doc://com.davidbjames.C3/documentation/C3/Polygon":{"role":"symbol","title":"Polygon","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Polygon"}],"abstract":[{"type":"text","text":"Polygon shape with arbitrary number of sides,"},{"type":"text","text":" "},{"type":"text","text":"and “pivotal” option to rest on 1 or 2 points."},{"type":"text","text":" "},{"type":"text","text":"Explicit size provided via span or implicitly"},{"type":"text","text":" "},{"type":"text","text":"based on container. This is a “polygon” in the"},{"type":"text","text":" "},{"type":"text","text":"common sense where sides and angles are evenly"},{"type":"text","text":" "},{"type":"text","text":"distributed around the circumference. Officially,"},{"type":"text","text":" "},{"type":"text","text":"however, a polygon is any plane figure with straight"},{"type":"text","text":" "},{"type":"text","text":"lines – even if irregular. See also CloseSidedShape"},{"type":"text","text":" "},{"type":"text","text":"which supports any type of polygonal shape."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Polygon","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Polygon"}],"url":"\/documentation\/c3\/polygon"},"doc://com.davidbjames.C3/documentation/C3/CloseSidedShape":{"role":"symbol","title":"CloseSidedShape","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CloseSidedShape"}],"abstract":[{"type":"text","text":"Any polygonal shape with straight lines, arbitrary side"},{"type":"text","text":" "},{"type":"text","text":"lengths\/angles specified using relative points."},{"type":"text","text":" "},{"type":"text","text":"Supports absolute sizing or implicit sizing to parent"},{"type":"text","text":" "},{"type":"text","text":"on either or both axes, with optional adjustment."},{"type":"text","text":" "},{"type":"text","text":"Supports rounded corners or smoothing."},{"type":"text","text":" "},{"type":"text","text":"For shapes with bezier curves use ClosedShape"},{"type":"text","text":" "},{"type":"text","text":"instead which supports curved lines."},{"type":"text","text":" "},{"type":"text","text":"For a true symmetric polygon, use Polygon and derivitives."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CloseSidedShape","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CloseSidedShape"}],"url":"\/documentation\/c3\/closesidedshape"},"doc://com.davidbjames.C3/documentation/C3/HorizontalLine":{"role":"symbol","title":"HorizontalLine","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HorizontalLine"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/HorizontalLine","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HorizontalLine"}],"url":"\/documentation\/c3\/horizontalline"},"doc://com.davidbjames.C3/documentation/C3/SystemButton":{"role":"symbol","title":"SystemButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemButton"}],"abstract":[{"type":"text","text":"Class to use when creating non-custom type system buttons"},{"type":"text","text":" "},{"type":"text","text":"such as “infoDark”, “contactAdd” etc."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/SystemButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemButton"}],"url":"\/documentation\/c3\/systembutton"},"doc://com.davidbjames.C3/documentation/C3/Triangle":{"role":"symbol","title":"Triangle","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Triangle"}],"abstract":[{"type":"text","text":"Triangle represents an Isosceles triangle specified with a base edge"},{"type":"text","text":" "},{"type":"text","text":"and two equal side lengths and two equal angles, OR it could represent"},{"type":"text","text":" "},{"type":"text","text":"a custom triangle using relative points (Scalene, Acute, etc)."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Triangle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Triangle"}],"url":"\/documentation\/c3\/triangle"},"doc://com.davidbjames.C3/documentation/C3/VerticalLine":{"role":"symbol","title":"VerticalLine","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"VerticalLine"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/VerticalLine","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VerticalLine"}],"url":"\/documentation\/c3\/verticalline"},"doc://com.davidbjames.C3/documentation/C3/Trapezoid":{"role":"symbol","title":"Trapezoid","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Trapezoid"}],"abstract":[{"type":"text","text":"Any Isocsceles Trapezoid which is a quadrilateral with"},{"type":"text","text":" "},{"type":"text","text":"one pair of parallel sides with the other sides “projecting”"},{"type":"text","text":" "},{"type":"text","text":"inward or outward at equivalent angles. For “acute”,"},{"type":"text","text":" "},{"type":"text","text":"“obtuse” or other less regular types, use CloseSidedShape."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Trapezoid","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Trapezoid"}],"url":"\/documentation\/c3\/trapezoid"},"doc://com.davidbjames.C3/documentation/C3/ControlStateAccessible":{"role":"symbol","title":"ControlStateAccessible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlStateAccessible"}],"abstract":[{"type":"text","text":"Protocol for classes\/protocols that give access"},{"type":"text","text":" "},{"type":"text","text":"to UIControl.state. Currently provided via:"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlStateAccessible"}],"url":"\/documentation\/c3\/controlstateaccessible"},"doc://com.davidbjames.C3/documentation/C3/ConfirmButton":{"role":"symbol","title":"ConfirmButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConfirmButton"}],"abstract":[{"type":"text","text":"ConfirmButton supports firing attached actions and handles"},{"type":"text","text":" "},{"type":"text","text":"dismissing any related ancestor Presentable if initialized"},{"type":"text","text":" "},{"type":"text","text":"with “dismissive”."},{"type":"text","text":" "},{"type":"text","text":"Adhoc actions can be attached to this button or via"},{"type":"text","text":" "},{"type":"text","text":"delegate using Mutator event API."},{"type":"text","text":" "},{"type":"text","text":"This button is automatically “control state updatable”"},{"type":"text","text":" "},{"type":"text","text":"for theme changes on the button itself and potentially on a"},{"type":"text","text":" "},{"type":"text","text":"ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button supports optionally constructing with data on"},{"type":"text","text":" "},{"type":"text","text":"attachment (i.e. via in(..data:) method). The data type to"},{"type":"text","text":" "},{"type":"text","text":"provide is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and whether or not to add a control background."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"Passing a theme to in() is optional but preferred (the theme"},{"type":"text","text":" "},{"type":"text","text":"will be applied to the button as well as the background)."},{"type":"text","text":" "},{"type":"text","text":"The default background type is ControlBackground but you may"},{"type":"text","text":" "},{"type":"text","text":"also use a custom subclass of ControlBackground by subclassing"},{"type":"text","text":" "},{"type":"text","text":"the button class and assigning the new background type to the"},{"type":"text","text":" "},{"type":"text","text":"typealias UpdatableBackground. Example:"},{"type":"text","text":" "},{"type":"text","text":"class MyButton : ConfirmButton { typealias UpdatableBackground = MyBackground }"},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.backgrounds }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyControlButton.self > Background.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary."},{"type":"text","text":" "},{"type":"text","text":"See also CancelButton2 that supports Shape backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConfirmButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConfirmButton"}],"url":"\/documentation\/c3\/confirmbutton"},"doc://com.davidbjames.C3/documentation/C3/Capsule":{"role":"symbol","title":"Capsule","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Capsule"}],"abstract":[{"type":"text","text":"Capsule shape of arbitrary width\/height or implicitly"},{"type":"text","text":" "},{"type":"text","text":"sized on either or both axes of the parent item."},{"type":"text","text":" "},{"type":"text","text":"A “capsule” is a rectangle where the shortest side"},{"type":"text","text":" "},{"type":"text","text":"is rounded so that it looks like a capsule (aka “pill-shape”"},{"type":"text","text":" "},{"type":"text","text":"or like a “race track”)."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Capsule","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Capsule"}],"url":"\/documentation\/c3\/capsule"},"doc://com.davidbjames.C3/documentation/C3/ClosedShape":{"role":"symbol","title":"ClosedShape","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClosedShape"}],"abstract":[{"type":"text","text":"Any closed shape with straight or curved lines"},{"type":"text","text":" "},{"type":"text","text":"using relative points (positions or quadrantals)."},{"type":"text","text":" "},{"type":"text","text":"Supports absolute sizing or implicit sizing to parent"},{"type":"text","text":" "},{"type":"text","text":"on either or both axes, with optional adjustment."},{"type":"text","text":" "},{"type":"text","text":"For straight lined shapes with rounded corners or smoothing"},{"type":"text","text":" "},{"type":"text","text":"use CloseSidedShape instead."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ClosedShape","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClosedShape"}],"url":"\/documentation\/c3\/closedshape"},"doc://com.davidbjames.C3/documentation/C3/ExclusiveControlButton":{"role":"symbol","title":"ExclusiveControlButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExclusiveControlButton"}],"abstract":[{"type":"text","text":"Exclusive buttons support exclusive selection state"},{"type":"text","text":" "},{"type":"text","text":"within a group of sibling Exclusive buttons."},{"type":"text","text":" "},{"type":"text","text":"(Similar to a “radio group” in web programming,"},{"type":"text","text":" "},{"type":"text","text":"and functionally similar to UISegmentedControl.)"},{"type":"text","text":" "},{"type":"text","text":"ExclusiveControlButton is automatically “control state"},{"type":"text","text":" "},{"type":"text","text":"updatable” for theme changes on the button itself and"},{"type":"text","text":" "},{"type":"text","text":"potentially on a ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ExclusiveControlButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExclusiveControlButton"}],"url":"\/documentation\/c3\/exclusivecontrolbutton"},"doc://com.davidbjames.C3/documentation/C3/Slider":{"role":"symbol","title":"Slider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Slider"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Slider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Slider"}],"url":"\/documentation\/c3\/slider"},"doc://com.davidbjames.C3/documentation/C3/Line":{"role":"symbol","title":"Line","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Line"}],"abstract":[{"type":"text","text":"Shape representing a single or multiple segment line"},{"type":"text","text":" "},{"type":"text","text":"(an “open” shape) with straight or curved segments"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"relative"}]},{"type":"text","text":" points within a sized container."},{"type":"text","text":" "},{"type":"text","text":"Lines default to being “flat” which prevents fill or"},{"type":"text","text":" "},{"type":"text","text":"stroke from being auto-expanded via layer Addons."},{"type":"text","text":" "},{"type":"text","text":"See also OpenShape which behaves similar to Line"},{"type":"text","text":" "},{"type":"text","text":"except it is NOT “flat” by default, thereby"},{"type":"text","text":" "},{"type":"text","text":"supporting all Addons."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Line","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Line"}],"url":"\/documentation\/c3\/line"},"doc://com.davidbjames.C3/documentation/C3/FrontShape":{"role":"symbol","title":"FrontShape","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FrontShape"}],"abstract":[{"type":"text","text":"Alias shape layer that represents the foreground"},{"type":"text","text":" "},{"type":"text","text":"shape within a masked hierarchy."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/FrontShape","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FrontShape"}],"url":"\/documentation\/c3\/frontshape"},"doc://com.davidbjames.C3/documentation/C3/Stepper":{"role":"symbol","title":"Stepper","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stepper"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Stepper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Stepper"}],"url":"\/documentation\/c3\/stepper"},"doc://com.davidbjames.C3/documentation/C3/ControlStateAccessible/isFocused":{"role":"symbol","title":"isFocused","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isFocused"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"NOTE: When getting or setting “isFocused” it’s necessary"},{"type":"text","text":" "},{"type":"text","text":"to cast the item type to ensure this “isFocused” is hit"},{"type":"text","text":" "},{"type":"text","text":"because of existence of UIView.isFocused (readonly)."},{"type":"text","text":" "},{"type":"text","text":"Cast using (view is ControlStateAccessible).isFocused."},{"type":"text","text":" "},{"type":"text","text":"With regard to the getter, if focused is not already"},{"type":"text","text":" "},{"type":"text","text":"set on the item (via ControlStateAccessible, etc)"},{"type":"text","text":" "},{"type":"text","text":"this will return the current UIView.isFocused value."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isFocused","kind":"symbol","type":"topic","url":"\/documentation\/c3\/controlstateaccessible\/isfocused"},"doc://com.davidbjames.C3/documentation/C3/Arc":{"role":"symbol","title":"Arc","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Arc"}],"abstract":[{"type":"text","text":"Arc shape of provided diameter or"},{"type":"text","text":" "},{"type":"text","text":"implicitly sized based on container."},{"type":"text","text":" "},{"type":"text","text":"An optional starting angle can be used"},{"type":"text","text":" "},{"type":"text","text":"to start the path arc at a specific point"},{"type":"text","text":" "},{"type":"text","text":"moving clockwise to the end angle."},{"type":"text","text":" "},{"type":"text","text":"The default start angle is 0.0 (right side"},{"type":"text","text":" "},{"type":"text","text":"of circle) and end angle is 180.0 (left side"},{"type":"text","text":" "},{"type":"text","text":"of circle) moving clockwise."},{"type":"text","text":" "},{"type":"text","text":"This type is useful when modifying the"},{"type":"text","text":" "},{"type":"text","text":"strokeStart\/strokeEnd of a path which"},{"type":"text","text":" "},{"type":"text","text":"should begin\/end relative to a specific"},{"type":"text","text":" "},{"type":"text","text":"point on the circle (e.g. with circular"},{"type":"text","text":" "},{"type":"text","text":"progress indicators)."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Arc","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Arc"}],"url":"\/documentation\/c3\/arc"},"doc://com.davidbjames.C3/documentation/C3/Kite":{"role":"symbol","title":"Kite","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Kite"}],"abstract":[{"type":"text","text":"Any Kite shape having four sides of which there are"},{"type":"text","text":" "},{"type":"text","text":"two exclusive pairs of sides (usually top and bottom)"},{"type":"text","text":" "},{"type":"text","text":"of equal length, with kite originating from base"},{"type":"text","text":" "},{"type":"text","text":"edge (default bottom) and relative shift value from"},{"type":"text","text":" "},{"type":"text","text":"center of perpendicular axis."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Kite","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Kite"}],"url":"\/documentation\/c3\/kite"},"doc://com.davidbjames.C3/documentation/C3/SwitchableButton":{"role":"symbol","title":"SwitchableButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchableButton"}],"abstract":[{"type":"text","text":"Switchable buttons support toggling the selected state"},{"type":"text","text":" "},{"type":"text","text":"of the button. Check selected state via “isSelected”."},{"type":"text","text":" "},{"type":"text","text":"(Similar to UISwitch or a “check box” in web programming.)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/SwitchableButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwitchableButton"}],"url":"\/documentation\/c3\/switchablebutton"},"doc://com.davidbjames.C3/documentation/C3/ControlButton2":{"role":"symbol","title":"ControlButton2","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlButton2"}],"abstract":[{"type":"text","text":"ControlButton2 is kind of button that is automatically"},{"type":"text","text":" "},{"type":"text","text":"“control state updatable” for theme changes on the button"},{"type":"text","text":" "},{"type":"text","text":"itself and potentially on a background Shape if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button is also Dismissable if “dismissive” is passed."},{"type":"text","text":" "},{"type":"text","text":"This button supports constructing with data on attachment"},{"type":"text","text":" "},{"type":"text","text":"(i.e. via in(..data:) method). The data type to provide"},{"type":"text","text":" "},{"type":"text","text":"is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and optional corner spec. Using this approach will cause a"},{"type":"text","text":" "},{"type":"text","text":"rectangular shape background (that is also control state"},{"type":"text","text":" "},{"type":"text","text":"updatable) to be added. (The rectangle will obtain corner"},{"type":"text","text":" "},{"type":"text","text":"spec if provided.) Passing a theme to in() is optional"},{"type":"text","text":" "},{"type":"text","text":"but preferred (the theme will be applied to the button"},{"type":"text","text":" "},{"type":"text","text":"as well as the shape)."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as per normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"If you prefer to use your own custom shape for this button"},{"type":"text","text":" "},{"type":"text","text":"then do not use the construct-with-data approach or alternatively,"},{"type":"text","text":" "},{"type":"text","text":"override the construct(data:) method. But keep in mind that"},{"type":"text","text":" "},{"type":"text","text":"your custom shape should pass “updatable:true” to ensure"},{"type":"text","text":" "},{"type":"text","text":"it can participate in control state updates."},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.shapes }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyControlButton.self > Shape.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton2) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary."},{"type":"text","text":" "},{"type":"text","text":"See also ControlButton that supports regular layer backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton2","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlButton2"}],"url":"\/documentation\/c3\/controlbutton2"},"doc://com.davidbjames.C3/documentation/C3/DismissableButton":{"role":"symbol","title":"DismissableButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissableButton"}],"abstract":[{"type":"text","text":"DismissableButton is a button that can indirectly control"},{"type":"text","text":" "},{"type":"text","text":"whether or not Presentable ancestor items dismiss (including"},{"type":"text","text":" "},{"type":"text","text":"firing related actions)."},{"type":"text","text":" "},{"type":"text","text":"Specify “dismissive” on initialization to get this behavior."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/DismissableButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DismissableButton"}],"url":"\/documentation\/c3\/dismissablebutton"},"doc://com.davidbjames.C3/documentation/C3/RightTriangle":{"role":"symbol","title":"RightTriangle","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RightTriangle"}],"abstract":[{"type":"text","text":"Right triangle is a triangle that has one 90º angle,"},{"type":"text","text":" "},{"type":"text","text":"such that it originates from any corner of a square."},{"type":"text","text":" "},{"type":"text","text":"Of the three points that make up the triangle, the"},{"type":"text","text":" "},{"type":"text","text":"first point starts at the corner and the other two"},{"type":"text","text":" "},{"type":"text","text":"points are clockwise from that."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/RightTriangle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RightTriangle"}],"url":"\/documentation\/c3\/righttriangle"},"doc://com.davidbjames.C3/documentation/C3/ShapeMask":{"role":"symbol","title":"ShapeMask","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ShapeMask"}],"abstract":[{"type":"text","text":"Shape mask for non-rectangular masks."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ShapeMask","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ShapeMask"}],"url":"\/documentation\/c3\/shapemask"},"doc://com.davidbjames.C3/documentation/C3/ExclusiveControlButton2":{"role":"symbol","title":"ExclusiveControlButton2","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExclusiveControlButton2"}],"abstract":[{"type":"text","text":"Exclusive buttons support exclusive selection state"},{"type":"text","text":" "},{"type":"text","text":"within a group of sibling Exclusive buttons."},{"type":"text","text":" "},{"type":"text","text":"(Similar to a “radio group” in web programming,"},{"type":"text","text":" "},{"type":"text","text":"and functionally similar to UISegmentedControl.)"},{"type":"text","text":" "},{"type":"text","text":"ExclusiveControlButton2 is automatically “control state"},{"type":"text","text":" "},{"type":"text","text":"updatable” for theme changes on the button itself and"},{"type":"text","text":" "},{"type":"text","text":"potentially on a background Shape if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ExclusiveControlButton2","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExclusiveControlButton2"}],"url":"\/documentation\/c3\/exclusivecontrolbutton2"},"doc://com.davidbjames.C3/documentation/C3/OpenSidedShape":{"role":"symbol","title":"OpenSidedShape","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"OpenSidedShape"}],"abstract":[{"type":"text","text":"Any "},{"type":"emphasis","inlineContent":[{"type":"text","text":"open"}]},{"type":"text","text":" shape with straight lines, arbitrary side"},{"type":"text","text":" "},{"type":"text","text":"lengths\/angles specified using relative points."},{"type":"text","text":" "},{"type":"text","text":"Supports absolute sizing or implicit sizing to parent"},{"type":"text","text":" "},{"type":"text","text":"on either or both axes, with optional adjustment."},{"type":"text","text":" "},{"type":"text","text":"Supports rounded corners or smoothing."},{"type":"text","text":" "},{"type":"text","text":"For open shapes with bezier curves use OpenShape."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/OpenSidedShape","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OpenSidedShape"}],"url":"\/documentation\/c3\/opensidedshape"},"doc://com.davidbjames.C3/documentation/C3/TextField":{"role":"symbol","title":"TextField","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TextField"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/TextField","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TextField"}],"url":"\/documentation\/c3\/textfield"},"doc://com.davidbjames.C3/documentation/C3/ControlStateAccessible/isSelected":{"role":"symbol","title":"isSelected","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isSelected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isSelected","kind":"symbol","type":"topic","url":"\/documentation\/c3\/controlstateaccessible\/isselected"},"doc://com.davidbjames.C3/documentation/C3/AdhocControl":{"role":"symbol","title":"AdhocControl","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdhocControl"}],"abstract":[{"type":"text","text":"Protocol to support updating the appearance of items"},{"type":"text","text":" "},{"type":"text","text":"based on their current state – which includes more"},{"type":"text","text":" "},{"type":"text","text":"than the stock values found in UIControl.State."},{"type":"text","text":" "},{"type":"text","text":"This protocol supports types that are not themselves"},{"type":"text","text":" "},{"type":"text","text":"UIControls but have their own control state,"},{"type":"text","text":" "},{"type":"text","text":"including views, layers and guides. This protocol is"},{"type":"text","text":" "},{"type":"text","text":"considered “adhoc” because it also includes conformance"},{"type":"text","text":" "},{"type":"text","text":"to ControlStateUpdatable which (via it’s default"},{"type":"text","text":" "},{"type":"text","text":"implementation) ensures that control state updates are"},{"type":"text","text":" "},{"type":"text","text":"passed down in order to make visual changes."},{"type":"text","text":" "},{"type":"text","text":"Assuming the default implementation of ControlStateUpdatable"},{"type":"text","text":" "},{"type":"text","text":"is used and the item does not already conform to"},{"type":"text","text":" "},{"type":"text","text":"ThemeAccessible, you will need to conform to ThemeAccessible"},{"type":"text","text":" "},{"type":"text","text":"separately so that the updates can use the appropriate theme."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AdhocControl","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AdhocControl"}],"url":"\/documentation\/c3\/adhoccontrol"},"doc://com.davidbjames.C3/documentation/C3/ControlStateAccessible/isSpecial":{"role":"symbol","title":"isSpecial","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isSpecial"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isSpecial","kind":"symbol","type":"topic","url":"\/documentation\/c3\/controlstateaccessible\/isspecial"},"doc://com.davidbjames.C3/documentation/C3/ControlStateDependentOptional":{"role":"symbol","title":"ControlStateDependentOptional","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlStateDependentOptional"}],"abstract":[{"type":"text","text":"Internal protocol to support certain types to have runtime"},{"type":"text","text":" "},{"type":"text","text":"control over control state dependency."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateDependentOptional","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlStateDependentOptional"}],"url":"\/documentation\/c3\/controlstatedependentoptional"},"doc://com.davidbjames.C3/documentation/C3/CancelButton2":{"role":"symbol","title":"CancelButton2","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancelButton2"}],"abstract":[{"type":"text","text":"CancelButton2 supports canceling and dismissing a related"},{"type":"text","text":" "},{"type":"text","text":"ancestor Presentable if initialized with “dismissive”."},{"type":"text","text":" "},{"type":"text","text":"Adhoc actions can be attached to this button or via"},{"type":"text","text":" "},{"type":"text","text":"delegate using Mutator event API."},{"type":"text","text":" "},{"type":"text","text":"This button is automatically “control state updatable” for"},{"type":"text","text":" "},{"type":"text","text":"theme changes on the button itself and potentially on a"},{"type":"text","text":" "},{"type":"text","text":"background Shape if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button is also Dismissable if “dismissive” is passed."},{"type":"text","text":" "},{"type":"text","text":"This button supports constructing with data on attachment"},{"type":"text","text":" "},{"type":"text","text":"(i.e. via in(..data:) method). The data type to provide"},{"type":"text","text":" "},{"type":"text","text":"is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and optional corner spec. Using this approach will cause a"},{"type":"text","text":" "},{"type":"text","text":"rectangular shape background (that is also control state"},{"type":"text","text":" "},{"type":"text","text":"updatable) to be added. (The rectangle will obtain corner"},{"type":"text","text":" "},{"type":"text","text":"spec if provided.) Passing a theme to in() is optional"},{"type":"text","text":" "},{"type":"text","text":"but preferred (the theme will be applied to the button"},{"type":"text","text":" "},{"type":"text","text":"as well as the shape)."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as per normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"If you prefer to use your own custom shape for this button"},{"type":"text","text":" "},{"type":"text","text":"then do not use the construct-with-data approach or alternatively,"},{"type":"text","text":" "},{"type":"text","text":"override the construct(data:) method. But keep in mind that"},{"type":"text","text":" "},{"type":"text","text":"your custom shape should pass “updatable:true” to ensure"},{"type":"text","text":" "},{"type":"text","text":"it can participate in control state updates."},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.shapes }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyCancelButton.self > Shape.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton2) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary. You will also"},{"type":"text","text":" "},{"type":"text","text":"probably want to conform to DismissableButtonConfigurable"},{"type":"text","text":" "},{"type":"text","text":"to get the tap action to dismiss."},{"type":"text","text":" "},{"type":"text","text":"See also CancelButton that supports regular layer backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CancelButton2","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CancelButton2"}],"url":"\/documentation\/c3\/cancelbutton2"},"doc://com.davidbjames.C3/documentation/C3/EquiTriangle":{"role":"symbol","title":"EquiTriangle","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EquiTriangle"}],"abstract":[{"type":"text","text":"Equilateral triangle is a triangle of equal side lengths and"},{"type":"text","text":" "},{"type":"text","text":"interior angles (60º). It is a fixed ratio shape ->"},{"type":"text","text":" "},{"type":"text","text":"1.0 (base) : 1.167 (length) (vertex to opposite corner)."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/EquiTriangle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EquiTriangle"}],"url":"\/documentation\/c3\/equitriangle"},"doc://com.davidbjames.C3/documentation/C3/AdhocLine":{"role":"symbol","title":"AdhocLine","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdhocLine"}],"abstract":[{"type":"text","text":"Shape representing a single or multiple segment line"},{"type":"text","text":" "},{"type":"text","text":"(an “open” shape) with straight or curved using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"absolute"}]},{"type":"text","text":" "},{"type":"text","text":"points within a sized container."},{"type":"text","text":" "},{"type":"text","text":"Lines default to being “flat” which prevents fill or"},{"type":"text","text":" "},{"type":"text","text":"stroke from being auto-expanded via layer Addons."},{"type":"text","text":" "},{"type":"text","text":"See also AdhocShape which behaves similar to AdhocLine"},{"type":"text","text":" "},{"type":"text","text":"except it is NOT “flat” by default, thereby supporting"},{"type":"text","text":" "},{"type":"text","text":"all Addons."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AdhocLine","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AdhocLine"}],"url":"\/documentation\/c3\/adhocline"},"doc://com.davidbjames.C3/documentation/C3/Ellipse":{"role":"symbol","title":"Ellipse","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Ellipse"}],"abstract":[{"type":"text","text":"Elliptical shape of arbitrary width\/height or"},{"type":"text","text":" "},{"type":"text","text":"implicitly sized to container. See also Oval"},{"type":"text","text":" "},{"type":"text","text":"if you want the classic oval ratio."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Ellipse","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Ellipse"}],"url":"\/documentation\/c3\/ellipse"},"doc://com.davidbjames.C3/documentation/C3/ControlStateAccessible/isHighlighted":{"role":"symbol","title":"isHighlighted","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isHighlighted"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/isHighlighted","kind":"symbol","type":"topic","url":"\/documentation\/c3\/controlstateaccessible\/ishighlighted"},"doc://com.davidbjames.C3/documentation/C3/TileMatrix":{"role":"symbol","title":"TileMatrix","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TileMatrix"}],"abstract":[{"type":"text","text":"Class representing a matrix of tiles spread evenly"},{"type":"text","text":" "},{"type":"text","text":"within a containing layer or shape, providing"},{"type":"text","text":" "},{"type":"text","text":"optional number of tiles, offset between tiles,"},{"type":"text","text":" "},{"type":"text","text":"tile size and a visitor closure with which to"},{"type":"text","text":" "},{"type":"text","text":"decorate the tiles. Provide “variations” to get"},{"type":"text","text":" "},{"type":"text","text":"an index given to closure to determine how to decorate."},{"type":"text","text":" "},{"type":"text","text":"This class is not intended for public use (though"},{"type":"text","text":" "},{"type":"text","text":"you can if you want). Use the Mutator.tile* API."},{"type":"text","text":" "},{"type":"text","text":"e.g. myView.mutate.tiles(number:[5,4]) { mutator, index in .. }"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/TileMatrix","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TileMatrix"}],"url":"\/documentation\/c3\/tilematrix"},"doc://com.davidbjames.C3/documentation/C3/CustomControl":{"role":"symbol","title":"CustomControl","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomControl"}],"abstract":[{"type":"text","text":"Protocol to support updating the appearance of items"},{"type":"text","text":" "},{"type":"text","text":"based on their current state – which includes more"},{"type":"text","text":" "},{"type":"text","text":"than the stock values found in UIControl.State."},{"type":"text","text":" "},{"type":"text","text":"This protocol supports types that are not themselves"},{"type":"text","text":" "},{"type":"text","text":"UIControls but have their own control state,"},{"type":"text","text":" "},{"type":"text","text":"including views, layers and guides."},{"type":"text","text":" "},{"type":"text","text":"(NOTE: UIControls also support extended states.)"},{"type":"text","text":" "},{"type":"text","text":"For views, see also ControlView which is a thin wrapper"},{"type":"text","text":" "},{"type":"text","text":"to UIControl including automatic control state updates"},{"type":"text","text":" "},{"type":"text","text":"on enable\/highlight\/select."},{"type":"text","text":" "},{"type":"text","text":"To actually receive updates for state changes, it’s necessary"},{"type":"text","text":" "},{"type":"text","text":"to also conform to one of the ControlStateUpdatable protocols."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CustomControl","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CustomControl"}],"url":"\/documentation\/c3\/customcontrol"},"doc://com.davidbjames.C3/documentation/C3/Star":{"role":"symbol","title":"Star","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Star"}],"abstract":[{"type":"text","text":"Star shape with arbitrary number of points,"},{"type":"text","text":" "},{"type":"text","text":"point sharpness, and pivot (sits on 1 or 2 points)."},{"type":"text","text":" "},{"type":"text","text":"Explicit size provided via span or implicitly"},{"type":"text","text":" "},{"type":"text","text":"based on container."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Star","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Star"}],"url":"\/documentation\/c3\/star"},"doc://com.davidbjames.C3/documentation/C3/OpenShape":{"role":"symbol","title":"OpenShape","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"OpenShape"}],"abstract":[{"type":"text","text":"Any "},{"type":"emphasis","inlineContent":[{"type":"text","text":"open"}]},{"type":"text","text":" shape with straight or curved lines"},{"type":"text","text":" "},{"type":"text","text":"using relative points (positions or quadrantals)."},{"type":"text","text":" "},{"type":"text","text":"Supports absolute sizing or implicit sizing to parent"},{"type":"text","text":" "},{"type":"text","text":"on either or both axes, with optional adjustment."},{"type":"text","text":" "},{"type":"text","text":"For straight lined shapes with rounded corners or smoothing"},{"type":"text","text":" "},{"type":"text","text":"use OpenSidedShape instead. See also Line w\/other initialization"},{"type":"text","text":" "},{"type":"text","text":"options. Very similar to this except Line is “flat” by default."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/OpenShape","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OpenShape"}],"url":"\/documentation\/c3\/openshape"},"doc://com.davidbjames.C3/documentation/C3/AdhocHorizontalLine":{"role":"symbol","title":"AdhocHorizontalLine","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdhocHorizontalLine"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AdhocHorizontalLine","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AdhocHorizontalLine"}],"url":"\/documentation\/c3\/adhochorizontalline"},"doc://com.davidbjames.C3/documentation/C3/AnyFlexibleShape":{"role":"symbol","title":"AnyFlexibleShape","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyFlexibleShape"}],"abstract":[{"type":"text","text":"Any flexibly sized shape provided from a complete path."},{"type":"text","text":" "},{"type":"text","text":"Aspect ratio is NOT maintained when sized."},{"type":"text","text":" "},{"type":"text","text":"(Use AnyShape to maintain aspect ratio.)"},{"type":"text","text":" "},{"type":"text","text":"Supports absolute sizing or implicit sizing to parent"},{"type":"text","text":" "},{"type":"text","text":"on either or both axes, with optional adjustment."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyFlexibleShape","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyFlexibleShape"}],"url":"\/documentation\/c3\/anyflexibleshape"},"doc://com.davidbjames.C3/documentation/C3/ControlButton":{"role":"symbol","title":"ControlButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlButton"}],"abstract":[{"type":"text","text":"ControlButton is kind of button that is automatically"},{"type":"text","text":" "},{"type":"text","text":"“control state updatable” for theme changes on the button"},{"type":"text","text":" "},{"type":"text","text":"itself and potentially on a ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button is also Dismissable if “dismissive” is passed."},{"type":"text","text":" "},{"type":"text","text":"This button supports optionally constructing with data on"},{"type":"text","text":" "},{"type":"text","text":"attachment (i.e. via in(..data:) method). The data type to"},{"type":"text","text":" "},{"type":"text","text":"provide is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and whether or not to add a control background."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"Passing a theme to in() is optional but preferred (the theme"},{"type":"text","text":" "},{"type":"text","text":"will be applied to the button as well as the background)."},{"type":"text","text":" "},{"type":"text","text":"The default background type is ControlBackground but you may"},{"type":"text","text":" "},{"type":"text","text":"also use a custom subclass of ControlBackground by subclassing"},{"type":"text","text":" "},{"type":"text","text":"the button class and assigning the new background type to the"},{"type":"text","text":" "},{"type":"text","text":"typealias UpdatableBackground. Example:"},{"type":"text","text":" "},{"type":"text","text":"class MyButton : ConfirmButton { typealias UpdatableBackground = MyBackground }"},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.backgrounds }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyControlButton.self > Background.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary."},{"type":"text","text":" "},{"type":"text","text":"See also ControlButton2 that supports Shape based backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlButton"}],"url":"\/documentation\/c3\/controlbutton"},"doc://com.davidbjames.C3/documentation/C3/ControlStateMutable":{"role":"symbol","title":"ControlStateMutable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlStateMutable"}],"abstract":[{"type":"text","text":"Flag protocol for items that both get and set"},{"type":"text","text":" "},{"type":"text","text":"control state (including UIControl and CustomControl)."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateMutable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlStateMutable"}],"url":"\/documentation\/c3\/controlstatemutable"},"doc://com.davidbjames.C3/documentation/C3/AdhocVerticalLine":{"role":"symbol","title":"AdhocVerticalLine","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdhocVerticalLine"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AdhocVerticalLine","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AdhocVerticalLine"}],"url":"\/documentation\/c3\/adhocverticalline"},"doc://com.davidbjames.C3/documentation/C3/DatePicker":{"role":"symbol","title":"DatePicker","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatePicker"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/DatePicker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatePicker"}],"url":"\/documentation\/c3\/datepicker"},"doc://com.davidbjames.C3/documentation/C3/AdhocShape":{"role":"symbol","title":"AdhocShape","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdhocShape"}],"abstract":[{"type":"text","text":"Adhoc shape with array of absolute points (straight lines)"},{"type":"text","text":" "},{"type":"text","text":"or array of bezier points (straight or curved lines)."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AdhocShape","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AdhocShape"}],"url":"\/documentation\/c3\/adhocshape"},"doc://com.davidbjames.C3/documentation/C3/Segmented":{"role":"symbol","title":"Segmented","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Segmented"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Segmented","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Segmented"}],"url":"\/documentation\/c3\/segmented"},"doc://com.davidbjames.C3/documentation/C3/Diamond":{"role":"symbol","title":"Diamond","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Diamond"}],"abstract":[{"type":"text","text":"Diamond shape of arbitrary size on either axis or"},{"type":"text","text":" "},{"type":"text","text":"implicitly sized to parent on either or both axes."},{"type":"text","text":" "},{"type":"text","text":"Shape is constructed by making 4 points at the"},{"type":"text","text":" "},{"type":"text","text":"middle of each side."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Diamond","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Diamond"}],"url":"\/documentation\/c3\/diamond"},"doc://com.davidbjames.C3/documentation/C3/PageControl":{"role":"symbol","title":"PageControl","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PageControl"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/PageControl","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PageControl"}],"url":"\/documentation\/c3\/pagecontrol"},"doc://com.davidbjames.C3/documentation/C3/CancelButton":{"role":"symbol","title":"CancelButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancelButton"}],"abstract":[{"type":"text","text":"CancelButton supports canceling and dismissing a related"},{"type":"text","text":" "},{"type":"text","text":"ancestor Presentable if initialized with “dismissive”."},{"type":"text","text":" "},{"type":"text","text":"Adhoc actions can be attached to this button or via"},{"type":"text","text":" "},{"type":"text","text":"delegate using Mutator event API."},{"type":"text","text":" "},{"type":"text","text":"This button is automatically “control state updatable”"},{"type":"text","text":" "},{"type":"text","text":"for theme changes on the button itself and potentially on a"},{"type":"text","text":" "},{"type":"text","text":"ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button supports optionally constructing with data on"},{"type":"text","text":" "},{"type":"text","text":"attachment (i.e. via in(..data:) method). The data type to"},{"type":"text","text":" "},{"type":"text","text":"provide is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and whether or not to add a control background."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"Passing a theme to in() is optional but preferred (the theme"},{"type":"text","text":" "},{"type":"text","text":"will be applied to the button as well as the background)."},{"type":"text","text":" "},{"type":"text","text":"The default background type is ControlBackground but you may"},{"type":"text","text":" "},{"type":"text","text":"also use a custom subclass of ControlBackground by subclassing"},{"type":"text","text":" "},{"type":"text","text":"the button class and assigning the new background type to the"},{"type":"text","text":" "},{"type":"text","text":"typealias UpdatableBackground. Example:"},{"type":"text","text":" "},{"type":"text","text":"class MyButton : CancelButton { typealias UpdatableBackground = MyBackground }"},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.backgrounds }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyCancelButton.self > Background.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary. You will also"},{"type":"text","text":" "},{"type":"text","text":"probably want to conform to DismissableButtonConfigurable"},{"type":"text","text":" "},{"type":"text","text":"to get the tap action to dismiss."},{"type":"text","text":" "},{"type":"text","text":"See also CancelButton2 that supports Shape backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CancelButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CancelButton"}],"url":"\/documentation\/c3\/cancelbutton"},"doc://com.davidbjames.C3/documentation/C3/Rectangle":{"role":"symbol","title":"Rectangle","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rectangle"}],"abstract":[{"type":"text","text":"Rectangle shape of arbitrary width\/height or"},{"type":"text","text":" "},{"type":"text","text":"implicitly sized to fill container."},{"type":"text","text":" "},{"type":"text","text":"Optionally provide corner radius and specify"},{"type":"text","text":" "},{"type":"text","text":"which corners are rounded. If corner radius"},{"type":"text","text":" "},{"type":"text","text":"not specified and corners is other than []"},{"type":"text","text":" "},{"type":"text","text":"this will attempt to obtain the corner radius"},{"type":"text","text":" "},{"type":"text","text":"from the container."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Rectangle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Rectangle"}],"url":"\/documentation\/c3\/rectangle"},"doc://com.davidbjames.C3/documentation/C3/ControlStateDependent":{"role":"symbol","title":"ControlStateDependent","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlStateDependent"}],"abstract":[{"type":"text","text":"Protocol to support updating the appearance of a dependent"},{"type":"text","text":" "},{"type":"text","text":"item based on the control state of another item."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of this protocol presumes the item"},{"type":"text","text":" "},{"type":"text","text":"with control state is an ancestor, and returns the first"},{"type":"text","text":" "},{"type":"text","text":"ancestor which has a control state. Or, override this method to"},{"type":"text","text":" "},{"type":"text","text":"query for the control state item from anywhere else in the hierarchy."},{"type":"text","text":" "},{"type":"text","text":"Example: a Rectangle may be styled based on the state of it’s containing Button."},{"type":"text","text":" "},{"type":"text","text":"To achieve this, the Button would probably conform to ControlStateUpdatable."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateDependent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlStateDependent"}],"url":"\/documentation\/c3\/controlstatedependent"},"doc://com.davidbjames.C3/documentation/C3/ControlBackgroundView":{"role":"symbol","title":"ControlBackgroundView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlBackgroundView"}],"abstract":[{"type":"text","text":"A BackgroundView (in every other sense) that is also dependent"},{"type":"text","text":" "},{"type":"text","text":"on ancestor’s control state for the purpose of styling."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlBackgroundView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlBackgroundView"}],"url":"\/documentation\/c3\/controlbackgroundview"},"doc://com.davidbjames.C3/documentation/C3/FlexibleTextShape":{"role":"symbol","title":"FlexibleTextShape","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlexibleTextShape"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/FlexibleTextShape","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlexibleTextShape"}],"url":"\/documentation\/c3\/flexibletextshape"},"doc://com.davidbjames.C3/documentation/C3/ExclusiveButton":{"role":"symbol","title":"ExclusiveButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExclusiveButton"}],"abstract":[{"type":"text","text":"Exclusive buttons support exclusive selection state"},{"type":"text","text":" "},{"type":"text","text":"within a group of sibling Exclusive buttons."},{"type":"text","text":" "},{"type":"text","text":"(Similar to a “radio group” in web programming,"},{"type":"text","text":" "},{"type":"text","text":"and functionally similar to UISegmentedControl.)"},{"type":"text","text":" "},{"type":"text","text":"To ensure independent handling of separate groups"},{"type":"text","text":" "},{"type":"text","text":"make sure each group is within it’s own parent view"},{"type":"text","text":" "},{"type":"text","text":"or, at a minimum, layout guide."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ExclusiveButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExclusiveButton"}],"url":"\/documentation\/c3\/exclusivebutton"},"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/documentation/C3/Shape":{"role":"symbol","title":"Shape","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Shape"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Shape","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Shape"}],"url":"\/documentation\/c3\/shape"},"doc://com.davidbjames.C3/documentation/C3/SwitchableControlButton":{"role":"symbol","title":"SwitchableControlButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchableControlButton"}],"abstract":[{"type":"text","text":"Switchable buttons support toggling the selected state"},{"type":"text","text":" "},{"type":"text","text":"of the button. Check selected state via “isSelected”."},{"type":"text","text":" "},{"type":"text","text":"(Similar to UISwitch or a “check box” in web programming.)"},{"type":"text","text":" "},{"type":"text","text":"SwitchableControlButton is automatically “control state"},{"type":"text","text":" "},{"type":"text","text":"updatable” for theme changes on the button itself and"},{"type":"text","text":" "},{"type":"text","text":"potentially on a ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/SwitchableControlButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwitchableControlButton"}],"url":"\/documentation\/c3\/switchablecontrolbutton"},"doc://com.davidbjames.C3/documentation/C3/Circle":{"role":"symbol","title":"Circle","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Circle"}],"abstract":[{"type":"text","text":"Circle shape of provided diameter or"},{"type":"text","text":" "},{"type":"text","text":"implicitly sized based on container."},{"type":"text","text":" "},{"type":"text","text":"An optional starting angle can be used"},{"type":"text","text":" "},{"type":"text","text":"to start the path arc at a specific point"},{"type":"text","text":" "},{"type":"text","text":"moving clockwise to the end point."},{"type":"text","text":" "},{"type":"text","text":"This is useful when modifying the"},{"type":"text","text":" "},{"type":"text","text":"strokeStart\/strokeEnd of a path which"},{"type":"text","text":" "},{"type":"text","text":"should begin\/end relative to a specific"},{"type":"text","text":" "},{"type":"text","text":"point on the circle (e.g. with circular"},{"type":"text","text":" "},{"type":"text","text":"progress indicators)."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Circle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Circle"}],"url":"\/documentation\/c3\/circle"},"doc://com.davidbjames.C3/documentation/C3/Square":{"role":"symbol","title":"Square","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Square"}],"abstract":[{"type":"text","text":"Simple Square shape with arbitrary size as"},{"type":"text","text":" "},{"type":"text","text":"span (width and height) or conforming to edge"},{"type":"text","text":" "},{"type":"text","text":"of container maintaining 1:1 ratio."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Square","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Square"}],"url":"\/documentation\/c3\/square"},"doc://com.davidbjames.C3/documentation/C3/TextShape":{"role":"symbol","title":"TextShape","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TextShape"}],"abstract":[{"type":"text","text":"A fixed ratio shape based on arbitrary text (and font)"},{"type":"text","text":" "},{"type":"text","text":"converted to a path, with aspect ratio being maintained"},{"type":"text","text":" "},{"type":"text","text":"when sized."},{"type":"text","text":" "},{"type":"text","text":"Supports absolute sizing on either (but not both) axes"},{"type":"text","text":" "},{"type":"text","text":"or implicit sizing relative to either (but not both)"},{"type":"text","text":" "},{"type":"text","text":"axes of the container item, with optional adjustment."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/TextShape","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TextShape"}],"url":"\/documentation\/c3\/textshape"},"doc://com.davidbjames.C3/documentation/C3/SnapshotOf":{"role":"symbol","title":"SnapshotOf","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SnapshotOf"}],"abstract":[{"type":"text","text":"Wrapper to create and store an underlying view snapshot."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/SnapshotOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SnapshotOf"}],"url":"\/documentation\/c3\/snapshotof"},"doc://com.davidbjames.C3/documentation/C3/Heptagon":{"role":"symbol","title":"Heptagon","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Heptagon"}],"abstract":[{"type":"text","text":"Heptagon with 7 sides."},{"type":"text","text":" "},{"type":"text","text":"Explicit size provided via span or implicitly"},{"type":"text","text":" "},{"type":"text","text":"based on container."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Heptagon","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Heptagon"}],"url":"\/documentation\/c3\/heptagon"},"doc://com.davidbjames.C3/documentation/C3/Paragram":{"role":"symbol","title":"Paragram","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Paragram"}],"abstract":[{"type":"text","text":"Any Parallelogram having four sides with opposite"},{"type":"text","text":" "},{"type":"text","text":"parallel sides slanted one way or the other based"},{"type":"text","text":" "},{"type":"text","text":"on provided “slant” which is a positive or negative"},{"type":"text","text":" "},{"type":"text","text":"relative value on the side being slanted."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Paragram","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Paragram"}],"url":"\/documentation\/c3\/paragram"},"doc://com.davidbjames.C3/documentation/C3/ControlView":{"role":"symbol","title":"ControlView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlView"}],"abstract":[{"type":"text","text":"Basic wrapper to UIControl, supporting control state updates."},{"type":"text","text":" "},{"type":"text","text":"See also CustomControl protocol which also supports layers"},{"type":"text","text":" "},{"type":"text","text":"and guides, in addition to views; and may avoid side-effects"},{"type":"text","text":" "},{"type":"text","text":"related to using a UIControl in some cases."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlView"}],"url":"\/documentation\/c3\/controlview"},"doc://com.davidbjames.C3/documentation/C3/Hexagon":{"role":"symbol","title":"Hexagon","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Hexagon"}],"abstract":[{"type":"text","text":"Hexagon with 6 sides."},{"type":"text","text":" "},{"type":"text","text":"Explicit size provided via span or implicitly"},{"type":"text","text":" "},{"type":"text","text":"based on container."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Hexagon","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Hexagon"}],"url":"\/documentation\/c3\/hexagon"},"doc://com.davidbjames.C3/documentation/C3/ControlStateAccessible/controlState":{"defaultImplementations":1,"role":"symbol","title":"controlState","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"controlState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UIControl","preciseIdentifier":"c:objc(cs)UIControl"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"c:@E@UIControlState"}],"abstract":[{"type":"text","text":"Per UIControl, controlState is readonly."},{"type":"text","text":" "},{"type":"text","text":"Set control state via one of the accessors (e.g. isEnabled)."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAccessible\/controlState","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/c3\/controlstateaccessible\/controlstate"},"doc://com.davidbjames.C3/documentation/C3/ControlBackground":{"role":"symbol","title":"ControlBackground","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlBackground"}],"abstract":[{"type":"text","text":"A Background (in every other sense) that is also dependent"},{"type":"text","text":" "},{"type":"text","text":"on ancestor’s control state for the purpose of styling."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlBackground","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlBackground"}],"url":"\/documentation\/c3\/controlbackground"},"doc://com.davidbjames.C3/documentation/C3/Pentagon":{"role":"symbol","title":"Pentagon","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pentagon"}],"abstract":[{"type":"text","text":"Pentagon with 5 sides."},{"type":"text","text":" "},{"type":"text","text":"Explicit size provided via span or implicitly"},{"type":"text","text":" "},{"type":"text","text":"based on container."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Pentagon","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Pentagon"}],"url":"\/documentation\/c3\/pentagon"},"doc://com.davidbjames.C3/documentation/C3/SwitchableControllButton2":{"role":"symbol","title":"SwitchableControllButton2","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchableControllButton2"}],"abstract":[{"type":"text","text":"Switchable buttons support toggling the selected state"},{"type":"text","text":" "},{"type":"text","text":"of the button. Check selected state via “isSelected”."},{"type":"text","text":" "},{"type":"text","text":"(Similar to UISwitch or a “check box” in web programming.)"},{"type":"text","text":" "},{"type":"text","text":"SwitchableControlButton2 is automatically “control state"},{"type":"text","text":" "},{"type":"text","text":"updatable” for theme changes on the button itself and"},{"type":"text","text":" "},{"type":"text","text":"potentially on a background Shape if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/SwitchableControllButton2","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwitchableControllButton2"}],"url":"\/documentation\/c3\/switchablecontrollbutton2"},"doc://com.davidbjames.C3/documentation/C3/Switch":{"role":"symbol","title":"Switch","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Switch"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Switch","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Switch"}],"url":"\/documentation\/c3\/switch"}}}