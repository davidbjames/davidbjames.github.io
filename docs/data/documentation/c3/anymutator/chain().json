{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chain"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/anymutator\/chain()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyMutator\/chain()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"QueryChainable.chain()"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"chain()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chain"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"method","externalID":"s:2C314QueryChainablePAAE5chainxyF::SYNTHESIZED::s:2C310AnyMutatorV","extendedModule":"C3","modules":[{"name":"C3"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyMutator","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyMutator\/QueryChainable-Implementations"]]},"references":{"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/documentation/C3/AnyMutator/chain()":{"role":"symbol","title":"chain()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chain"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyMutator\/chain()","kind":"symbol","type":"topic","url":"\/documentation\/c3\/anymutator\/chain()"},"doc://com.davidbjames.C3/documentation/C3/AnyMutator/QueryChainable-Implementations":{"role":"collectionGroup","title":"QueryChainable Implementations","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyMutator\/QueryChainable-Implementations","kind":"article","type":"topic","url":"\/documentation\/c3\/anymutator\/querychainable-implementations"},"doc://com.davidbjames.C3/documentation/C3/AnyMutator":{"role":"symbol","title":"AnyMutator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyMutator"}],"abstract":[{"type":"text","text":"AnyMutator is a typesafe wrapper to "},{"type":"emphasis","inlineContent":[{"type":"text","text":"most"}]},{"type":"text","text":" of the mutator interface."},{"type":"text","text":" "},{"type":"text","text":"It supports using either wrapper – Mutator or AutoLayout –"},{"type":"text","text":" "},{"type":"text","text":"dynamically where code supports either one, without running"},{"type":"text","text":" "},{"type":"text","text":"into compiler errors related to protocols with associated"},{"type":"text","text":" "},{"type":"text","text":"types – a.k.a. “PATs”)."},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: References and other Query state can "},{"type":"emphasis","inlineContent":[{"type":"text","text":"only"}]},{"type":"text","text":" be set"},{"type":"text","text":" "},{"type":"text","text":"on the original Mutator\/AutoLayout wrapper used to instantiate"},{"type":"text","text":" "},{"type":"text","text":"AnyMutator. It’s not possible to change the query state"},{"type":"text","text":" "},{"type":"text","text":"(including using references) via AnyMutator because the original"},{"type":"text","text":" "},{"type":"text","text":"mutator is captured at initialization and cannot be altered."},{"type":"text","text":" "},{"type":"text","text":"PERFORMANCE: Initial tests show that initialization of AnyMutator"},{"type":"text","text":" "},{"type":"text","text":"is relatively cheap, so generally, don’t worry. However, in"},{"type":"text","text":" "},{"type":"text","text":"situations where AnyMutator is constructed repeatedly and often,"},{"type":"text","text":" "},{"type":"text","text":"you may want to profile to ensure no performance issues,"},{"type":"text","text":" "},{"type":"text","text":"and if so, resort to using concrete mutators instead."},{"type":"text","text":" "},{"type":"text","text":"Using AnyMutator in chained situations (what it’s intended for)"},{"type":"text","text":" "},{"type":"text","text":"is not a problem since the initialization only occurs once."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AnyMutator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyMutator"}],"url":"\/documentation\/c3\/anymutator"}}}