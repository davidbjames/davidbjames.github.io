{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"identify"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"closure"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/IdentifiableItem","preciseIdentifier":"s:2C316IdentifiableItemP","text":"IdentifiableItem"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/autoidentifiable\/identify(_:)-24qej"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoIdentifiable\/identify(_:)-24qej","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Set the identifier using closure, passing the auto-id"},{"type":"text","text":" "},{"type":"text","text":"(via autoIdentifier), altering that id in some way and"},{"type":"text","text":" "},{"type":"text","text":"returning an IdentifiableItem."},{"type":"text","text":" "},{"type":"text","text":"Example: Spacer().identify { InternalIdentifier.spacer(uid:$0) }"}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"identify(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"identify"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"IdentifiableItem","preciseIdentifier":"s:2C316IdentifiableItemP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"method","externalID":"s:2C316AutoIdentifiablePA2A0C0RzrlE8identifyyxAA0C4Item_pSSXEF","extendedModule":"C3","modules":[{"name":"C3"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoIdentifiable"]]},"references":{"doc://com.davidbjames.C3/documentation/C3/AutoIdentifiable":{"role":"symbol","title":"AutoIdentifiable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutoIdentifiable"}],"abstract":[{"type":"text","text":"Protocol for objects that can be automatically identified"},{"type":"text","text":" "},{"type":"text","text":"based on another object or itself. Override any method"},{"type":"text","text":" "},{"type":"text","text":"to control how that identification occurs."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoIdentifiable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AutoIdentifiable"}],"url":"\/documentation\/c3\/autoidentifiable"},"doc://com.davidbjames.C3/documentation/C3/AutoIdentifiable/identify(_:)-24qej":{"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"identify(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"identify"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"IdentifiableItem","preciseIdentifier":"s:2C316IdentifiableItemP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Set the identifier using closure, passing the auto-id"},{"type":"text","text":" "},{"type":"text","text":"(via autoIdentifier), altering that id in some way and"},{"type":"text","text":" "},{"type":"text","text":"returning an IdentifiableItem."},{"type":"text","text":" "},{"type":"text","text":"Example: Spacer().identify { InternalIdentifier.spacer(uid:$0) }"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoIdentifiable\/identify(_:)-24qej","kind":"symbol","type":"topic","url":"\/documentation\/c3\/autoidentifiable\/identify(_:)-24qej"},"doc://com.davidbjames.C3/documentation/C3/IdentifiableItem":{"role":"symbol","title":"IdentifiableItem","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiableItem"}],"abstract":[{"type":"text","text":"Public protocol for any item that can have an id"},{"type":"text","text":" "},{"type":"text","text":"and a label to be used with identifiable queries."},{"type":"text","text":" "},{"type":"text","text":"Clients can create their own registry of ids"},{"type":"text","text":" "},{"type":"text","text":"via enum or struct as long as it conforms to this protocol."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/IdentifiableItem","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IdentifiableItem"}],"url":"\/documentation\/c3\/identifiableitem"},"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"}}}