{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataModelContainer"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/datamodelcontainer"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConstructibleWithData","doc:\/\/com.davidbjames.C3\/documentation\/C3\/LiveWithData","doc:\/\/com.davidbjames.C3\/documentation\/C3\/PresentableWithData","doc:\/\/com.davidbjames.C3\/documentation\/C3\/UpdatableWithData"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/CancelButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/CancelButton2","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ColorSwatch","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConfirmButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConfirmButton2","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton2"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/DataModelContainer","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An abstract user interface container of a model"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataModelContainer"}],"title":"DataModelContainer","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:2C318DataModelContainerP","modules":[{"name":"C3"}],"navigatorTitle":[{"kind":"identifier","text":"DataModelContainer"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/DataModelContainer\/Model"]}],"references":{"doc://com.davidbjames.C3/documentation/C3/ControlButton":{"role":"symbol","title":"ControlButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlButton"}],"abstract":[{"type":"text","text":"ControlButton is kind of button that is automatically"},{"type":"text","text":" "},{"type":"text","text":"“control state updatable” for theme changes on the button"},{"type":"text","text":" "},{"type":"text","text":"itself and potentially on a ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button is also Dismissable if “dismissive” is passed."},{"type":"text","text":" "},{"type":"text","text":"This button supports optionally constructing with data on"},{"type":"text","text":" "},{"type":"text","text":"attachment (i.e. via in(..data:) method). The data type to"},{"type":"text","text":" "},{"type":"text","text":"provide is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and whether or not to add a control background."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"Passing a theme to in() is optional but preferred (the theme"},{"type":"text","text":" "},{"type":"text","text":"will be applied to the button as well as the background)."},{"type":"text","text":" "},{"type":"text","text":"The default background type is ControlBackground but you may"},{"type":"text","text":" "},{"type":"text","text":"also use a custom subclass of ControlBackground by subclassing"},{"type":"text","text":" "},{"type":"text","text":"the button class and assigning the new background type to the"},{"type":"text","text":" "},{"type":"text","text":"typealias UpdatableBackground. Example:"},{"type":"text","text":" "},{"type":"text","text":"class MyButton : ConfirmButton { typealias UpdatableBackground = MyBackground }"},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.backgrounds }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyControlButton.self > Background.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary."},{"type":"text","text":" "},{"type":"text","text":"See also ControlButton2 that supports Shape based backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlButton"}],"url":"\/documentation\/c3\/controlbutton"},"doc://com.davidbjames.C3/documentation/C3/ConstructibleWithData":{"role":"symbol","title":"ConstructibleWithData","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstructibleWithData"}],"abstract":[{"type":"text","text":"Any item\/hierarchy that requires independent construction"},{"type":"text","text":" "},{"type":"text","text":"beyond basic layout, and requires a data model to"},{"type":"text","text":" "},{"type":"text","text":"determine it’s presentation."},{"type":"text","text":" "},{"type":"text","text":"The data array is usually passed via “in()” method."},{"type":"text","text":" "},{"type":"text","text":"If the data array passed to “in()” contains more than"},{"type":"text","text":" "},{"type":"text","text":"one item, the object will be cloned once for each data"},{"type":"text","text":" "},{"type":"text","text":"item in the array (after the first), passing that data"},{"type":"text","text":" "},{"type":"text","text":"item to the construct method of each cloned object."},{"type":"text","text":" "},{"type":"text","text":"Use “Constructible” protocol if data is not required."},{"type":"text","text":" "},{"type":"text","text":"This protocol can be used in concert with “UpdatableWithData”"},{"type":"text","text":" "},{"type":"text","text":"and “PresentableWithData”, sharing the same data model."},{"type":"text","text":" "},{"type":"text","text":"TIP: To avoid unnecessary class init boilerplate (which"},{"type":"text","text":" "},{"type":"text","text":"is inevitable if class has stored properties) and to"},{"type":"text","text":" "},{"type":"text","text":"support “unidirectional data flow”, use this protocol"},{"type":"text","text":" "},{"type":"text","text":"(and related protocols mentioned) to pass data in one"},{"type":"text","text":" "},{"type":"text","text":"direction, rather than storing it on the class."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConstructibleWithData","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstructibleWithData"}],"url":"\/documentation\/c3\/constructiblewithdata"},"doc://com.davidbjames.C3/documentation/C3/ColorSwatch":{"role":"symbol","title":"ColorSwatch","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ColorSwatch"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ColorSwatch","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ColorSwatch"}],"url":"\/documentation\/c3\/colorswatch"},"doc://com.davidbjames.C3/documentation/C3/ConfirmButton":{"role":"symbol","title":"ConfirmButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConfirmButton"}],"abstract":[{"type":"text","text":"ConfirmButton supports firing attached actions and handles"},{"type":"text","text":" "},{"type":"text","text":"dismissing any related ancestor Presentable if initialized"},{"type":"text","text":" "},{"type":"text","text":"with “dismissive”."},{"type":"text","text":" "},{"type":"text","text":"Adhoc actions can be attached to this button or via"},{"type":"text","text":" "},{"type":"text","text":"delegate using Mutator event API."},{"type":"text","text":" "},{"type":"text","text":"This button is automatically “control state updatable”"},{"type":"text","text":" "},{"type":"text","text":"for theme changes on the button itself and potentially on a"},{"type":"text","text":" "},{"type":"text","text":"ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button supports optionally constructing with data on"},{"type":"text","text":" "},{"type":"text","text":"attachment (i.e. via in(..data:) method). The data type to"},{"type":"text","text":" "},{"type":"text","text":"provide is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and whether or not to add a control background."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"Passing a theme to in() is optional but preferred (the theme"},{"type":"text","text":" "},{"type":"text","text":"will be applied to the button as well as the background)."},{"type":"text","text":" "},{"type":"text","text":"The default background type is ControlBackground but you may"},{"type":"text","text":" "},{"type":"text","text":"also use a custom subclass of ControlBackground by subclassing"},{"type":"text","text":" "},{"type":"text","text":"the button class and assigning the new background type to the"},{"type":"text","text":" "},{"type":"text","text":"typealias UpdatableBackground. Example:"},{"type":"text","text":" "},{"type":"text","text":"class MyButton : ConfirmButton { typealias UpdatableBackground = MyBackground }"},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.backgrounds }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyControlButton.self > Background.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary."},{"type":"text","text":" "},{"type":"text","text":"See also CancelButton2 that supports Shape backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConfirmButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConfirmButton"}],"url":"\/documentation\/c3\/confirmbutton"},"doc://com.davidbjames.C3/documentation/C3/CancelButton2":{"role":"symbol","title":"CancelButton2","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancelButton2"}],"abstract":[{"type":"text","text":"CancelButton2 supports canceling and dismissing a related"},{"type":"text","text":" "},{"type":"text","text":"ancestor Presentable if initialized with “dismissive”."},{"type":"text","text":" "},{"type":"text","text":"Adhoc actions can be attached to this button or via"},{"type":"text","text":" "},{"type":"text","text":"delegate using Mutator event API."},{"type":"text","text":" "},{"type":"text","text":"This button is automatically “control state updatable” for"},{"type":"text","text":" "},{"type":"text","text":"theme changes on the button itself and potentially on a"},{"type":"text","text":" "},{"type":"text","text":"background Shape if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button is also Dismissable if “dismissive” is passed."},{"type":"text","text":" "},{"type":"text","text":"This button supports constructing with data on attachment"},{"type":"text","text":" "},{"type":"text","text":"(i.e. via in(..data:) method). The data type to provide"},{"type":"text","text":" "},{"type":"text","text":"is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and optional corner spec. Using this approach will cause a"},{"type":"text","text":" "},{"type":"text","text":"rectangular shape background (that is also control state"},{"type":"text","text":" "},{"type":"text","text":"updatable) to be added. (The rectangle will obtain corner"},{"type":"text","text":" "},{"type":"text","text":"spec if provided.) Passing a theme to in() is optional"},{"type":"text","text":" "},{"type":"text","text":"but preferred (the theme will be applied to the button"},{"type":"text","text":" "},{"type":"text","text":"as well as the shape)."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as per normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"If you prefer to use your own custom shape for this button"},{"type":"text","text":" "},{"type":"text","text":"then do not use the construct-with-data approach or alternatively,"},{"type":"text","text":" "},{"type":"text","text":"override the construct(data:) method. But keep in mind that"},{"type":"text","text":" "},{"type":"text","text":"your custom shape should pass “updatable:true” to ensure"},{"type":"text","text":" "},{"type":"text","text":"it can participate in control state updates."},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.shapes }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyCancelButton.self > Shape.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton2) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary. You will also"},{"type":"text","text":" "},{"type":"text","text":"probably want to conform to DismissableButtonConfigurable"},{"type":"text","text":" "},{"type":"text","text":"to get the tap action to dismiss."},{"type":"text","text":" "},{"type":"text","text":"See also CancelButton that supports regular layer backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CancelButton2","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CancelButton2"}],"url":"\/documentation\/c3\/cancelbutton2"},"doc://com.davidbjames.C3/documentation/C3/LiveWithData":{"role":"symbol","title":"LiveWithData","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LiveWithData"}],"abstract":[{"type":"text","text":"Any item\/hierarchy that requires independent construction"},{"type":"text","text":" "},{"type":"text","text":"beyond basic layout code, requires a data model to"},{"type":"text","text":" "},{"type":"text","text":"determine it’s presentation, and must have that construction"},{"type":"text","text":" "},{"type":"text","text":"continuously updated via a declarative interface."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/LiveWithData","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LiveWithData"}],"url":"\/documentation\/c3\/livewithdata"},"doc://com.davidbjames.C3/documentation/C3/DataModelContainer/Model":{"role":"symbol","title":"Model","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Model"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/DataModelContainer\/Model","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/c3\/datamodelcontainer\/model"},"doc://com.davidbjames.C3/documentation/C3/ControlButton2":{"role":"symbol","title":"ControlButton2","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlButton2"}],"abstract":[{"type":"text","text":"ControlButton2 is kind of button that is automatically"},{"type":"text","text":" "},{"type":"text","text":"“control state updatable” for theme changes on the button"},{"type":"text","text":" "},{"type":"text","text":"itself and potentially on a background Shape if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button is also Dismissable if “dismissive” is passed."},{"type":"text","text":" "},{"type":"text","text":"This button supports constructing with data on attachment"},{"type":"text","text":" "},{"type":"text","text":"(i.e. via in(..data:) method). The data type to provide"},{"type":"text","text":" "},{"type":"text","text":"is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and optional corner spec. Using this approach will cause a"},{"type":"text","text":" "},{"type":"text","text":"rectangular shape background (that is also control state"},{"type":"text","text":" "},{"type":"text","text":"updatable) to be added. (The rectangle will obtain corner"},{"type":"text","text":" "},{"type":"text","text":"spec if provided.) Passing a theme to in() is optional"},{"type":"text","text":" "},{"type":"text","text":"but preferred (the theme will be applied to the button"},{"type":"text","text":" "},{"type":"text","text":"as well as the shape)."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as per normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"If you prefer to use your own custom shape for this button"},{"type":"text","text":" "},{"type":"text","text":"then do not use the construct-with-data approach or alternatively,"},{"type":"text","text":" "},{"type":"text","text":"override the construct(data:) method. But keep in mind that"},{"type":"text","text":" "},{"type":"text","text":"your custom shape should pass “updatable:true” to ensure"},{"type":"text","text":" "},{"type":"text","text":"it can participate in control state updates."},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.shapes }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyControlButton.self > Shape.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton2) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary."},{"type":"text","text":" "},{"type":"text","text":"See also ControlButton that supports regular layer backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton2","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlButton2"}],"url":"\/documentation\/c3\/controlbutton2"},"doc://com.davidbjames.C3/documentation/C3/UpdatableWithData":{"role":"symbol","title":"UpdatableWithData","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"UpdatableWithData"}],"abstract":[{"type":"text","text":"A user-interface container is any containing object"},{"type":"text","text":" "},{"type":"text","text":"that represents an area of user interface that"},{"type":"text","text":" "},{"type":"text","text":"relates to a particular part of the model."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/UpdatableWithData","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UpdatableWithData"}],"url":"\/documentation\/c3\/updatablewithdata"},"doc://com.davidbjames.C3/documentation/C3/DataModelContainer":{"role":"symbol","title":"DataModelContainer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataModelContainer"}],"abstract":[{"type":"text","text":"An abstract user interface container of a model"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/DataModelContainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DataModelContainer"}],"url":"\/documentation\/c3\/datamodelcontainer"},"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/documentation/C3/ConfirmButton2":{"role":"symbol","title":"ConfirmButton2","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConfirmButton2"}],"abstract":[{"type":"text","text":"ConfirmButton2 supports firing attached actions and handles"},{"type":"text","text":" "},{"type":"text","text":"dismissing any related ancestor Presentable if initialized"},{"type":"text","text":" "},{"type":"text","text":"with “dismissive”."},{"type":"text","text":" "},{"type":"text","text":"Adhoc actions can be attached to this button or via"},{"type":"text","text":" "},{"type":"text","text":"delegate using Mutator event API."},{"type":"text","text":" "},{"type":"text","text":"This button is automatically “control state updatable” for"},{"type":"text","text":" "},{"type":"text","text":"theme changes on the button itself and potentially on a"},{"type":"text","text":" "},{"type":"text","text":"background Shape if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button is also Dismissable if “dismissive” is passed."},{"type":"text","text":" "},{"type":"text","text":"This button supports constructing with data on attachment"},{"type":"text","text":" "},{"type":"text","text":"(i.e. via in(..data:) method). The data type to provide"},{"type":"text","text":" "},{"type":"text","text":"is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and optional corner spec. Using this approach will cause a"},{"type":"text","text":" "},{"type":"text","text":"rectangular shape background (that is also control state"},{"type":"text","text":" "},{"type":"text","text":"updatable) to be added. (The rectangle will obtain corner"},{"type":"text","text":" "},{"type":"text","text":"spec if provided.) Passing a theme to in() is optional"},{"type":"text","text":" "},{"type":"text","text":"but preferred (the theme will be applied to the button"},{"type":"text","text":" "},{"type":"text","text":"as well as the shape)."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as per normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"If you prefer to use your own custom shape for this button"},{"type":"text","text":" "},{"type":"text","text":"then do not use the construct-with-data approach or alternatively,"},{"type":"text","text":" "},{"type":"text","text":"override the construct(data:) method. But keep in mind that"},{"type":"text","text":" "},{"type":"text","text":"your custom shape should pass “updatable:true” to ensure"},{"type":"text","text":" "},{"type":"text","text":"it can participate in control state updates."},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.shapes }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyConfirmButton.self > Shape.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton2) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary."},{"type":"text","text":" "},{"type":"text","text":"See also ConfirmButton that supports regular layer backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConfirmButton2","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConfirmButton2"}],"url":"\/documentation\/c3\/confirmbutton2"},"doc://com.davidbjames.C3/documentation/C3/PresentableWithData":{"role":"symbol","title":"PresentableWithData","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentableWithData"}],"abstract":[{"type":"text","text":"Protocol to support preparation, presentation"},{"type":"text","text":" "},{"type":"text","text":"and dismissal of a user interface object (class)."},{"type":"text","text":" "},{"type":"text","text":"Conformance to this protocol requires that the"},{"type":"text","text":" "},{"type":"text","text":"class be marked “final” due to Self requirement"},{"type":"text","text":" "},{"type":"text","text":"in the main method present()."},{"type":"text","text":" "},{"type":"text","text":"This specialization supports passing a data model"},{"type":"text","text":" "},{"type":"text","text":"into the present() method."},{"type":"text","text":" "},{"type":"text","text":"This protocol works in concert with ConstructibleWithData"},{"type":"text","text":" "},{"type":"text","text":"and UpdatableWithData, sharing the same data model."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/PresentableWithData","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PresentableWithData"}],"url":"\/documentation\/c3\/presentablewithdata"},"doc://com.davidbjames.C3/documentation/C3/CancelButton":{"role":"symbol","title":"CancelButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancelButton"}],"abstract":[{"type":"text","text":"CancelButton supports canceling and dismissing a related"},{"type":"text","text":" "},{"type":"text","text":"ancestor Presentable if initialized with “dismissive”."},{"type":"text","text":" "},{"type":"text","text":"Adhoc actions can be attached to this button or via"},{"type":"text","text":" "},{"type":"text","text":"delegate using Mutator event API."},{"type":"text","text":" "},{"type":"text","text":"This button is automatically “control state updatable”"},{"type":"text","text":" "},{"type":"text","text":"for theme changes on the button itself and potentially on a"},{"type":"text","text":" "},{"type":"text","text":"ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button supports optionally constructing with data on"},{"type":"text","text":" "},{"type":"text","text":"attachment (i.e. via in(..data:) method). The data type to"},{"type":"text","text":" "},{"type":"text","text":"provide is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and whether or not to add a control background."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"Passing a theme to in() is optional but preferred (the theme"},{"type":"text","text":" "},{"type":"text","text":"will be applied to the button as well as the background)."},{"type":"text","text":" "},{"type":"text","text":"The default background type is ControlBackground but you may"},{"type":"text","text":" "},{"type":"text","text":"also use a custom subclass of ControlBackground by subclassing"},{"type":"text","text":" "},{"type":"text","text":"the button class and assigning the new background type to the"},{"type":"text","text":" "},{"type":"text","text":"typealias UpdatableBackground. Example:"},{"type":"text","text":" "},{"type":"text","text":"class MyButton : CancelButton { typealias UpdatableBackground = MyBackground }"},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.backgrounds }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyCancelButton.self > Background.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary. You will also"},{"type":"text","text":" "},{"type":"text","text":"probably want to conform to DismissableButtonConfigurable"},{"type":"text","text":" "},{"type":"text","text":"to get the tap action to dismiss."},{"type":"text","text":" "},{"type":"text","text":"See also CancelButton2 that supports Shape backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CancelButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CancelButton"}],"url":"\/documentation\/c3\/cancelbutton"}}}