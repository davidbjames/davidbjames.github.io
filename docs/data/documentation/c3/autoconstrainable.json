{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutoConstrainable"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Frameable","preciseIdentifier":"s:2C39FrameableP","text":"Frameable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Identifiable","preciseIdentifier":"s:2C312IdentifiableP","text":"Identifiable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ViewAssociable","preciseIdentifier":"s:2C314ViewAssociableP","text":"ViewAssociable"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/autoconstrainable"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/Frameable","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Identifiable","doc:\/\/com.davidbjames.C3\/documentation\/C3\/MetaCodable","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ViewAssociable","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ViewContainable","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ViewOwnable"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/Alert","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Backdrop","doc:\/\/com.davidbjames.C3\/documentation\/C3\/BackgroundView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/BaseView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Button","doc:\/\/com.davidbjames.C3\/documentation\/C3\/CancelButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/CancelButton2","doc:\/\/com.davidbjames.C3\/documentation\/C3\/CapsuleView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Caption","doc:\/\/com.davidbjames.C3\/documentation\/C3\/CircleView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/CollectionReusableView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/CollectionView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/CollectionViewCell","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ColorSwatch","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Columns","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConfirmButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConfirmButton2","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ContentView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ContextView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlBackgroundView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton2","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/DatePicker","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Dialog","doc:\/\/com.davidbjames.C3\/documentation\/C3\/DialogContainer","doc:\/\/com.davidbjames.C3\/documentation\/C3\/DisableOverlay","doc:\/\/com.davidbjames.C3\/documentation\/C3\/DismissableButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/DisplayText","doc:\/\/com.davidbjames.C3\/documentation\/C3\/EditableText","doc:\/\/com.davidbjames.C3\/documentation\/C3\/EmbedView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ExclusiveButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ExclusiveControlButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ExclusiveControlButton2","doc:\/\/com.davidbjames.C3\/documentation\/C3\/FirstOuterSpacer","doc:\/\/com.davidbjames.C3\/documentation\/C3\/FrontView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Grid","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Guide","doc:\/\/com.davidbjames.C3\/documentation\/C3\/HostingView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ImageContainer","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ImageMask","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ImageView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/InnerSpacer","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Label","doc:\/\/com.davidbjames.C3\/documentation\/C3\/LastOuterSpacer","doc:\/\/com.davidbjames.C3\/documentation\/C3\/LiveView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/MaskView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/NodeView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/OuterSpacer","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Padder","doc:\/\/com.davidbjames.C3\/documentation\/C3\/PageControl","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Quadrant","doc:\/\/com.davidbjames.C3\/documentation\/C3\/RemainderGuide","doc:\/\/com.davidbjames.C3\/documentation\/C3\/RemainderView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Rows","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ScrollView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Segmented","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Slider","doc:\/\/com.davidbjames.C3\/documentation\/C3\/SnapshotOf","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Spacer","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Spinner","doc:\/\/com.davidbjames.C3\/documentation\/C3\/StackView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Stepper","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Switch","doc:\/\/com.davidbjames.C3\/documentation\/C3\/SwitchableButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/SwitchableControlButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/SwitchableControllButton2","doc:\/\/com.davidbjames.C3\/documentation\/C3\/SystemButton","doc:\/\/com.davidbjames.C3\/documentation\/C3\/TableView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/TableViewCell","doc:\/\/com.davidbjames.C3\/documentation\/C3\/TextField","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ToSwiftUI","doc:\/\/com.davidbjames.C3\/documentation\/C3\/TypographicEmbed","doc:\/\/com.davidbjames.C3\/documentation\/C3\/View"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoConstrainable","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutoConstrainable"}],"title":"AutoConstrainable","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:2C317AutoConstrainableP","modules":[{"name":"C3"}],"navigatorTitle":[{"kind":"identifier","text":"AutoConstrainable"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoConstrainable\/hasAmbiguousLayout","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoConstrainable\/parentGuideOrView","doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoConstrainable\/translatesAutoresizingMaskIntoConstraints"]}],"references":{"doc://com.davidbjames.C3/documentation/C3/OuterSpacer":{"role":"symbol","title":"OuterSpacer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"OuterSpacer"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/OuterSpacer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OuterSpacer"}],"url":"\/documentation\/c3\/outerspacer"},"doc://com.davidbjames.C3/documentation/C3/ViewContainable":{"role":"symbol","title":"ViewContainable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewContainable"}],"abstract":[{"type":"text","text":"Any item that can have a “container view”"},{"type":"text","text":" "},{"type":"text","text":"The only difference between this and ViewAssociable"},{"type":"text","text":" "},{"type":"text","text":"is that views return superview with this and"},{"type":"text","text":" "},{"type":"text","text":"self with ViewAssociable. Other conformances"},{"type":"text","text":" "},{"type":"text","text":"are the same."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ViewContainable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewContainable"}],"url":"\/documentation\/c3\/viewcontainable"},"doc://com.davidbjames.C3/documentation/C3/Dialog":{"role":"symbol","title":"Dialog","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dialog"}],"abstract":[{"type":"text","text":"Presentable dialog view that provides a backdrop"},{"type":"text","text":" "},{"type":"text","text":"and default vertical stack view."},{"type":"text","text":" "},{"type":"text","text":"See also Alert which wraps Dialog and simplifies"},{"type":"text","text":" "},{"type":"text","text":"presenting an alert."},{"type":"text","text":" "},{"type":"text","text":"NOTE: as with all StackViews this type uses autolayout"},{"type":"text","text":" "},{"type":"text","text":"exclusively for it’s arranged views. If the intent is"},{"type":"text","text":" "},{"type":"text","text":"to use elements that do not work well with autolayout"},{"type":"text","text":" "},{"type":"text","text":"then consider creating a custom view instead."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Dialog","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Dialog"}],"url":"\/documentation\/c3\/dialog"},"doc://com.davidbjames.C3/documentation/C3/DialogContainer":{"role":"symbol","title":"DialogContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DialogContainer"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/DialogContainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DialogContainer"}],"url":"\/documentation\/c3\/dialogcontainer"},"doc://com.davidbjames.C3/documentation/C3/Rows":{"role":"symbol","title":"Rows","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rows"}],"abstract":[{"type":"text","text":"Rows is a Grid representing a portion of the layout"},{"type":"text","text":" "},{"type":"text","text":"which is evenly subdivided into rows (cells)."},{"type":"text","text":" "},{"type":"text","text":"These rows can be further grouped using Quadrants or"},{"type":"text","text":" "},{"type":"text","text":"iterated via Query.iterateCells\/Rows()."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Rows","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Rows"}],"url":"\/documentation\/c3\/rows"},"doc://com.davidbjames.C3/documentation/C3/Switch":{"role":"symbol","title":"Switch","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Switch"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Switch","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Switch"}],"url":"\/documentation\/c3\/switch"},"doc://com.davidbjames.C3/documentation/C3/PageControl":{"role":"symbol","title":"PageControl","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PageControl"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/PageControl","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PageControl"}],"url":"\/documentation\/c3\/pagecontrol"},"doc://com.davidbjames.C3/documentation/C3/ImageMask":{"role":"symbol","title":"ImageMask","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImageMask"}],"abstract":[{"type":"text","text":"Special embedded view type that masks a portion"},{"type":"text","text":" "},{"type":"text","text":"of an image when used in conjunction with"},{"type":"text","text":" "},{"type":"text","text":"Mutator.sizeToFitAndMask()."},{"type":"text","text":" "},{"type":"text","text":"This type is not meant to be instantiated"},{"type":"text","text":" "},{"type":"text","text":"outside of the sizeToFitAndMask() API."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ImageMask","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImageMask"}],"url":"\/documentation\/c3\/imagemask"},"doc://com.davidbjames.C3/documentation/C3/ExclusiveControlButton":{"role":"symbol","title":"ExclusiveControlButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExclusiveControlButton"}],"abstract":[{"type":"text","text":"Exclusive buttons support exclusive selection state"},{"type":"text","text":" "},{"type":"text","text":"within a group of sibling Exclusive buttons."},{"type":"text","text":" "},{"type":"text","text":"(Similar to a “radio group” in web programming,"},{"type":"text","text":" "},{"type":"text","text":"and functionally similar to UISegmentedControl.)"},{"type":"text","text":" "},{"type":"text","text":"ExclusiveControlButton is automatically “control state"},{"type":"text","text":" "},{"type":"text","text":"updatable” for theme changes on the button itself and"},{"type":"text","text":" "},{"type":"text","text":"potentially on a ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ExclusiveControlButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExclusiveControlButton"}],"url":"\/documentation\/c3\/exclusivecontrolbutton"},"doc://com.davidbjames.C3/documentation/C3/ScrollView":{"role":"symbol","title":"ScrollView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScrollView"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ScrollView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScrollView"}],"url":"\/documentation\/c3\/scrollview"},"doc://com.davidbjames.C3/documentation/C3/Padder":{"role":"symbol","title":"Padder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Padder"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Padder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Padder"}],"url":"\/documentation\/c3\/padder"},"doc://com.davidbjames.C3/documentation/C3/CollectionReusableView":{"role":"symbol","title":"CollectionReusableView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionReusableView"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CollectionReusableView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CollectionReusableView"}],"url":"\/documentation\/c3\/collectionreusableview"},"doc://com.davidbjames.C3/documentation/C3/ControlButton":{"role":"symbol","title":"ControlButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlButton"}],"abstract":[{"type":"text","text":"ControlButton is kind of button that is automatically"},{"type":"text","text":" "},{"type":"text","text":"“control state updatable” for theme changes on the button"},{"type":"text","text":" "},{"type":"text","text":"itself and potentially on a ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button is also Dismissable if “dismissive” is passed."},{"type":"text","text":" "},{"type":"text","text":"This button supports optionally constructing with data on"},{"type":"text","text":" "},{"type":"text","text":"attachment (i.e. via in(..data:) method). The data type to"},{"type":"text","text":" "},{"type":"text","text":"provide is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and whether or not to add a control background."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"Passing a theme to in() is optional but preferred (the theme"},{"type":"text","text":" "},{"type":"text","text":"will be applied to the button as well as the background)."},{"type":"text","text":" "},{"type":"text","text":"The default background type is ControlBackground but you may"},{"type":"text","text":" "},{"type":"text","text":"also use a custom subclass of ControlBackground by subclassing"},{"type":"text","text":" "},{"type":"text","text":"the button class and assigning the new background type to the"},{"type":"text","text":" "},{"type":"text","text":"typealias UpdatableBackground. Example:"},{"type":"text","text":" "},{"type":"text","text":"class MyButton : ConfirmButton { typealias UpdatableBackground = MyBackground }"},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.backgrounds }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyControlButton.self > Background.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary."},{"type":"text","text":" "},{"type":"text","text":"See also ControlButton2 that supports Shape based backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlButton"}],"url":"\/documentation\/c3\/controlbutton"},"doc://com.davidbjames.C3/documentation/C3/NodeView":{"role":"symbol","title":"NodeView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NodeView"}],"abstract":[{"type":"text","text":"SpriteKit view for containing scenes and nodes."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/NodeView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NodeView"}],"url":"\/documentation\/c3\/nodeview"},"doc://com.davidbjames.C3/documentation/C3/TextField":{"role":"symbol","title":"TextField","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TextField"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/TextField","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TextField"}],"url":"\/documentation\/c3\/textfield"},"doc://com.davidbjames.C3/documentation/C3/Alert":{"role":"symbol","title":"Alert","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Alert"}],"abstract":[{"type":"text","text":"Presentable alert view that provides a backdrop,"},{"type":"text","text":" "},{"type":"text","text":"default vertical stack view, and the basic structure"},{"type":"text","text":" "},{"type":"text","text":"of an alert including label, text, cancel and confirm"},{"type":"text","text":" "},{"type":"text","text":"buttons. Use the trailing API to modify these, including"},{"type":"text","text":" "},{"type":"text","text":"adding a background."},{"type":"text","text":" "},{"type":"text","text":"See also the more general Dialog class."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Alert","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Alert"}],"url":"\/documentation\/c3\/alert"},"doc://com.davidbjames.C3/documentation/C3/Slider":{"role":"symbol","title":"Slider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Slider"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Slider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Slider"}],"url":"\/documentation\/c3\/slider"},"doc://com.davidbjames.C3/documentation/C3/CancelButton":{"role":"symbol","title":"CancelButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancelButton"}],"abstract":[{"type":"text","text":"CancelButton supports canceling and dismissing a related"},{"type":"text","text":" "},{"type":"text","text":"ancestor Presentable if initialized with “dismissive”."},{"type":"text","text":" "},{"type":"text","text":"Adhoc actions can be attached to this button or via"},{"type":"text","text":" "},{"type":"text","text":"delegate using Mutator event API."},{"type":"text","text":" "},{"type":"text","text":"This button is automatically “control state updatable”"},{"type":"text","text":" "},{"type":"text","text":"for theme changes on the button itself and potentially on a"},{"type":"text","text":" "},{"type":"text","text":"ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button supports optionally constructing with data on"},{"type":"text","text":" "},{"type":"text","text":"attachment (i.e. via in(..data:) method). The data type to"},{"type":"text","text":" "},{"type":"text","text":"provide is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and whether or not to add a control background."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"Passing a theme to in() is optional but preferred (the theme"},{"type":"text","text":" "},{"type":"text","text":"will be applied to the button as well as the background)."},{"type":"text","text":" "},{"type":"text","text":"The default background type is ControlBackground but you may"},{"type":"text","text":" "},{"type":"text","text":"also use a custom subclass of ControlBackground by subclassing"},{"type":"text","text":" "},{"type":"text","text":"the button class and assigning the new background type to the"},{"type":"text","text":" "},{"type":"text","text":"typealias UpdatableBackground. Example:"},{"type":"text","text":" "},{"type":"text","text":"class MyButton : CancelButton { typealias UpdatableBackground = MyBackground }"},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.backgrounds }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyCancelButton.self > Background.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary. You will also"},{"type":"text","text":" "},{"type":"text","text":"probably want to conform to DismissableButtonConfigurable"},{"type":"text","text":" "},{"type":"text","text":"to get the tap action to dismiss."},{"type":"text","text":" "},{"type":"text","text":"See also CancelButton2 that supports Shape backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CancelButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CancelButton"}],"url":"\/documentation\/c3\/cancelbutton"},"doc://com.davidbjames.C3/documentation/C3/Label":{"role":"symbol","title":"Label","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Label"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Label","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Label"}],"url":"\/documentation\/c3\/label"},"doc://com.davidbjames.C3/documentation/C3/CancelButton2":{"role":"symbol","title":"CancelButton2","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancelButton2"}],"abstract":[{"type":"text","text":"CancelButton2 supports canceling and dismissing a related"},{"type":"text","text":" "},{"type":"text","text":"ancestor Presentable if initialized with “dismissive”."},{"type":"text","text":" "},{"type":"text","text":"Adhoc actions can be attached to this button or via"},{"type":"text","text":" "},{"type":"text","text":"delegate using Mutator event API."},{"type":"text","text":" "},{"type":"text","text":"This button is automatically “control state updatable” for"},{"type":"text","text":" "},{"type":"text","text":"theme changes on the button itself and potentially on a"},{"type":"text","text":" "},{"type":"text","text":"background Shape if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button is also Dismissable if “dismissive” is passed."},{"type":"text","text":" "},{"type":"text","text":"This button supports constructing with data on attachment"},{"type":"text","text":" "},{"type":"text","text":"(i.e. via in(..data:) method). The data type to provide"},{"type":"text","text":" "},{"type":"text","text":"is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and optional corner spec. Using this approach will cause a"},{"type":"text","text":" "},{"type":"text","text":"rectangular shape background (that is also control state"},{"type":"text","text":" "},{"type":"text","text":"updatable) to be added. (The rectangle will obtain corner"},{"type":"text","text":" "},{"type":"text","text":"spec if provided.) Passing a theme to in() is optional"},{"type":"text","text":" "},{"type":"text","text":"but preferred (the theme will be applied to the button"},{"type":"text","text":" "},{"type":"text","text":"as well as the shape)."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as per normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"If you prefer to use your own custom shape for this button"},{"type":"text","text":" "},{"type":"text","text":"then do not use the construct-with-data approach or alternatively,"},{"type":"text","text":" "},{"type":"text","text":"override the construct(data:) method. But keep in mind that"},{"type":"text","text":" "},{"type":"text","text":"your custom shape should pass “updatable:true” to ensure"},{"type":"text","text":" "},{"type":"text","text":"it can participate in control state updates."},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.shapes }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyCancelButton.self > Shape.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton2) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary. You will also"},{"type":"text","text":" "},{"type":"text","text":"probably want to conform to DismissableButtonConfigurable"},{"type":"text","text":" "},{"type":"text","text":"to get the tap action to dismiss."},{"type":"text","text":" "},{"type":"text","text":"See also CancelButton that supports regular layer backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CancelButton2","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CancelButton2"}],"url":"\/documentation\/c3\/cancelbutton2"},"doc://com.davidbjames.C3/documentation/C3/ConfirmButton2":{"role":"symbol","title":"ConfirmButton2","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConfirmButton2"}],"abstract":[{"type":"text","text":"ConfirmButton2 supports firing attached actions and handles"},{"type":"text","text":" "},{"type":"text","text":"dismissing any related ancestor Presentable if initialized"},{"type":"text","text":" "},{"type":"text","text":"with “dismissive”."},{"type":"text","text":" "},{"type":"text","text":"Adhoc actions can be attached to this button or via"},{"type":"text","text":" "},{"type":"text","text":"delegate using Mutator event API."},{"type":"text","text":" "},{"type":"text","text":"This button is automatically “control state updatable” for"},{"type":"text","text":" "},{"type":"text","text":"theme changes on the button itself and potentially on a"},{"type":"text","text":" "},{"type":"text","text":"background Shape if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button is also Dismissable if “dismissive” is passed."},{"type":"text","text":" "},{"type":"text","text":"This button supports constructing with data on attachment"},{"type":"text","text":" "},{"type":"text","text":"(i.e. via in(..data:) method). The data type to provide"},{"type":"text","text":" "},{"type":"text","text":"is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and optional corner spec. Using this approach will cause a"},{"type":"text","text":" "},{"type":"text","text":"rectangular shape background (that is also control state"},{"type":"text","text":" "},{"type":"text","text":"updatable) to be added. (The rectangle will obtain corner"},{"type":"text","text":" "},{"type":"text","text":"spec if provided.) Passing a theme to in() is optional"},{"type":"text","text":" "},{"type":"text","text":"but preferred (the theme will be applied to the button"},{"type":"text","text":" "},{"type":"text","text":"as well as the shape)."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as per normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"If you prefer to use your own custom shape for this button"},{"type":"text","text":" "},{"type":"text","text":"then do not use the construct-with-data approach or alternatively,"},{"type":"text","text":" "},{"type":"text","text":"override the construct(data:) method. But keep in mind that"},{"type":"text","text":" "},{"type":"text","text":"your custom shape should pass “updatable:true” to ensure"},{"type":"text","text":" "},{"type":"text","text":"it can participate in control state updates."},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.shapes }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyConfirmButton.self > Shape.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton2) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary."},{"type":"text","text":" "},{"type":"text","text":"See also ConfirmButton that supports regular layer backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConfirmButton2","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConfirmButton2"}],"url":"\/documentation\/c3\/confirmbutton2"},"doc://com.davidbjames.C3/documentation/C3/TableView":{"role":"symbol","title":"TableView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TableView"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/TableView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TableView"}],"url":"\/documentation\/c3\/tableview"},"doc://com.davidbjames.C3/documentation/C3/ControlView":{"role":"symbol","title":"ControlView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlView"}],"abstract":[{"type":"text","text":"Basic wrapper to UIControl, supporting control state updates."},{"type":"text","text":" "},{"type":"text","text":"See also CustomControl protocol which also supports layers"},{"type":"text","text":" "},{"type":"text","text":"and guides, in addition to views; and may avoid side-effects"},{"type":"text","text":" "},{"type":"text","text":"related to using a UIControl in some cases."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlView"}],"url":"\/documentation\/c3\/controlview"},"doc://com.davidbjames.C3/documentation/C3/BackgroundView":{"role":"symbol","title":"BackgroundView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackgroundView"}],"abstract":[{"type":"text","text":"A view representing a background than can use autolayout constraints."},{"type":"text","text":" "},{"type":"text","text":"Prefer using Background or BackgroundView over applying"},{"type":"text","text":" "},{"type":"text","text":"adhoc background changes to container views."},{"type":"text","text":" "},{"type":"text","text":"See also SnapshotBackground for use in lists."},{"type":"text","text":" "},{"type":"text","text":"Backgrounds are generally the “first sibling” to whatever"},{"type":"text","text":" "},{"type":"text","text":"it is providing a background for and would rarely have"},{"type":"text","text":" "},{"type":"text","text":"children (except for custom backgrounds)."},{"type":"text","text":" "},{"type":"text","text":"BackgroundViews have a specific construction, for example:"},{"type":"text","text":" "},{"type":"text","text":"Where parent is a view, the item is sent to back,"},{"type":"text","text":" "},{"type":"text","text":"user interaction is turned off, it is stretched to"},{"type":"text","text":" "},{"type":"text","text":"fit it’s parent (or including “outset” if specified"},{"type":"text","text":" "},{"type":"text","text":"on creation), it masks content to it’s bounds"},{"type":"text","text":" "},{"type":"text","text":"(unless overriden), it provides appropriate autolayout"},{"type":"text","text":" "},{"type":"text","text":"constraints and it inherits ancestor corner radius."},{"type":"text","text":" "},{"type":"text","text":"Further, when used in conjunction with “in()” it"},{"type":"text","text":" "},{"type":"text","text":"provides a focussed API to background mutations,"},{"type":"text","text":" "},{"type":"text","text":"include full Theme support."},{"type":"text","text":" "},{"type":"text","text":"For more complex Backgrounds, including multilayer"},{"type":"text","text":" "},{"type":"text","text":"Backgrounds and layering effects, use make{} or build{}"},{"type":"text","text":" "},{"type":"text","text":"on the Background instance to add hierarchy,"},{"type":"text","text":" "},{"type":"text","text":"or use the convenience API add{} and addLayer{}."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/BackgroundView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BackgroundView"}],"url":"\/documentation\/c3\/backgroundview"},"doc://com.davidbjames.C3/documentation/C3/ControlButton2":{"role":"symbol","title":"ControlButton2","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlButton2"}],"abstract":[{"type":"text","text":"ControlButton2 is kind of button that is automatically"},{"type":"text","text":" "},{"type":"text","text":"“control state updatable” for theme changes on the button"},{"type":"text","text":" "},{"type":"text","text":"itself and potentially on a background Shape if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button is also Dismissable if “dismissive” is passed."},{"type":"text","text":" "},{"type":"text","text":"This button supports constructing with data on attachment"},{"type":"text","text":" "},{"type":"text","text":"(i.e. via in(..data:) method). The data type to provide"},{"type":"text","text":" "},{"type":"text","text":"is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and optional corner spec. Using this approach will cause a"},{"type":"text","text":" "},{"type":"text","text":"rectangular shape background (that is also control state"},{"type":"text","text":" "},{"type":"text","text":"updatable) to be added. (The rectangle will obtain corner"},{"type":"text","text":" "},{"type":"text","text":"spec if provided.) Passing a theme to in() is optional"},{"type":"text","text":" "},{"type":"text","text":"but preferred (the theme will be applied to the button"},{"type":"text","text":" "},{"type":"text","text":"as well as the shape)."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as per normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"If you prefer to use your own custom shape for this button"},{"type":"text","text":" "},{"type":"text","text":"then do not use the construct-with-data approach or alternatively,"},{"type":"text","text":" "},{"type":"text","text":"override the construct(data:) method. But keep in mind that"},{"type":"text","text":" "},{"type":"text","text":"your custom shape should pass “updatable:true” to ensure"},{"type":"text","text":" "},{"type":"text","text":"it can participate in control state updates."},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.shapes }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyControlButton.self > Shape.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton2) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary."},{"type":"text","text":" "},{"type":"text","text":"See also ControlButton that supports regular layer backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton2","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlButton2"}],"url":"\/documentation\/c3\/controlbutton2"},"doc://com.davidbjames.C3/documentation/C3/InnerSpacer":{"role":"symbol","title":"InnerSpacer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"InnerSpacer"}],"abstract":[{"type":"text","text":"Spacer that provides space between two sibling items."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/InnerSpacer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InnerSpacer"}],"url":"\/documentation\/c3\/innerspacer"},"doc://com.davidbjames.C3/documentation/C3/Backdrop":{"role":"symbol","title":"Backdrop","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Backdrop"}],"abstract":[{"type":"text","text":"Backdrop is a view that is stretched to fill the parent."},{"type":"text","text":" "},{"type":"text","text":"How it is styled is up to the implementor."},{"type":"text","text":" "},{"type":"text","text":"See also C3.Defaults.backdropShade which supports a"},{"type":"text","text":" "},{"type":"text","text":"default backdrop shade."},{"type":"text","text":" "},{"type":"text","text":"Technically it’s a button which is initially disabled"},{"type":"text","text":" "},{"type":"text","text":"from user interaction, unless you choose to allow"},{"type":"text","text":" "},{"type":"text","text":"interaction via BackdropDelegate (for example if"},{"type":"text","text":" "},{"type":"text","text":"tapping is to be used to dismiss something)."},{"type":"text","text":" "},{"type":"text","text":"This is publicly creatable but private for editing."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Backdrop","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Backdrop"}],"url":"\/documentation\/c3\/backdrop"},"doc://com.davidbjames.C3/documentation/C3/Identifiable":{"role":"symbol","title":"Identifiable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Identifiable"}],"abstract":[{"type":"text","text":"Protocol for any object that is identifiable"},{"type":"text","text":" "},{"type":"text","text":"and can be queried by identifier."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Identifiable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Identifiable"}],"url":"\/documentation\/c3\/identifiable"},"doc://com.davidbjames.C3/documentation/C3/SystemButton":{"role":"symbol","title":"SystemButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemButton"}],"abstract":[{"type":"text","text":"Class to use when creating non-custom type system buttons"},{"type":"text","text":" "},{"type":"text","text":"such as “infoDark”, “contactAdd” etc."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/SystemButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemButton"}],"url":"\/documentation\/c3\/systembutton"},"doc://com.davidbjames.C3/documentation/C3/SnapshotOf":{"role":"symbol","title":"SnapshotOf","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SnapshotOf"}],"abstract":[{"type":"text","text":"Wrapper to create and store an underlying view snapshot."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/SnapshotOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SnapshotOf"}],"url":"\/documentation\/c3\/snapshotof"},"doc://com.davidbjames.C3/documentation/C3/ExclusiveButton":{"role":"symbol","title":"ExclusiveButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExclusiveButton"}],"abstract":[{"type":"text","text":"Exclusive buttons support exclusive selection state"},{"type":"text","text":" "},{"type":"text","text":"within a group of sibling Exclusive buttons."},{"type":"text","text":" "},{"type":"text","text":"(Similar to a “radio group” in web programming,"},{"type":"text","text":" "},{"type":"text","text":"and functionally similar to UISegmentedControl.)"},{"type":"text","text":" "},{"type":"text","text":"To ensure independent handling of separate groups"},{"type":"text","text":" "},{"type":"text","text":"make sure each group is within it’s own parent view"},{"type":"text","text":" "},{"type":"text","text":"or, at a minimum, layout guide."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ExclusiveButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExclusiveButton"}],"url":"\/documentation\/c3\/exclusivebutton"},"doc://com.davidbjames.C3/documentation/C3/Segmented":{"role":"symbol","title":"Segmented","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Segmented"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Segmented","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Segmented"}],"url":"\/documentation\/c3\/segmented"},"doc://com.davidbjames.C3/documentation/C3/RemainderGuide":{"role":"symbol","title":"RemainderGuide","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemainderGuide"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/RemainderGuide","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RemainderGuide"}],"url":"\/documentation\/c3\/remainderguide"},"doc://com.davidbjames.C3/documentation/C3/DisableOverlay":{"role":"symbol","title":"DisableOverlay","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DisableOverlay"}],"abstract":[{"type":"text","text":"DisableOverlay is a simple view with a tint"},{"type":"text","text":" "},{"type":"text","text":"(e.g. transparent black\/white) that is stretched"},{"type":"text","text":" "},{"type":"text","text":"to fit over top of the parent it is added to."},{"type":"text","text":" "},{"type":"text","text":"User interaction is disabled."},{"type":"text","text":" "},{"type":"text","text":"This is class is Presentable with a default prepare()"},{"type":"text","text":" "},{"type":"text","text":"method that sets the view alpha to 0.0."},{"type":"text","text":" "},{"type":"text","text":"To make this visible (alpha 1.0) call present()"},{"type":"text","text":" "},{"type":"text","text":"(which can be animated or not)."},{"type":"text","text":" "},{"type":"text","text":"See also Backdrop which goes behind views."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/DisableOverlay","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DisableOverlay"}],"url":"\/documentation\/c3\/disableoverlay"},"doc://com.davidbjames.C3/documentation/C3/Caption":{"role":"symbol","title":"Caption","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Caption"}],"abstract":[{"type":"text","text":"Label representing caption text for some other item."},{"type":"text","text":" "},{"type":"text","text":"It’s not normally necessary to instantiate this – it"},{"type":"text","text":" "},{"type":"text","text":"is done for you via Mutator.createCaption() API."},{"type":"text","text":" "},{"type":"text","text":"(however you can use the type for query\/filtering)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Caption","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Caption"}],"url":"\/documentation\/c3\/caption"},"doc://com.davidbjames.C3/documentation/C3/FirstOuterSpacer":{"role":"symbol","title":"FirstOuterSpacer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FirstOuterSpacer"}],"abstract":[{"type":"text","text":"Spacer that provides space between the leading\/top"},{"type":"text","text":" "},{"type":"text","text":"edge of a container and it’s first item."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/FirstOuterSpacer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FirstOuterSpacer"}],"url":"\/documentation\/c3\/firstouterspacer"},"doc://com.davidbjames.C3/documentation/C3/ViewAssociable":{"role":"symbol","title":"ViewAssociable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewAssociable"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ViewAssociable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewAssociable"}],"url":"\/documentation\/c3\/viewassociable"},"doc://com.davidbjames.C3/documentation/C3/CapsuleView":{"role":"symbol","title":"CapsuleView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CapsuleView"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CapsuleView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CapsuleView"}],"url":"\/documentation\/c3\/capsuleview"},"doc://com.davidbjames.C3/documentation/C3/ImageContainer":{"role":"symbol","title":"ImageContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImageContainer"}],"abstract":[{"type":"text","text":"Special embedded view type that is returned"},{"type":"text","text":" "},{"type":"text","text":"from Mutator.sizeToFitAndMask() that contains"},{"type":"text","text":" "},{"type":"text","text":"an ImageMask (and image)."},{"type":"text","text":" "},{"type":"text","text":"This type is not meant to be instantiated"},{"type":"text","text":" "},{"type":"text","text":"outside of the sizeToFitAndMask() API."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ImageContainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImageContainer"}],"url":"\/documentation\/c3\/imagecontainer"},"doc://com.davidbjames.C3/documentation/C3/Guide":{"role":"symbol","title":"Guide","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Guide"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Guide","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Guide"}],"url":"\/documentation\/c3\/guide"},"doc://com.davidbjames.C3/documentation/C3/TableViewCell":{"role":"symbol","title":"TableViewCell","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TableViewCell"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/TableViewCell","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TableViewCell"}],"url":"\/documentation\/c3\/tableviewcell"},"doc://com.davidbjames.C3/documentation/C3/ContextView":{"role":"symbol","title":"ContextView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextView"}],"abstract":[{"type":"text","text":"Specialized top-level view for use with ViewController"},{"type":"text","text":" "},{"type":"text","text":"or as HostingView (superview) within SwiftUI."},{"type":"text","text":" "},{"type":"text","text":"For ViewController based setup provide this class"},{"type":"text","text":" "},{"type":"text","text":"in InterfaceBuilder for the controller’s view."},{"type":"text","text":" "},{"type":"text","text":"In all other cases, do not use this class."},{"type":"text","text":" "},{"type":"text","text":"Use BaseView (or derivitive) instead."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ContextView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContextView"}],"url":"\/documentation\/c3\/contextview"},"doc://com.davidbjames.C3/documentation/C3/FrontView":{"role":"symbol","title":"FrontView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FrontView"}],"abstract":[{"type":"text","text":"Alias view that represents the foreground"},{"type":"text","text":" "},{"type":"text","text":"view within a masked hierarchy."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/FrontView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FrontView"}],"url":"\/documentation\/c3\/frontview"},"doc://com.davidbjames.C3/documentation/C3/AutoConstrainable/translatesAutoresizingMaskIntoConstraints":{"role":"symbol","title":"translatesAutoresizingMaskIntoConstraints","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"translatesAutoresizingMaskIntoConstraints"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoConstrainable\/translatesAutoresizingMaskIntoConstraints","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/c3\/autoconstrainable\/translatesautoresizingmaskintoconstraints"},"doc://com.davidbjames.C3/documentation/C3/ColorSwatch":{"role":"symbol","title":"ColorSwatch","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ColorSwatch"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ColorSwatch","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ColorSwatch"}],"url":"\/documentation\/c3\/colorswatch"},"doc://com.davidbjames.C3/documentation/C3/StackView":{"role":"symbol","title":"StackView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackView"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/StackView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StackView"}],"url":"\/documentation\/c3\/stackview"},"doc://com.davidbjames.C3/documentation/C3/CollectionViewCell":{"role":"symbol","title":"CollectionViewCell","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionViewCell"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CollectionViewCell","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CollectionViewCell"}],"url":"\/documentation\/c3\/collectionviewcell"},"doc://com.davidbjames.C3/documentation/C3/DatePicker":{"role":"symbol","title":"DatePicker","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatePicker"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/DatePicker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatePicker"}],"url":"\/documentation\/c3\/datepicker"},"doc://com.davidbjames.C3/documentation/C3/TypographicEmbed":{"role":"symbol","title":"TypographicEmbed","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypographicEmbed"}],"abstract":[{"type":"text","text":"Proxy class for embedding typographic items while retaining"},{"type":"text","text":" "},{"type":"text","text":"the Typographical interface. Use this with embed methods."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/TypographicEmbed","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypographicEmbed"}],"url":"\/documentation\/c3\/typographicembed"},"doc://com.davidbjames.C3/documentation/C3/MaskView":{"role":"symbol","title":"MaskView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MaskView"}],"abstract":[{"type":"text","text":"Alias view that masks the “live view” in"},{"type":"text","text":" "},{"type":"text","text":"in a masked hierarchy."},{"type":"text","text":" "},{"type":"text","text":"Used with Mutator.embedMaskedView()."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/MaskView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MaskView"}],"url":"\/documentation\/c3\/maskview"},"doc://com.davidbjames.C3/documentation/C3/Spinner":{"role":"symbol","title":"Spinner","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Spinner"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Spinner","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Spinner"}],"url":"\/documentation\/c3\/spinner"},"doc://com.davidbjames.C3/documentation/C3/ToSwiftUI":{"role":"symbol","title":"ToSwiftUI","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ToSwiftUI"}],"abstract":[{"type":"text","text":"Wrapper C3UI view for injecting arbitrary SwiftUI code"},{"type":"text","text":" "},{"type":"text","text":"into a C3UI hierarchy."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ToSwiftUI","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ToSwiftUI"}],"url":"\/documentation\/c3\/toswiftui"},"doc://com.davidbjames.C3/documentation/C3/Button":{"role":"symbol","title":"Button","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Button"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Button","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Button"}],"url":"\/documentation\/c3\/button"},"doc://com.davidbjames.C3/documentation/C3/EmbedView":{"role":"symbol","title":"EmbedView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbedView"}],"abstract":[{"type":"text","text":"A view that has been dynamically embedded between"},{"type":"text","text":" "},{"type":"text","text":"and view and its parent view."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/EmbedView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EmbedView"}],"url":"\/documentation\/c3\/embedview"},"doc://com.davidbjames.C3/documentation/C3/HostingView":{"role":"symbol","title":"HostingView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HostingView"}],"abstract":[{"type":"text","text":"Injected hosting view to a C3 hierarchy that"},{"type":"text","text":" "},{"type":"text","text":"exists within a SwiftUI hierarchy."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/HostingView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HostingView"}],"url":"\/documentation\/c3\/hostingview"},"doc://com.davidbjames.C3/documentation/C3/SwitchableControllButton2":{"role":"symbol","title":"SwitchableControllButton2","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchableControllButton2"}],"abstract":[{"type":"text","text":"Switchable buttons support toggling the selected state"},{"type":"text","text":" "},{"type":"text","text":"of the button. Check selected state via “isSelected”."},{"type":"text","text":" "},{"type":"text","text":"(Similar to UISwitch or a “check box” in web programming.)"},{"type":"text","text":" "},{"type":"text","text":"SwitchableControlButton2 is automatically “control state"},{"type":"text","text":" "},{"type":"text","text":"updatable” for theme changes on the button itself and"},{"type":"text","text":" "},{"type":"text","text":"potentially on a background Shape if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/SwitchableControllButton2","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwitchableControllButton2"}],"url":"\/documentation\/c3\/switchablecontrollbutton2"},"doc://com.davidbjames.C3/documentation/C3/Quadrant":{"role":"symbol","title":"Quadrant","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Quadrant"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Quadrant","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Quadrant"}],"url":"\/documentation\/c3\/quadrant"},"doc://com.davidbjames.C3/documentation/C3/SwitchableControlButton":{"role":"symbol","title":"SwitchableControlButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchableControlButton"}],"abstract":[{"type":"text","text":"Switchable buttons support toggling the selected state"},{"type":"text","text":" "},{"type":"text","text":"of the button. Check selected state via “isSelected”."},{"type":"text","text":" "},{"type":"text","text":"(Similar to UISwitch or a “check box” in web programming.)"},{"type":"text","text":" "},{"type":"text","text":"SwitchableControlButton is automatically “control state"},{"type":"text","text":" "},{"type":"text","text":"updatable” for theme changes on the button itself and"},{"type":"text","text":" "},{"type":"text","text":"potentially on a ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/SwitchableControlButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwitchableControlButton"}],"url":"\/documentation\/c3\/switchablecontrolbutton"},"doc://com.davidbjames.C3/documentation/C3/LastOuterSpacer":{"role":"symbol","title":"LastOuterSpacer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LastOuterSpacer"}],"abstract":[{"type":"text","text":"Spacer that provides space between the trailing\/bottom"},{"type":"text","text":" "},{"type":"text","text":"edge of a container and it’s last item."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/LastOuterSpacer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LastOuterSpacer"}],"url":"\/documentation\/c3\/lastouterspacer"},"doc://com.davidbjames.C3/documentation/C3/View":{"role":"symbol","title":"View","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/View","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"View"}],"url":"\/documentation\/c3\/view"},"doc://com.davidbjames.C3/documentation/C3/AutoConstrainable/parentGuideOrView":{"role":"symbol","title":"parentGuideOrView","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parentGuideOrView"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AutoConstrainable","preciseIdentifier":"s:2C317AutoConstrainableP"},{"kind":"text","text":"?"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoConstrainable\/parentGuideOrView","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/c3\/autoconstrainable\/parentguideorview"},"doc://com.davidbjames.C3/documentation/C3/ContentView":{"role":"symbol","title":"ContentView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContentView"}],"abstract":[{"type":"text","text":"Semantic class for the container content view of a scroll view."},{"type":"text","text":" "},{"type":"text","text":"This class should be the direct child of the scroll view"},{"type":"text","text":" "},{"type":"text","text":"with any “content” existing in this container view."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ContentView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContentView"}],"url":"\/documentation\/c3\/contentview"},"doc://com.davidbjames.C3/documentation/C3/DismissableButton":{"role":"symbol","title":"DismissableButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissableButton"}],"abstract":[{"type":"text","text":"DismissableButton is a button that can indirectly control"},{"type":"text","text":" "},{"type":"text","text":"whether or not Presentable ancestor items dismiss (including"},{"type":"text","text":" "},{"type":"text","text":"firing related actions)."},{"type":"text","text":" "},{"type":"text","text":"Specify “dismissive” on initialization to get this behavior."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/DismissableButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DismissableButton"}],"url":"\/documentation\/c3\/dismissablebutton"},"doc://com.davidbjames.C3/documentation/C3/Columns":{"role":"symbol","title":"Columns","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Columns"}],"abstract":[{"type":"text","text":"Columns is a Grid representing a portion of the layout"},{"type":"text","text":" "},{"type":"text","text":"which is evenly subdivided into columns (cells)."},{"type":"text","text":" "},{"type":"text","text":"These columns can be further grouped using Quadrants or"},{"type":"text","text":" "},{"type":"text","text":"iterated via Query.iterateCells\/Columns()."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Columns","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Columns"}],"url":"\/documentation\/c3\/columns"},"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/documentation/C3/AutoConstrainable":{"role":"symbol","title":"AutoConstrainable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutoConstrainable"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoConstrainable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AutoConstrainable"}],"url":"\/documentation\/c3\/autoconstrainable"},"doc://com.davidbjames.C3/documentation/C3/CircleView":{"role":"symbol","title":"CircleView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CircleView"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CircleView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CircleView"}],"url":"\/documentation\/c3\/circleview"},"doc://com.davidbjames.C3/documentation/C3/AutoConstrainable/hasAmbiguousLayout":{"role":"symbol","title":"hasAmbiguousLayout","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasAmbiguousLayout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/AutoConstrainable\/hasAmbiguousLayout","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/c3\/autoconstrainable\/hasambiguouslayout"},"doc://com.davidbjames.C3/documentation/C3/Grid":{"role":"symbol","title":"Grid","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Grid"}],"abstract":[{"type":"text","text":"Grid represents a portion of the layout which is"},{"type":"text","text":" "},{"type":"text","text":"evenly subdivided into columns and rows (cells)."},{"type":"text","text":" "},{"type":"text","text":"Provide the matrix (cols\/rows) on initialization"},{"type":"text","text":" "},{"type":"text","text":"then add child “Quadrants” to define which portion"},{"type":"text","text":" "},{"type":"text","text":"of the grid to “snap to”. Within those quadrants"},{"type":"text","text":" "},{"type":"text","text":"add whatever UI you need."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Grid","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Grid"}],"url":"\/documentation\/c3\/grid"},"doc://com.davidbjames.C3/documentation/C3/BaseView":{"role":"symbol","title":"BaseView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BaseView"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/BaseView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BaseView"}],"url":"\/documentation\/c3\/baseview"},"doc://com.davidbjames.C3/documentation/C3/MetaCodable":{"role":"symbol","title":"MetaCodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetaCodable"}],"abstract":[{"type":"text","text":"A protocol specialization on protocols that store"},{"type":"text","text":" "},{"type":"text","text":"specific pieces of meta data, with the default"},{"type":"text","text":" "},{"type":"text","text":"storage on layers via KVC."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/MetaCodable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MetaCodable"}],"url":"\/documentation\/c3\/metacodable"},"doc://com.davidbjames.C3/documentation/C3/ImageView":{"role":"symbol","title":"ImageView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImageView"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ImageView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImageView"}],"url":"\/documentation\/c3\/imageview"},"doc://com.davidbjames.C3/documentation/C3/Stepper":{"role":"symbol","title":"Stepper","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stepper"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Stepper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Stepper"}],"url":"\/documentation\/c3\/stepper"},"doc://com.davidbjames.C3/documentation/C3/CollectionView":{"role":"symbol","title":"CollectionView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionView"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CollectionView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CollectionView"}],"url":"\/documentation\/c3\/collectionview"},"doc://com.davidbjames.C3/documentation/C3/Spacer":{"role":"symbol","title":"Spacer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Spacer"}],"abstract":[{"type":"text","text":"Autolayout guide used to denote a fixed-size or flexible"},{"type":"text","text":" "},{"type":"text","text":"space between two items on an axis (or axes). Provide"},{"type":"text","text":" "},{"type":"text","text":"Size to make this a fixed size Spacer. This class is"},{"type":"text","text":" "},{"type":"text","text":"“abstract”. Use one of the “concrete” subclasses to rep-"},{"type":"text","text":" "},{"type":"text","text":"resent inner (sibling) and outer (container) spacers."},{"type":"text","text":" "},{"type":"text","text":"This class is ABSTRACT. Use the concrete types instead."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Spacer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Spacer"}],"url":"\/documentation\/c3\/spacer"},"doc://com.davidbjames.C3/documentation/C3/ConfirmButton":{"role":"symbol","title":"ConfirmButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConfirmButton"}],"abstract":[{"type":"text","text":"ConfirmButton supports firing attached actions and handles"},{"type":"text","text":" "},{"type":"text","text":"dismissing any related ancestor Presentable if initialized"},{"type":"text","text":" "},{"type":"text","text":"with “dismissive”."},{"type":"text","text":" "},{"type":"text","text":"Adhoc actions can be attached to this button or via"},{"type":"text","text":" "},{"type":"text","text":"delegate using Mutator event API."},{"type":"text","text":" "},{"type":"text","text":"This button is automatically “control state updatable”"},{"type":"text","text":" "},{"type":"text","text":"for theme changes on the button itself and potentially on a"},{"type":"text","text":" "},{"type":"text","text":"ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button supports optionally constructing with data on"},{"type":"text","text":" "},{"type":"text","text":"attachment (i.e. via in(..data:) method). The data type to"},{"type":"text","text":" "},{"type":"text","text":"provide is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and whether or not to add a control background."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"Passing a theme to in() is optional but preferred (the theme"},{"type":"text","text":" "},{"type":"text","text":"will be applied to the button as well as the background)."},{"type":"text","text":" "},{"type":"text","text":"The default background type is ControlBackground but you may"},{"type":"text","text":" "},{"type":"text","text":"also use a custom subclass of ControlBackground by subclassing"},{"type":"text","text":" "},{"type":"text","text":"the button class and assigning the new background type to the"},{"type":"text","text":" "},{"type":"text","text":"typealias UpdatableBackground. Example:"},{"type":"text","text":" "},{"type":"text","text":"class MyButton : ConfirmButton { typealias UpdatableBackground = MyBackground }"},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.backgrounds }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyControlButton.self > Background.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary."},{"type":"text","text":" "},{"type":"text","text":"See also CancelButton2 that supports Shape backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ConfirmButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConfirmButton"}],"url":"\/documentation\/c3\/confirmbutton"},"doc://com.davidbjames.C3/documentation/C3/SwitchableButton":{"role":"symbol","title":"SwitchableButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchableButton"}],"abstract":[{"type":"text","text":"Switchable buttons support toggling the selected state"},{"type":"text","text":" "},{"type":"text","text":"of the button. Check selected state via “isSelected”."},{"type":"text","text":" "},{"type":"text","text":"(Similar to UISwitch or a “check box” in web programming.)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/SwitchableButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwitchableButton"}],"url":"\/documentation\/c3\/switchablebutton"},"doc://com.davidbjames.C3/documentation/C3/EditableText":{"role":"symbol","title":"EditableText","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EditableText"}],"abstract":[{"type":"text","text":"Text view configured for text editing."},{"type":"text","text":" "},{"type":"text","text":"(this is the default configuration for a UITextView)"},{"type":"text","text":" "},{"type":"text","text":"See also DisplayText that is configured for display."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/EditableText","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EditableText"}],"url":"\/documentation\/c3\/editabletext"},"doc://com.davidbjames.C3/documentation/C3/RemainderView":{"role":"symbol","title":"RemainderView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemainderView"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/RemainderView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RemainderView"}],"url":"\/documentation\/c3\/remainderview"},"doc://com.davidbjames.C3/documentation/C3/Frameable":{"role":"symbol","title":"Frameable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Frameable"}],"abstract":[{"type":"text","text":"Any item that has a frame with readable information."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Frameable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Frameable"}],"url":"\/documentation\/c3\/frameable"},"doc://com.davidbjames.C3/documentation/C3/ExclusiveControlButton2":{"role":"symbol","title":"ExclusiveControlButton2","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExclusiveControlButton2"}],"abstract":[{"type":"text","text":"Exclusive buttons support exclusive selection state"},{"type":"text","text":" "},{"type":"text","text":"within a group of sibling Exclusive buttons."},{"type":"text","text":" "},{"type":"text","text":"(Similar to a “radio group” in web programming,"},{"type":"text","text":" "},{"type":"text","text":"and functionally similar to UISegmentedControl.)"},{"type":"text","text":" "},{"type":"text","text":"ExclusiveControlButton2 is automatically “control state"},{"type":"text","text":" "},{"type":"text","text":"updatable” for theme changes on the button itself and"},{"type":"text","text":" "},{"type":"text","text":"potentially on a background Shape if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ExclusiveControlButton2","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExclusiveControlButton2"}],"url":"\/documentation\/c3\/exclusivecontrolbutton2"},"doc://com.davidbjames.C3/documentation/C3/LiveView":{"role":"symbol","title":"LiveView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LiveView"}],"abstract":[{"type":"text","text":"Alias view that represents the “live content”"},{"type":"text","text":" "},{"type":"text","text":"that is masked within a masked hierarchy."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/LiveView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LiveView"}],"url":"\/documentation\/c3\/liveview"},"doc://com.davidbjames.C3/documentation/C3/ViewOwnable":{"role":"symbol","title":"ViewOwnable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewOwnable"}],"abstract":[{"type":"text","text":"Any item that can be owned by a view"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ViewOwnable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewOwnable"}],"url":"\/documentation\/c3\/viewownable"},"doc://com.davidbjames.C3/documentation/C3/DisplayText":{"role":"symbol","title":"DisplayText","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DisplayText"}],"abstract":[{"type":"text","text":"Text view configured for static text display."},{"type":"text","text":" "},{"type":"text","text":"Text views default to fill available space within the parent."},{"type":"text","text":" "},{"type":"text","text":"See also EditableText."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/DisplayText","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DisplayText"}],"url":"\/documentation\/c3\/displaytext"},"doc://com.davidbjames.C3/documentation/C3/ControlBackgroundView":{"role":"symbol","title":"ControlBackgroundView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlBackgroundView"}],"abstract":[{"type":"text","text":"A BackgroundView (in every other sense) that is also dependent"},{"type":"text","text":" "},{"type":"text","text":"on ancestor’s control state for the purpose of styling."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlBackgroundView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlBackgroundView"}],"url":"\/documentation\/c3\/controlbackgroundview"}}}