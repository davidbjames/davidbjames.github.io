{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scaleBy"},{"kind":"text","text":"("},{"kind":"externalParam","text":"x"},{"kind":"text","text":" "},{"kind":"internalParam","text":"xFactor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"y"},{"kind":"text","text":" "},{"kind":"internalParam","text":"yFactor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"replacing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = false, "},{"kind":"externalParam","text":"preserveBorderWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Layout","preciseIdentifier":"s:2C36LayoutV","text":"Layout"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Layout\/Linearity","preciseIdentifier":"s:2C36LayoutV9LinearityO","text":"Linearity"},{"kind":"text","text":"? = nil) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","preciseIdentifier":"s:2C37MutatorV","text":"Mutator"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/mutator\/scaleby(x:y:replacing:preserveborderwidth:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/scaleBy(x:y:replacing:preserveBorderWidth:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Scale the queried item(s) by x and y factor."},{"type":"text","text":" "},{"type":"text","text":"See scale() method which maintains aspect ratio."},{"type":"text","text":" "},{"type":"text","text":"To scale down to 0.0 (especially if it must be done"},{"type":"text","text":" "},{"type":"text","text":"with animation) use nonVisibleScale() operator instead."},{"type":"text","text":" "},{"type":"text","text":"Optionally specify "},{"type":"codeVoice","code":"replacing"},{"type":"text","text":" to remove the existing"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"scale"}]},{"type":"text","text":" transform. Otherwise, this function is"},{"type":"text","text":" "},{"type":"text","text":"additive – additional calls will scale further."},{"type":"text","text":" "},{"type":"text","text":"NOTE: this parameter attempts to remove only the scale"},{"type":"text","text":" "},{"type":"text","text":"(e.g. and leave rotation\/translation) which does"},{"type":"text","text":" "},{"type":"text","text":"not always succeed due to limitations with"},{"type":"text","text":" "},{"type":"text","text":"transform decomposition. If this is a problem"},{"type":"text","text":" "},{"type":"text","text":"then try calling "},{"type":"codeVoice","code":"resetTransform()"},{"type":"text","text":" instead (of"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"replacing"},{"type":"text","text":") prior to calling this method."},{"type":"text","text":" "},{"type":"text","text":"This will remove all transforms."},{"type":"text","text":" "},{"type":"text","text":"Optionally specify to "},{"type":"codeVoice","code":"preserveBorderWidth"},{"type":"text","text":" –"},{"type":"text","text":" "},{"type":"text","text":"i.e. border width will not scale. Beware that"},{"type":"text","text":" "},{"type":"text","text":"returning to original size (non-scaled) will"},{"type":"text","text":" "},{"type":"text","text":"have the altered border\/line widths. You will"},{"type":"text","text":" "},{"type":"text","text":"need to restore them manually at that point."},{"type":"text","text":" "},{"type":"text","text":"If x\/y factor are different, you can control"},{"type":"text","text":" "},{"type":"text","text":"how the border is scaled by specifying:"},{"type":"text","text":" "},{"type":"text","text":".min = minimum preservation. Will alter the"},{"type":"text","text":" "},{"type":"text","text":"border width by the smallest factor."},{"type":"text","text":" "},{"type":"text","text":".max = maximum preservation. Will guarantee"},{"type":"text","text":" "},{"type":"text","text":"border width is preserved using highest factor."},{"type":"text","text":" "},{"type":"text","text":".mid = average preservation. Will alter the"},{"type":"text","text":" "},{"type":"text","text":"border width between the two factors."},{"type":"text","text":" "},{"type":"text","text":"Border width preservation on very small scale"},{"type":"text","text":" "},{"type":"text","text":"factors (e.g. < 0.3) may exaggerate results."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decoratable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutatorExportable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"TransformDecomposable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"scaleBy(x:y:replacing:preserveBorderWidth:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scaleBy"},{"kind":"text","text":"("},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"y"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"replacing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"preserveBorderWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Layout","preciseIdentifier":"s:2C36LayoutV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Linearity","preciseIdentifier":"s:2C36LayoutV9LinearityO"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"symbolKind":"method","externalID":"s:2C37MutatorVA2A11DecoratableR_AA21TransformDecomposableR_rlE7scaleBy1x1y9replacing19preserveBorderWidthACyxq_G12CoreGraphics7CGFloatV_ANSbAA6LayoutV9LinearityOSgtF","extendedModule":"C3","modules":[{"name":"C3"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator"]]},"references":{"doc://com.davidbjames.C3/documentation/C3/Mutator":{"role":"symbol","title":"Mutator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutator"}],"abstract":[{"type":"text","text":"This wraps the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query"},{"type":"text","text":" object that holds the items to"},{"type":"text","text":" "},{"type":"text","text":"be mutated and also conforms to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/QueryInterface"},{"type":"text","text":" "},{"type":"text","text":"suite of protocols for common functionality."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutator"}],"url":"\/documentation\/c3\/mutator"},"doc://com.davidbjames.C3/documentation/C3/Layout":{"role":"symbol","title":"Layout","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Layout"}],"abstract":[{"type":"text","text":"Container for options and enumerations that are"},{"type":"text","text":" "},{"type":"text","text":"used for layout in this framework."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Layout","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Layout"}],"url":"\/documentation\/c3\/layout"},"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"C3UI"}]},{"type":"text","text":" is a Swift framework for developing apps on iOS and iPadOS."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/documentation/C3/Layout/Linearity":{"role":"symbol","title":"Layout.Linearity","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Linearity"}],"abstract":[{"type":"text","text":"Given an item along a single axis, "},{"type":"codeVoice","code":"Linearity"},{"type":"text","text":" expresses"},{"type":"text","text":" "},{"type":"text","text":"values along the axis of that item, “min” representing"},{"type":"text","text":" "},{"type":"text","text":"the lowest value (e.g. the leading\/top edge in most cases),"},{"type":"text","text":" "},{"type":"text","text":"“max” representing the highest value (e.g. the trailing\/bottom"},{"type":"text","text":" "},{"type":"text","text":"edge in most cases) and “mid” representing the middle value"},{"type":"text","text":" "},{"type":"text","text":"(e.g. center)."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Layout\/Linearity","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Linearity"}],"url":"\/documentation\/c3\/layout\/linearity"},"doc://com.davidbjames.C3/documentation/C3/Query":{"role":"symbol","title":"Query","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Query"}],"abstract":[{"type":"text","text":"Core "},{"type":"codeVoice","code":"Query"},{"type":"text","text":" wrapper to one or more items of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Queryable"},{"type":"text","text":" type."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Query"}],"url":"\/documentation\/c3\/query"},"doc://com.davidbjames.C3/documentation/C3/QueryInterface":{"role":"symbol","title":"QueryInterface","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueryInterface"}],"abstract":[{"type":"text","text":"QueryInterface provides the common interface to"},{"type":"text","text":" "},{"type":"text","text":"queried items via "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Autolayout"},{"type":"text","text":" wrappers."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/QueryInterface","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"QueryInterface"}],"url":"\/documentation\/c3\/queryinterface"},"doc://com.davidbjames.C3/documentation/C3/Mutator/scaleBy(x:y:replacing:preserveBorderWidth:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decoratable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutatorExportable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"TransformDecomposable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"scaleBy(x:y:replacing:preserveBorderWidth:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scaleBy"},{"kind":"text","text":"("},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"y"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"replacing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"preserveBorderWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Layout","preciseIdentifier":"s:2C36LayoutV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Linearity","preciseIdentifier":"s:2C36LayoutV9LinearityO"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"abstract":[{"type":"text","text":"Scale the queried item(s) by x and y factor."},{"type":"text","text":" "},{"type":"text","text":"See scale() method which maintains aspect ratio."},{"type":"text","text":" "},{"type":"text","text":"To scale down to 0.0 (especially if it must be done"},{"type":"text","text":" "},{"type":"text","text":"with animation) use nonVisibleScale() operator instead."},{"type":"text","text":" "},{"type":"text","text":"Optionally specify "},{"type":"codeVoice","code":"replacing"},{"type":"text","text":" to remove the existing"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"scale"}]},{"type":"text","text":" transform. Otherwise, this function is"},{"type":"text","text":" "},{"type":"text","text":"additive – additional calls will scale further."},{"type":"text","text":" "},{"type":"text","text":"NOTE: this parameter attempts to remove only the scale"},{"type":"text","text":" "},{"type":"text","text":"(e.g. and leave rotation\/translation) which does"},{"type":"text","text":" "},{"type":"text","text":"not always succeed due to limitations with"},{"type":"text","text":" "},{"type":"text","text":"transform decomposition. If this is a problem"},{"type":"text","text":" "},{"type":"text","text":"then try calling "},{"type":"codeVoice","code":"resetTransform()"},{"type":"text","text":" instead (of"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"replacing"},{"type":"text","text":") prior to calling this method."},{"type":"text","text":" "},{"type":"text","text":"This will remove all transforms."},{"type":"text","text":" "},{"type":"text","text":"Optionally specify to "},{"type":"codeVoice","code":"preserveBorderWidth"},{"type":"text","text":" –"},{"type":"text","text":" "},{"type":"text","text":"i.e. border width will not scale. Beware that"},{"type":"text","text":" "},{"type":"text","text":"returning to original size (non-scaled) will"},{"type":"text","text":" "},{"type":"text","text":"have the altered border\/line widths. You will"},{"type":"text","text":" "},{"type":"text","text":"need to restore them manually at that point."},{"type":"text","text":" "},{"type":"text","text":"If x\/y factor are different, you can control"},{"type":"text","text":" "},{"type":"text","text":"how the border is scaled by specifying:"},{"type":"text","text":" "},{"type":"text","text":".min = minimum preservation. Will alter the"},{"type":"text","text":" "},{"type":"text","text":"border width by the smallest factor."},{"type":"text","text":" "},{"type":"text","text":".max = maximum preservation. Will guarantee"},{"type":"text","text":" "},{"type":"text","text":"border width is preserved using highest factor."},{"type":"text","text":" "},{"type":"text","text":".mid = average preservation. Will alter the"},{"type":"text","text":" "},{"type":"text","text":"border width between the two factors."},{"type":"text","text":" "},{"type":"text","text":"Border width preservation on very small scale"},{"type":"text","text":" "},{"type":"text","text":"factors (e.g. < 0.3) may exaggerate results."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/scaleBy(x:y:replacing:preserveBorderWidth:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/mutator\/scaleby(x:y:replacing:preserveborderwidth:)"}}}