{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkerboard"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variations"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"number"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/OffsetPair","preciseIdentifier":"s:2C310OffsetPairV","text":"OffsetPair"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/OffsetPair","preciseIdentifier":"s:2C310OffsetPairV","text":"OffsetPair"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Size","preciseIdentifier":"s:2C34SizeV","text":"Size"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"masked"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"outset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/InsetGroup","preciseIdentifier":"s:2C310InsetGroupV","text":"InsetGroup"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Affine","preciseIdentifier":"s:2C36AffineV","text":"Affine"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"copyId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CopyId","preciseIdentifier":"s:2C36CopyIdV","text":"CopyId"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"tile"},{"kind":"text","text":" "},{"kind":"internalParam","text":"tileBuilder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/TileBuilder","preciseIdentifier":"s:2C311TileBuildera","text":"TileBuilder"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"board"},{"kind":"text","text":" "},{"kind":"internalParam","text":"closure"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/TileBoardMutator","preciseIdentifier":"s:2C316TileBoardMutatora","text":"TileBoardMutator"},{"kind":"text","text":"? = nil) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","preciseIdentifier":"s:2C37MutatorV","text":"Mutator"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The resulting solid part of the shape can have color or gradient"},{"type":"text","text":" "},{"type":"text","text":"applied via the trailing closure of this method while the"},{"type":"text","text":" "},{"type":"text","text":"transparent part will reveal the background of whatever the"},{"type":"text","text":" "},{"type":"text","text":"checkerboard is placed over. (The default color of the solid"},{"type":"text","text":" "},{"type":"text","text":"part is transparent black which mimics graphical transparency"},{"type":"text","text":" "},{"type":"text","text":"backgrounds with a default size of 7 points square.)"},{"type":"text","text":" "},{"type":"text","text":"Use a checkerboard instead of tiles\/colored tiles if there are"},{"type":"text","text":" "},{"type":"text","text":"many tiles or where performance is a concern. (For example to"},{"type":"text","text":" "},{"type":"text","text":"have a true checkerboard effect (two colors), create a background"},{"type":"text","text":" "},{"type":"text","text":"with one color and a checkerboard with another.)"},{"type":"text","text":" "},{"type":"text","text":"One advantage of checkerboards over tiles is that since"},{"type":"text","text":" "},{"type":"text","text":"they are a single shape, a continuous gradient or other"},{"type":"text","text":" "},{"type":"text","text":"decoration can be applied to the shape as a whole"},{"type":"text","text":" "},{"type":"text","text":"(vs. applying decoration to individual tiles)."},{"type":"text","text":" "},{"type":"text","text":"Specify "},{"type":"emphasis","inlineContent":[{"type":"text","text":"variations"}]},{"type":"text","text":" (default 1) to support returning variant"},{"type":"text","text":" "},{"type":"text","text":"tiles from the tile builder closure:"}]},{"type":"codeListing","syntax":null,"code":["view.checkerboard(variations:2, ...) {","    $0.variation == 0 ? Rectangle() : Diamond()","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Specify "},{"type":"emphasis","inlineContent":[{"type":"text","text":"number"}]},{"type":"text","text":" of tiles on either axis, both axes or no"},{"type":"text","text":" "},{"type":"text","text":"axes to get specific number of tiles with size relative to parent."},{"type":"text","text":" "},{"type":"text","text":"The number includes the sum of both the on and the off tiles."},{"type":"text","text":" "},{"type":"text","text":"(Be sure to experiment with even and odd numbers of tiles.)"},{"type":"text","text":" "},{"type":"text","text":"Apply "},{"type":"emphasis","inlineContent":[{"type":"text","text":"offset"}]},{"type":"text","text":" on either axis as a positive or negative value"},{"type":"text","text":" "},{"type":"text","text":"to create some potentially interesting checker effects."},{"type":"text","text":" "},{"type":"text","text":"Apply "},{"type":"emphasis","inlineContent":[{"type":"text","text":"size"}]},{"type":"text","text":" to make tiles an absolute sizing (per axis)."},{"type":"text","text":" "},{"type":"text","text":"This will implicitly override the “number” parameter for the given"},{"type":"text","text":" "},{"type":"text","text":"axis and will cause the creation of additional tiles beyond the"},{"type":"text","text":" "},{"type":"text","text":"bottom\/right side. Compensate for this by centering or offsetting"},{"type":"text","text":" "},{"type":"text","text":"tile board using the board mutator trailing closure."},{"type":"text","text":" "},{"type":"text","text":"Specify "},{"type":"emphasis","inlineContent":[{"type":"text","text":"mask"}]},{"type":"text","text":" boolean if board should be masked per the size"},{"type":"text","text":" "},{"type":"text","text":"of it’s parent, respecting rounded corners. The default behavior"},{"type":"text","text":" "},{"type":"text","text":"(if not specifying mask boolean) is to automatically apply the"},{"type":"text","text":" "},{"type":"text","text":"mask to shape layers, but not to plain layers."},{"type":"text","text":" "},{"type":"text","text":"Provide "},{"type":"emphasis","inlineContent":[{"type":"text","text":"outset"}]},{"type":"text","text":" to expand the tile matrix from any side"},{"type":"text","text":" "},{"type":"text","text":"(or use negative values to contract the matrix)."},{"type":"text","text":" "},{"type":"text","text":"Since this will expand\/contract the area within which the tiles"},{"type":"text","text":" "},{"type":"text","text":"will be computed, size\/spacing may be altered accordingly."},{"type":"text","text":" "},{"type":"text","text":"Provide "},{"type":"emphasis","inlineContent":[{"type":"text","text":"tile builder"}]},{"type":"text","text":" to create the tile shape (the default"},{"type":"text","text":" "},{"type":"text","text":"shape is a rectangle)."},{"type":"text","text":" "},{"type":"text","text":"The closure is passed tile info including: variation index, tile"},{"type":"text","text":" "},{"type":"text","text":"index, column number, row number, tile size and other information."},{"type":"text","text":" "},{"type":"text","text":"The builder must return a Shape derivative. NOTE: for complex shapes"},{"type":"text","text":" "},{"type":"text","text":"or shapes other than provided by C3 Shape API, use an external"},{"type":"text","text":" "},{"type":"text","text":"program (such as PaintCode) to create the path and then return that"},{"type":"text","text":" "},{"type":"text","text":"using C3 AnyShape or AnyFlexibleShape (if the size must adapt)."},{"type":"text","text":" "},{"type":"text","text":"NOTE: It is not possible to use Mutator within the closure because"},{"type":"text","text":" "},{"type":"text","text":"it would not make sense to position or alter the properties of a"},{"type":"text","text":" "},{"type":"text","text":"shape in a tileboard since they are immediately “consumed” into the"},{"type":"text","text":" "},{"type":"text","text":"overall tileboard. However, most shapes do have a limited API that"},{"type":"text","text":" "},{"type":"text","text":"does not require Mutator, including corner rounding, path\/points"},{"type":"text","text":" "},{"type":"text","text":"mapping, turn\/flip, etc."},{"type":"text","text":" "},{"type":"text","text":"Provide a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"board closure"}]},{"type":"text","text":" to mutate the tile board using the"},{"type":"text","text":" "},{"type":"text","text":"Mutator API. The mutator passed to the closure will contain the"},{"type":"text","text":" "},{"type":"text","text":"same options\/deviation as the current mutator."},{"type":"text","text":" "},{"type":"text","text":"For repeated tileboards (e.g. in lists) where performance is"},{"type":"text","text":" "},{"type":"text","text":"a concern, use "},{"type":"emphasis","inlineContent":[{"type":"text","text":"copyId"}]},{"type":"text","text":" to provide a copying identifier so"},{"type":"text","text":" "},{"type":"text","text":"that tileboards (a.k.a. CAShapeLayer) after the first will be"},{"type":"text","text":" "},{"type":"text","text":"copied from the original rather than created from scratch. Copied"},{"type":"text","text":" "},{"type":"text","text":"tileboards can override transform, layerAlpha or board closure."},{"type":"text","text":" "},{"type":"text","text":"The provided copy identifier can be a string or an instance"},{"type":"text","text":" "},{"type":"text","text":"of CopyId. In case it is necessary to recreate the original"},{"type":"text","text":" "},{"type":"text","text":"tileboard (e.g. returning to a view controller where you want"},{"type":"text","text":" "},{"type":"text","text":"to refresh the view) use an alternating CopyId, by toggling"},{"type":"text","text":" "},{"type":"text","text":"a boolean value passed to it’s initializer once for each time"},{"type":"text","text":" "},{"type":"text","text":"that the tileboard should be recreated."},{"type":"text","text":" "},{"type":"text","text":"Example: CopyId(“lovely”, true)"},{"type":"text","text":" "},{"type":"text","text":"Randomization (via .mutate(.random, deviation:..)) affects"},{"type":"text","text":" "},{"type":"text","text":"absolute size & offset values and is passed down (with other"},{"type":"text","text":" "},{"type":"text","text":"Mutator options) to the closure."},{"type":"text","text":" "},{"type":"text","text":"NOTE: for optimization reasons to create a new tileboard you must"},{"type":"text","text":" "},{"type":"text","text":"remove the existing one first (via removeTileboard())."},{"type":"text","text":" "},{"type":"text","text":"See Mutator.embedMaskedView() which supports masked hierarchies"},{"type":"text","text":" "},{"type":"text","text":"if the desire is to transform\/animate tiles within a masked area."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/mutator\/checkerboard(variations:number:offset:size:masked:outset:with:layeralpha:copyid:tile:board:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/checkerboard(variations:number:offset:size:masked:outset:with:layerAlpha:copyId:tile:board:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Add performant checkerboard to item(s)."},{"type":"text","text":" "},{"type":"text","text":"A checkerboard is a single shape composed of alternating"},{"type":"text","text":" "},{"type":"text","text":"solid and transparent “checkers” (square tiles or shapes)."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decoratable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutatorExportable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"checkerboard(variations:number:offset:size:masked:outset:with:layerAlpha:copyId:tile:board:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkerboard"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variations"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"number"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OffsetPair","preciseIdentifier":"s:2C310OffsetPairV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OffsetPair","preciseIdentifier":"s:2C310OffsetPairV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Size","preciseIdentifier":"s:2C34SizeV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"masked"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InsetGroup","preciseIdentifier":"s:2C310InsetGroupV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Affine","preciseIdentifier":"s:2C36AffineV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"copyId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CopyId","preciseIdentifier":"s:2C36CopyIdV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"tile"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TileBuilder","preciseIdentifier":"s:2C311TileBuildera"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"board"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TileBoardMutator","preciseIdentifier":"s:2C316TileBoardMutatora"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"symbolKind":"method","externalID":"s:2C37MutatorVA2A11DecoratableR_rlE12checkerboard10variations6number6offset4size6masked6outset4with10layerAlpha6copyId4tile5boardACyxq_GSiSg_AA10OffsetPairVSgAuA4SizeVSgSbSgAA10InsetGroupVSgAA6AffineVSg12CoreGraphics7CGFloatVSgAA04CopyO0VSgAA5ShapeCAA8TileInfoVcSgyACyAA10TileMatrixCA17_GcSgtF","extendedModule":"C3","modules":[{"name":"C3"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/AbstractBackgroundDecoratable-Implementations"]]},"references":{"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"C3UI"}]},{"type":"text","text":" is a Swift framework for developing apps on iOS and iPadOS."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/documentation/C3/Size":{"role":"symbol","title":"Size","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Size"}],"abstract":[{"type":"text","text":"A size that can take nilable width or height values"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Size","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Size"}],"url":"\/documentation\/c3\/size"},"doc://com.davidbjames.C3/documentation/C3/Mutator":{"role":"symbol","title":"Mutator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutator"}],"abstract":[{"type":"text","text":"This wraps the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query"},{"type":"text","text":" object that holds the items to"},{"type":"text","text":" "},{"type":"text","text":"be mutated and also conforms to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/QueryInterface"},{"type":"text","text":" "},{"type":"text","text":"suite of protocols for common functionality."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutator"}],"url":"\/documentation\/c3\/mutator"},"doc://com.davidbjames.C3/documentation/C3/QueryInterface":{"role":"symbol","title":"QueryInterface","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueryInterface"}],"abstract":[{"type":"text","text":"QueryInterface provides the common interface to"},{"type":"text","text":" "},{"type":"text","text":"queried items via "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Autolayout"},{"type":"text","text":" wrappers."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/QueryInterface","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"QueryInterface"}],"url":"\/documentation\/c3\/queryinterface"},"doc://com.davidbjames.C3/documentation/C3/Mutator/checkerboard(variations:number:offset:size:masked:outset:with:layerAlpha:copyId:tile:board:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decoratable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutatorExportable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"checkerboard(variations:number:offset:size:masked:outset:with:layerAlpha:copyId:tile:board:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkerboard"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variations"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"number"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OffsetPair","preciseIdentifier":"s:2C310OffsetPairV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OffsetPair","preciseIdentifier":"s:2C310OffsetPairV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Size","preciseIdentifier":"s:2C34SizeV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"masked"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InsetGroup","preciseIdentifier":"s:2C310InsetGroupV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Affine","preciseIdentifier":"s:2C36AffineV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"copyId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CopyId","preciseIdentifier":"s:2C36CopyIdV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"tile"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TileBuilder","preciseIdentifier":"s:2C311TileBuildera"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"board"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TileBoardMutator","preciseIdentifier":"s:2C316TileBoardMutatora"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"abstract":[{"type":"text","text":"Add performant checkerboard to item(s)."},{"type":"text","text":" "},{"type":"text","text":"A checkerboard is a single shape composed of alternating"},{"type":"text","text":" "},{"type":"text","text":"solid and transparent “checkers” (square tiles or shapes)."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/checkerboard(variations:number:offset:size:masked:outset:with:layerAlpha:copyId:tile:board:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/mutator\/checkerboard(variations:number:offset:size:masked:outset:with:layeralpha:copyid:tile:board:)"},"doc://com.davidbjames.C3/documentation/C3/Query":{"role":"symbol","title":"Query","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Query"}],"abstract":[{"type":"text","text":"Core "},{"type":"codeVoice","code":"Query"},{"type":"text","text":" wrapper to one or more items of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Queryable"},{"type":"text","text":" type."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Query"}],"url":"\/documentation\/c3\/query"},"doc://com.davidbjames.C3/documentation/C3/Affine":{"role":"symbol","title":"Affine","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Affine"}],"abstract":[{"type":"text","text":"Convenience wrapper for creating affine transforms."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Affine","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Affine"}],"url":"\/documentation\/c3\/affine"},"doc://com.davidbjames.C3/documentation/C3/InsetGroup":{"role":"symbol","title":"InsetGroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InsetGroup"}],"abstract":[{"type":"text","text":"Inset group of top, bottom, leading and trailing."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/InsetGroup","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InsetGroup"}],"url":"\/documentation\/c3\/insetgroup"},"doc://com.davidbjames.C3/documentation/C3/Mutator/AbstractBackgroundDecoratable-Implementations":{"role":"collectionGroup","title":"AbstractBackgroundDecoratable Implementations","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/AbstractBackgroundDecoratable-Implementations","kind":"article","type":"topic","url":"\/documentation\/c3\/mutator\/abstractbackgrounddecoratable-implementations"},"doc://com.davidbjames.C3/documentation/C3/CopyId":{"role":"symbol","title":"CopyId","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CopyId"}],"abstract":[{"type":"text","text":"Copying identifier for use with API that would otherwise"},{"type":"text","text":" "},{"type":"text","text":"require expensive construction where a copy would suffice."},{"type":"text","text":" "},{"type":"text","text":"This is particularly applicable where said construction"},{"type":"text","text":" "},{"type":"text","text":"occurs within a list with repeated items that are the same"},{"type":"text","text":" "},{"type":"text","text":"such as a background or tileboard, etc."},{"type":"text","text":" "},{"type":"text","text":"Create a CopyId using a plain string or via its initializer."},{"type":"text","text":" "},{"type":"text","text":"In case it is necessary to reconstruct a copied object"},{"type":"text","text":" "},{"type":"text","text":"(e.g. when returning to a view controller to refresh"},{"type":"text","text":" "},{"type":"text","text":"the view) then create an alternating copy id using"},{"type":"text","text":" "},{"type":"text","text":"a boolean value as part of it’s initialization."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CopyId","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CopyId"}],"url":"\/documentation\/c3\/copyid"},"doc://com.davidbjames.C3/documentation/C3/OffsetPair":{"role":"symbol","title":"OffsetPair","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OffsetPair"}],"abstract":[{"type":"text","text":"Offset pair of x, y values."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/OffsetPair","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OffsetPair"}],"url":"\/documentation\/c3\/offsetpair"},"doc://com.davidbjames.C3/documentation/C3/TileBuilder":{"role":"symbol","title":"TileBuilder","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TileBuilder"}],"abstract":[{"type":"text","text":"Function used with "},{"type":"codeVoice","code":"Tileboard"},{"type":"text","text":" on creation."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/TileBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TileBuilder"}],"url":"\/documentation\/c3\/tilebuilder"},"doc://com.davidbjames.C3/documentation/C3/TileBoardMutator":{"role":"symbol","title":"TileBoardMutator","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TileBoardMutator"}],"abstract":[{"type":"text","text":"Function used with "},{"type":"codeVoice","code":"Tileboard"},{"type":"text","text":" on creation."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/TileBoardMutator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TileBoardMutator"}],"url":"\/documentation\/c3\/tileboardmutator"}}}