{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fillColor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cg"},{"kind":"text","text":" "},{"kind":"internalParam","text":"color"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGColor","preciseIdentifier":"c:@T@CGColorRef"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Affine","preciseIdentifier":"s:2C36AffineV","text":"Affine"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":" "},{"kind":"internalParam","text":"alpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"? = nil) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","preciseIdentifier":"s:2C37MutatorV","text":"Mutator"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/mutator\/fillcolor(cg:with:layeralpha:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/fillColor(cg:with:layerAlpha:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"(CGColor version)"},{"type":"text","text":" "},{"type":"text","text":"Apply fill color, transform and\/or layer alpha to current shapes."},{"type":"text","text":" "},{"type":"text","text":"For Shapes only (not just CAShapeLayer), fill transform and"},{"type":"text","text":" "},{"type":"text","text":"layer alpha are applied to fill only and not to the entire shape."},{"type":"text","text":" "},{"type":"text","text":"This is accomplished by creating a separate Layer Addon for"},{"type":"text","text":" "},{"type":"text","text":"the fill, which is then transformed with the provided"},{"type":"text","text":" "},{"type":"text","text":"transform or alpha."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" inherits "},{"type":"codeVoice","code":"CAShapeLayer"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"fillColor(cg:with:layerAlpha:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fillColor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cg"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGColor","preciseIdentifier":"c:@T@CGColorRef"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Affine","preciseIdentifier":"s:2C36AffineV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"symbolKind":"method","externalID":"s:2C37MutatorVAASo12CAShapeLayerCRb_rlE9fillColor2cg4with10layerAlphaACyxq_GSo10CGColorRefaSg_AA6AffineVSg12CoreGraphics7CGFloatVSgtF","extendedModule":"C3","modules":[{"name":"C3"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator"]]},"references":{"doc://com.davidbjames.C3/documentation/C3/Mutator/fillColor(cg:with:layerAlpha:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" inherits "},{"type":"codeVoice","code":"CAShapeLayer"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"fillColor(cg:with:layerAlpha:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fillColor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cg"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGColor","preciseIdentifier":"c:@T@CGColorRef"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Affine","preciseIdentifier":"s:2C36AffineV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"abstract":[{"type":"text","text":"(CGColor version)"},{"type":"text","text":" "},{"type":"text","text":"Apply fill color, transform and\/or layer alpha to current shapes."},{"type":"text","text":" "},{"type":"text","text":"For Shapes only (not just CAShapeLayer), fill transform and"},{"type":"text","text":" "},{"type":"text","text":"layer alpha are applied to fill only and not to the entire shape."},{"type":"text","text":" "},{"type":"text","text":"This is accomplished by creating a separate Layer Addon for"},{"type":"text","text":" "},{"type":"text","text":"the fill, which is then transformed with the provided"},{"type":"text","text":" "},{"type":"text","text":"transform or alpha."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/fillColor(cg:with:layerAlpha:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/mutator\/fillcolor(cg:with:layeralpha:)"},"doc://com.davidbjames.C3/documentation/C3/Affine":{"role":"symbol","title":"Affine","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Affine"}],"abstract":[{"type":"text","text":"Convenience wrapper for creating affine transforms."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Affine","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Affine"}],"url":"\/documentation\/c3\/affine"},"doc://com.davidbjames.C3/documentation/C3/Mutator":{"role":"symbol","title":"Mutator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutator"}],"abstract":[{"type":"text","text":"Wrapper for mutation of an itemâ€™s size, position, etc."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutator"}],"url":"\/documentation\/c3\/mutator"},"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"}}}