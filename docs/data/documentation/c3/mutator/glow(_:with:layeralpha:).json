{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"glow"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"glow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ShadowSpec","preciseIdentifier":"s:2C310ShadowSpecP","text":"ShadowSpec"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Affine","preciseIdentifier":"s:2C36AffineV","text":"Affine"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"? = nil) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","preciseIdentifier":"s:2C37MutatorV","text":"Mutator"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/mutator\/glow(_:with:layeralpha:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/glow(_:with:layerAlpha:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Apply glow to the item(s) including views, layers, shapes"},{"type":"text","text":" "},{"type":"text","text":"or text layers."},{"type":"text","text":" "},{"type":"text","text":"Mutator options (such as .random) affect “offset”."},{"type":"text","text":" "},{"type":"text","text":"Specify “masked” to support transparent or semi-transparent"},{"type":"text","text":" "},{"type":"text","text":"item(s) with the masked glow being knocked out of the item(s)."},{"type":"text","text":" "},{"type":"text","text":"Specify “maskColor” to be applied to the masked area of the"},{"type":"text","text":" "},{"type":"text","text":"glow. If “masked” and “maskColor” are specified together"},{"type":"text","text":" "},{"type":"text","text":"the mask color can help make mask edge artifacts less visible and"},{"type":"text","text":" "},{"type":"text","text":"in case of complex shapes – to fill in the parts of the glow"},{"type":"text","text":" "},{"type":"text","text":"mask that do not get knocked out properly – so that the masked"},{"type":"text","text":" "},{"type":"text","text":"area blends with the background better. If “maskColor” is"},{"type":"text","text":" "},{"type":"text","text":"specified on it’s own then it will provide a color fill that"},{"type":"text","text":" "},{"type":"text","text":"occupies the shape of the item(s)."},{"type":"text","text":" "},{"type":"text","text":"NOTE: If item(s) already have layer addons, or transform\/alpha"},{"type":"text","text":" "},{"type":"text","text":"are applied, or “masked” == true, or “maskColor” is specified,"},{"type":"text","text":" "},{"type":"text","text":"then the glow will be represented as a Layer Addon which"},{"type":"text","text":" "},{"type":"text","text":"can then be animated independent of the item(s)."},{"type":"text","text":" "},{"type":"text","text":"NOTE: For applying glows to text see also TextShape object which"},{"type":"text","text":" "},{"type":"text","text":"can better represent glows (as a shape) than TextLayers can."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DebuggableItem"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decoratable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutatorExportable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"glow(_:with:layerAlpha:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"glow"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ShadowSpec","preciseIdentifier":"s:2C310ShadowSpecP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Affine","preciseIdentifier":"s:2C36AffineV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"symbolKind":"method","externalID":"s:2C37MutatorVA2A14DebuggableItemR_AA11DecoratableR_rlE4glow_4with10layerAlphaACyxq_GAA10ShadowSpec_p_AA6AffineVSg12CoreGraphics7CGFloatVSgtF","extendedModule":"C3","modules":[{"name":"C3"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator"]]},"references":{"doc://com.davidbjames.C3/documentation/C3/Query":{"role":"symbol","title":"Query","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Query"}],"abstract":[{"type":"text","text":"Core "},{"type":"codeVoice","code":"Query"},{"type":"text","text":" wrapper to one or more items of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Queryable"},{"type":"text","text":" type."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Query"}],"url":"\/documentation\/c3\/query"},"doc://com.davidbjames.C3/documentation/C3/ShadowSpec":{"role":"symbol","title":"ShadowSpec","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ShadowSpec"}],"abstract":[{"type":"text","text":"Specification of a shadow."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ShadowSpec","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ShadowSpec"}],"url":"\/documentation\/c3\/shadowspec"},"doc://com.davidbjames.C3/documentation/C3/Affine":{"role":"symbol","title":"Affine","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Affine"}],"abstract":[{"type":"text","text":"Convenience wrapper for creating affine transforms."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Affine","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Affine"}],"url":"\/documentation\/c3\/affine"},"doc://com.davidbjames.C3/documentation/C3/Mutator/glow(_:with:layerAlpha:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DebuggableItem"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decoratable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutatorExportable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"glow(_:with:layerAlpha:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"glow"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ShadowSpec","preciseIdentifier":"s:2C310ShadowSpecP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Affine","preciseIdentifier":"s:2C36AffineV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"abstract":[{"type":"text","text":"Apply glow to the item(s) including views, layers, shapes"},{"type":"text","text":" "},{"type":"text","text":"or text layers."},{"type":"text","text":" "},{"type":"text","text":"Mutator options (such as .random) affect “offset”."},{"type":"text","text":" "},{"type":"text","text":"Specify “masked” to support transparent or semi-transparent"},{"type":"text","text":" "},{"type":"text","text":"item(s) with the masked glow being knocked out of the item(s)."},{"type":"text","text":" "},{"type":"text","text":"Specify “maskColor” to be applied to the masked area of the"},{"type":"text","text":" "},{"type":"text","text":"glow. If “masked” and “maskColor” are specified together"},{"type":"text","text":" "},{"type":"text","text":"the mask color can help make mask edge artifacts less visible and"},{"type":"text","text":" "},{"type":"text","text":"in case of complex shapes – to fill in the parts of the glow"},{"type":"text","text":" "},{"type":"text","text":"mask that do not get knocked out properly – so that the masked"},{"type":"text","text":" "},{"type":"text","text":"area blends with the background better. If “maskColor” is"},{"type":"text","text":" "},{"type":"text","text":"specified on it’s own then it will provide a color fill that"},{"type":"text","text":" "},{"type":"text","text":"occupies the shape of the item(s)."},{"type":"text","text":" "},{"type":"text","text":"NOTE: If item(s) already have layer addons, or transform\/alpha"},{"type":"text","text":" "},{"type":"text","text":"are applied, or “masked” == true, or “maskColor” is specified,"},{"type":"text","text":" "},{"type":"text","text":"then the glow will be represented as a Layer Addon which"},{"type":"text","text":" "},{"type":"text","text":"can then be animated independent of the item(s)."},{"type":"text","text":" "},{"type":"text","text":"NOTE: For applying glows to text see also TextShape object which"},{"type":"text","text":" "},{"type":"text","text":"can better represent glows (as a shape) than TextLayers can."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/glow(_:with:layerAlpha:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/mutator\/glow(_:with:layeralpha:)"},"doc://com.davidbjames.C3/documentation/C3/QueryInterface":{"role":"symbol","title":"QueryInterface","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueryInterface"}],"abstract":[{"type":"text","text":"QueryInterface provides the common interface to"},{"type":"text","text":" "},{"type":"text","text":"queried items via "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Autolayout"},{"type":"text","text":" wrappers."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/QueryInterface","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"QueryInterface"}],"url":"\/documentation\/c3\/queryinterface"},"doc://com.davidbjames.C3/documentation/C3/Mutator":{"role":"symbol","title":"Mutator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutator"}],"abstract":[{"type":"text","text":"This wraps the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query"},{"type":"text","text":" object that holds the items to"},{"type":"text","text":" "},{"type":"text","text":"be mutated and also conforms to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/QueryInterface"},{"type":"text","text":" "},{"type":"text","text":"suite of protocols for common functionality."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutator"}],"url":"\/documentation\/c3\/mutator"},"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"C3UI"}]},{"type":"text","text":" is a Swift framework for developing apps on iOS and iPadOS."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"}}}