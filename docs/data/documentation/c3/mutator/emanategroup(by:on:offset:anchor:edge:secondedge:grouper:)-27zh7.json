{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"emanateGroup"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":" "},{"kind":"internalParam","text":"number"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/WidthHeightKey","preciseIdentifier":"s:2C314WidthHeightKeyO","text":"WidthHeightKey"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/OffsetPair","preciseIdentifier":"s:2C310OffsetPairV","text":"OffsetPair"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"anchor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"edge"},{"kind":"text","text":" "},{"kind":"internalParam","text":"linearity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Layout","preciseIdentifier":"s:2C36LayoutV","text":"Layout"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Layout\/Linearity","preciseIdentifier":"s:2C36LayoutV9LinearityO","text":"Linearity"},{"kind":"text","text":" = .max, "},{"kind":"externalParam","text":"secondEdge"},{"kind":"text","text":" "},{"kind":"internalParam","text":"secondLinearity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Layout","preciseIdentifier":"s:2C36LayoutV","text":"Layout"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Layout\/Linearity","preciseIdentifier":"s:2C36LayoutV9LinearityO","text":"Linearity"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"grouper"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/GroupingPredicateClosure","preciseIdentifier":"s:2C324GroupingPredicateClosurea","text":"GroupingPredicateClosure"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:2C37MutatorVA2A14DebuggableItemR_AA12FrameMutableR_AA12PositionableR_rlE1Tq_mfp"},{"kind":"text","text":">? = nil) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","preciseIdentifier":"s:2C37MutatorV","text":"Mutator"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/mutator\/emanategroup(by:on:offset:anchor:edge:secondedge:grouper:)-27zh7"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/emanateGroup(by:on:offset:anchor:edge:secondEdge:grouper:)-27zh7","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Emanate a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"group"}]},{"type":"text","text":" of items along both axes, with a specified number"},{"type":"text","text":" "},{"type":"text","text":"of items for the first axis (width or height edge) emanating outward"},{"type":"text","text":" "},{"type":"text","text":"from an absolute (point-based) anchor position within the group, and"},{"type":"text","text":" "},{"type":"text","text":"subsequently emanating items on the cross axis (width or height edge)"},{"type":"text","text":" "},{"type":"text","text":"such that all items will be grouped (e.g. in a grid or similar) that"},{"type":"text","text":" "},{"type":"text","text":"emanates outward from the anchor on each axis."},{"type":"text","text":" "},{"type":"text","text":"See alternate emanateGroup() which takes axis-based and percent-based"},{"type":"text","text":" "},{"type":"text","text":"anchor values."},{"type":"text","text":" "},{"type":"text","text":"Similar to “link()”, this method requires that the items – or at a"},{"type":"text","text":" "},{"type":"text","text":"minimum the first item – has already been positioned (within it’s"},{"type":"text","text":" "},{"type":"text","text":"container or relative to a reference item)."},{"type":"text","text":" "},{"type":"text","text":"TIP: This method supports the difficult task of centering a group of"},{"type":"text","text":" "},{"type":"text","text":"items without needing to wrap them in an outer view\/layer (and"},{"type":"text","text":" "},{"type":"text","text":"manually position them)."},{"type":"text","text":" "},{"type":"text","text":"Optionally provide inter-item “offset” (for both or either axes)"},{"type":"text","text":" "},{"type":"text","text":"and\/or edge “linearity” (for both or either axes)."},{"type":"text","text":" "},{"type":"text","text":"Default linearity is “.max” edge (basically end-to-end). Change this"},{"type":"text","text":" "},{"type":"text","text":"to “.mid” for items to overlap from their mid point or to “.min” to make"},{"type":"text","text":" "},{"type":"text","text":"items align on the same edge (using “offset” to adjust overlap so all"},{"type":"text","text":" "},{"type":"text","text":"items will be visible)."},{"type":"text","text":" "},{"type":"text","text":"Optionally provide “grouper” trailing closure to further refine"},{"type":"text","text":" "},{"type":"text","text":"how items should be grouped on the cross-axis (e.g. in the case of"},{"type":"text","text":" "},{"type":"text","text":"using “width” (aka “horizontal”) the cross-axis for emanation is “vertical”)."},{"type":"text","text":" "},{"type":"text","text":"The closure is passed an item index and the current item and must return"},{"type":"text","text":" "},{"type":"text","text":"a hashable value to logically group the items for emanation on the"},{"type":"text","text":" "},{"type":"text","text":"cross-axis. TIP: The hashable return value may also be an instance of"},{"type":"text","text":" "},{"type":"text","text":"IndexedAlignment() for advanced post-grouping alignment."},{"type":"text","text":" "},{"type":"text","text":"Example: https:\/\/a.cl.ly\/Jruw4w5J"},{"type":"text","text":" "},{"type":"text","text":"Supports randomization of offset."},{"type":"text","text":" "},{"type":"text","text":"To randomize the anchor simply do so on the provided value."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DebuggableItem"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FrameMutable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutatorExportable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Positionable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"emanateGroup(by:on:offset:anchor:edge:secondEdge:grouper:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"emanateGroup"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WidthHeightKey","preciseIdentifier":"s:2C314WidthHeightKeyO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OffsetPair","preciseIdentifier":"s:2C310OffsetPairV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"anchor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"edge"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Layout","preciseIdentifier":"s:2C36LayoutV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Linearity","preciseIdentifier":"s:2C36LayoutV9LinearityO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"secondEdge"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Layout","preciseIdentifier":"s:2C36LayoutV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Linearity","preciseIdentifier":"s:2C36LayoutV9LinearityO"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"grouper"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GroupingPredicateClosure","preciseIdentifier":"s:2C324GroupingPredicateClosurea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:2C37MutatorVA2A14DebuggableItemR_AA12FrameMutableR_AA12PositionableR_rlE1Tq_mfp"},{"kind":"text","text":">?) -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"symbolKind":"method","externalID":"s:2C37MutatorVA2A14DebuggableItemR_AA12FrameMutableR_AA12PositionableR_rlE12emanateGroup2by2on6offset6anchor4edge10secondEdge7grouperACyxq_GSi_AA14WidthHeightKeyOAA10OffsetPairVSg12CoreGraphics7CGFloatVAA6LayoutV9LinearityOA_Sgs11AnyHashableVSgSi_q_tcSgtF","extendedModule":"C3","modules":[{"name":"C3"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator"]]},"references":{"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/documentation/C3/WidthHeightKey":{"role":"symbol","title":"WidthHeightKey","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"WidthHeightKey"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/WidthHeightKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WidthHeightKey"}],"url":"\/documentation\/c3\/widthheightkey"},"doc://com.davidbjames.C3/documentation/C3/Layout":{"role":"symbol","title":"Layout","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Layout"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Layout","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Layout"}],"url":"\/documentation\/c3\/layout"},"doc://com.davidbjames.C3/documentation/C3/Mutator/emanateGroup(by:on:offset:anchor:edge:secondEdge:grouper:)-27zh7":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DebuggableItem"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FrameMutable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutatorExportable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Positionable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"emanateGroup(by:on:offset:anchor:edge:secondEdge:grouper:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"emanateGroup"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WidthHeightKey","preciseIdentifier":"s:2C314WidthHeightKeyO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OffsetPair","preciseIdentifier":"s:2C310OffsetPairV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"anchor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"edge"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Layout","preciseIdentifier":"s:2C36LayoutV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Linearity","preciseIdentifier":"s:2C36LayoutV9LinearityO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"secondEdge"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Layout","preciseIdentifier":"s:2C36LayoutV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Linearity","preciseIdentifier":"s:2C36LayoutV9LinearityO"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"grouper"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GroupingPredicateClosure","preciseIdentifier":"s:2C324GroupingPredicateClosurea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:2C37MutatorVA2A14DebuggableItemR_AA12FrameMutableR_AA12PositionableR_rlE1Tq_mfp"},{"kind":"text","text":">?) -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"abstract":[{"type":"text","text":"Emanate a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"group"}]},{"type":"text","text":" of items along both axes, with a specified number"},{"type":"text","text":" "},{"type":"text","text":"of items for the first axis (width or height edge) emanating outward"},{"type":"text","text":" "},{"type":"text","text":"from an absolute (point-based) anchor position within the group, and"},{"type":"text","text":" "},{"type":"text","text":"subsequently emanating items on the cross axis (width or height edge)"},{"type":"text","text":" "},{"type":"text","text":"such that all items will be grouped (e.g. in a grid or similar) that"},{"type":"text","text":" "},{"type":"text","text":"emanates outward from the anchor on each axis."},{"type":"text","text":" "},{"type":"text","text":"See alternate emanateGroup() which takes axis-based and percent-based"},{"type":"text","text":" "},{"type":"text","text":"anchor values."},{"type":"text","text":" "},{"type":"text","text":"Similar to “link()”, this method requires that the items – or at a"},{"type":"text","text":" "},{"type":"text","text":"minimum the first item – has already been positioned (within it’s"},{"type":"text","text":" "},{"type":"text","text":"container or relative to a reference item)."},{"type":"text","text":" "},{"type":"text","text":"TIP: This method supports the difficult task of centering a group of"},{"type":"text","text":" "},{"type":"text","text":"items without needing to wrap them in an outer view\/layer (and"},{"type":"text","text":" "},{"type":"text","text":"manually position them)."},{"type":"text","text":" "},{"type":"text","text":"Optionally provide inter-item “offset” (for both or either axes)"},{"type":"text","text":" "},{"type":"text","text":"and\/or edge “linearity” (for both or either axes)."},{"type":"text","text":" "},{"type":"text","text":"Default linearity is “.max” edge (basically end-to-end). Change this"},{"type":"text","text":" "},{"type":"text","text":"to “.mid” for items to overlap from their mid point or to “.min” to make"},{"type":"text","text":" "},{"type":"text","text":"items align on the same edge (using “offset” to adjust overlap so all"},{"type":"text","text":" "},{"type":"text","text":"items will be visible)."},{"type":"text","text":" "},{"type":"text","text":"Optionally provide “grouper” trailing closure to further refine"},{"type":"text","text":" "},{"type":"text","text":"how items should be grouped on the cross-axis (e.g. in the case of"},{"type":"text","text":" "},{"type":"text","text":"using “width” (aka “horizontal”) the cross-axis for emanation is “vertical”)."},{"type":"text","text":" "},{"type":"text","text":"The closure is passed an item index and the current item and must return"},{"type":"text","text":" "},{"type":"text","text":"a hashable value to logically group the items for emanation on the"},{"type":"text","text":" "},{"type":"text","text":"cross-axis. TIP: The hashable return value may also be an instance of"},{"type":"text","text":" "},{"type":"text","text":"IndexedAlignment() for advanced post-grouping alignment."},{"type":"text","text":" "},{"type":"text","text":"Example: https:\/\/a.cl.ly\/Jruw4w5J"},{"type":"text","text":" "},{"type":"text","text":"Supports randomization of offset."},{"type":"text","text":" "},{"type":"text","text":"To randomize the anchor simply do so on the provided value."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/emanateGroup(by:on:offset:anchor:edge:secondEdge:grouper:)-27zh7","kind":"symbol","type":"topic","url":"\/documentation\/c3\/mutator\/emanategroup(by:on:offset:anchor:edge:secondedge:grouper:)-27zh7"},"doc://com.davidbjames.C3/documentation/C3/Layout/Linearity":{"role":"symbol","title":"Layout.Linearity","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Linearity"}],"abstract":[{"type":"text","text":"Given an item along a single axis, Linearity expresses"},{"type":"text","text":" "},{"type":"text","text":"values along the axis of that item, “min” representing"},{"type":"text","text":" "},{"type":"text","text":"the lowest value (e.g. the leading\/top edge in most cases),"},{"type":"text","text":" "},{"type":"text","text":"“max” representing the highest value (e.g. the trailing\/bottom"},{"type":"text","text":" "},{"type":"text","text":"edge in most cases) and “mid” representing the middle value"},{"type":"text","text":" "},{"type":"text","text":"(e.g. center). (CGRect has a similar idea with minX, etc)"},{"type":"text","text":" "},{"type":"text","text":"Implementations that rely on Linearity respect"},{"type":"text","text":" "},{"type":"text","text":"layout direction (e.g. leading instead of left)."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Layout\/Linearity","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Linearity"}],"url":"\/documentation\/c3\/layout\/linearity"},"doc://com.davidbjames.C3/documentation/C3/GroupingPredicateClosure":{"role":"symbol","title":"GroupingPredicateClosure","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"GroupingPredicateClosure"}],"abstract":[{"type":"text","text":"Closure used to provide a hashable value that can be used"},{"type":"text","text":" "},{"type":"text","text":"to group items in any of the grouping API."},{"type":"text","text":" "},{"type":"text","text":"The closure is passed the current item index and an item"},{"type":"text","text":" "},{"type":"text","text":"and should return a hashable value to group by."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/GroupingPredicateClosure","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GroupingPredicateClosure"}],"url":"\/documentation\/c3\/groupingpredicateclosure"},"doc://com.davidbjames.C3/documentation/C3/OffsetPair":{"role":"symbol","title":"OffsetPair","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OffsetPair"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/OffsetPair","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OffsetPair"}],"url":"\/documentation\/c3\/offsetpair"},"doc://com.davidbjames.C3/documentation/C3/Mutator":{"role":"symbol","title":"Mutator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutator"}],"abstract":[{"type":"text","text":"Wrapper for mutation of an item’s size, position, etc."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutator"}],"url":"\/documentation\/c3\/mutator"}}}