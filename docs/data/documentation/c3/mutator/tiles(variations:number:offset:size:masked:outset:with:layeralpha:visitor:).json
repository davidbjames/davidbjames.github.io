{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tiles"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variations"},{"kind":"text","text":" "},{"kind":"internalParam","text":"tileVariations"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"number"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/OffsetPair","preciseIdentifier":"s:2C310OffsetPairV","text":"OffsetPair"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/OffsetPair","preciseIdentifier":"s:2C310OffsetPairV","text":"OffsetPair"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Size","preciseIdentifier":"s:2C34SizeV","text":"Size"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"masked"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"outset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/InsetGroup","preciseIdentifier":"s:2C310InsetGroupV","text":"InsetGroup"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Affine","preciseIdentifier":"s:2C36AffineV","text":"Affine"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"visitor"},{"kind":"text","text":" "},{"kind":"internalParam","text":"closure"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/TileVisitor","preciseIdentifier":"s:2C311TileVisitora","text":"TileVisitor"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","preciseIdentifier":"s:2C37MutatorV","text":"Mutator"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/mutator\/tiles(variations:number:offset:size:masked:outset:with:layeralpha:visitor:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/tiles(variations:number:offset:size:masked:outset:with:layerAlpha:visitor:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Add tile layers to item(s) and mutate them via closure."},{"type":"text","text":" "},{"type":"text","text":"Provide optional "},{"type":"emphasis","inlineContent":[{"type":"text","text":"variations"}]},{"type":"text","text":". The variation index will"},{"type":"text","text":" "},{"type":"text","text":"be provided to the closure in order to help determine how"},{"type":"text","text":" "},{"type":"text","text":"the tile should be decorated. Specify "},{"type":"emphasis","inlineContent":[{"type":"text","text":"number"}]},{"type":"text","text":" of tiles on"},{"type":"text","text":" "},{"type":"text","text":"either axis, both axes or no axes to get specific number of"},{"type":"text","text":" "},{"type":"text","text":"tiles with size relative to parent. Specify number of tiles"},{"type":"text","text":" "},{"type":"text","text":"on a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"single axis"}]},{"type":"text","text":" to provide rows or columns (vs cells). If"},{"type":"text","text":" "},{"type":"text","text":"there is more than 1 variation, adjust number of tiles to"},{"type":"text","text":" "},{"type":"text","text":"improve “checkered” effect if that is your goal. Apply "},{"type":"emphasis","inlineContent":[{"type":"text","text":"offset"}]},{"type":"text","text":" "},{"type":"text","text":"on either axis as a positive or negative value, to create gaps"},{"type":"text","text":" "},{"type":"text","text":"between tiles or for tiles to overlap (which is effective"},{"type":"text","text":" "},{"type":"text","text":"if tiles have alpha values). Apply "},{"type":"emphasis","inlineContent":[{"type":"text","text":"size"}]},{"type":"text","text":" to make tiles"},{"type":"text","text":" "},{"type":"text","text":"an absolute sizing (per axis). This will implicitly override"},{"type":"text","text":" "},{"type":"text","text":"the “number” parameter for the given axis and will cause the"},{"type":"text","text":" "},{"type":"text","text":"creation of additional tiles beyond the bottom\/right side."},{"type":"text","text":" "},{"type":"text","text":"Specify "},{"type":"emphasis","inlineContent":[{"type":"text","text":"mask"}]},{"type":"text","text":" boolean if tiles should be masked per the size"},{"type":"text","text":" "},{"type":"text","text":"of the matrix, respecting rounded corners. The default behavior"},{"type":"text","text":" "},{"type":"text","text":"(if not specifying mask boolean) is to automatically apply the"},{"type":"text","text":" "},{"type":"text","text":"mask to shape\/text layers, but not to plain layers."},{"type":"text","text":" "},{"type":"text","text":"Provide "},{"type":"emphasis","inlineContent":[{"type":"text","text":"outset"}]},{"type":"text","text":" to expand the tile matrix from any side"},{"type":"text","text":" "},{"type":"text","text":"(or use negative values to contract the matrix)."},{"type":"text","text":" "},{"type":"text","text":"Since this will expand\/contract the area within which the tiles"},{"type":"text","text":" "},{"type":"text","text":"will be computed, size\/spacing may be altered accordingly."},{"type":"text","text":" "},{"type":"text","text":"Provide affine transform that will affect the entire tile"},{"type":"text","text":" "},{"type":"text","text":"matrix. To transform individually tiles, do so in the closure."},{"type":"text","text":" "},{"type":"text","text":"Provide a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"closure"}]},{"type":"text","text":" to mutate the tiles using the full"},{"type":"text","text":" "},{"type":"text","text":"Mutator API. The closure will be provided with the mutator"},{"type":"text","text":" "},{"type":"text","text":"of a tile and the variation index to help determine how"},{"type":"text","text":" "},{"type":"text","text":"the tile should be decorated. The mutator passed to the closure"},{"type":"text","text":" "},{"type":"text","text":"will contain the same options\/deviation as the current mutator."},{"type":"text","text":" "},{"type":"text","text":"Randomization (via .mutate(.random, deviation:..)) affects"},{"type":"text","text":" "},{"type":"text","text":"absolute size, offset values and is passed down (with other"},{"type":"text","text":" "},{"type":"text","text":"Mutator options) to the visitor closure. To randomize variation"},{"type":"text","text":" "},{"type":"text","text":"index, provide index randomization in the closure. Example:"},{"type":"text","text":" "},{"type":"text","text":".tiles { tile, _ in"},{"type":"text","text":" "},{"type":"text","text":"switch (1…3).random {"},{"type":"text","text":" "},{"type":"text","text":"case 1 : .."},{"type":"text","text":" "},{"type":"text","text":"etc .."},{"type":"text","text":" "},{"type":"text","text":"}"},{"type":"text","text":" "},{"type":"text","text":"Performance tip: Prefer setting tiles "},{"type":"emphasis","inlineContent":[{"type":"text","text":"after"}]},{"type":"text","text":" resizing item(s) or"},{"type":"text","text":" "},{"type":"text","text":"setting corner radius\/mask to avoid unnecessarily refreshing the tiles."},{"type":"text","text":" "},{"type":"text","text":"See also “tileboard” API for high performance alternative to tiles."},{"type":"text","text":" "},{"type":"text","text":"See Mutator.embedMaskedView() which supports masked hierarchies"},{"type":"text","text":" "},{"type":"text","text":"if the desire is to transform\/animate tiles within a masked area."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decoratable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutatorExportable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"tiles(variations:number:offset:size:masked:outset:with:layerAlpha:visitor:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tiles"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variations"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"number"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OffsetPair","preciseIdentifier":"s:2C310OffsetPairV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OffsetPair","preciseIdentifier":"s:2C310OffsetPairV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Size","preciseIdentifier":"s:2C34SizeV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"masked"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InsetGroup","preciseIdentifier":"s:2C310InsetGroupV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Affine","preciseIdentifier":"s:2C36AffineV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"visitor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TileVisitor","preciseIdentifier":"s:2C311TileVisitora"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"symbolKind":"method","externalID":"s:2C37MutatorVA2A11DecoratableR_rlE5tiles10variations6number6offset4size6masked6outset4with10layerAlpha7visitorACyxq_GSiSg_AA10OffsetPairVSgAsA4SizeVSgSbSgAA10InsetGroupVSgAA6AffineVSg12CoreGraphics7CGFloatVSgyACyAA10TileMatrixCSo7CALayerCG_AA0X4InfoVtctF","extendedModule":"C3","modules":[{"name":"C3"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/AbstractBackgroundDecoratable-Implementations"]]},"references":{"doc://com.davidbjames.C3/documentation/C3/Affine":{"role":"symbol","title":"Affine","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Affine"}],"abstract":[{"type":"text","text":"Convenience wrapper for creating affine transforms."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Affine","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Affine"}],"url":"\/documentation\/c3\/affine"},"doc://com.davidbjames.C3/documentation/C3/Mutator/AbstractBackgroundDecoratable-Implementations":{"role":"collectionGroup","title":"AbstractBackgroundDecoratable Implementations","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/AbstractBackgroundDecoratable-Implementations","kind":"article","type":"topic","url":"\/documentation\/c3\/mutator\/abstractbackgrounddecoratable-implementations"},"doc://com.davidbjames.C3/documentation/C3/QueryInterface":{"role":"symbol","title":"QueryInterface","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueryInterface"}],"abstract":[{"type":"text","text":"QueryInterface provides the common interface to"},{"type":"text","text":" "},{"type":"text","text":"queried items via "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Autolayout"},{"type":"text","text":" wrappers."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/QueryInterface","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"QueryInterface"}],"url":"\/documentation\/c3\/queryinterface"},"doc://com.davidbjames.C3/documentation/C3/Mutator/tiles(variations:number:offset:size:masked:outset:with:layerAlpha:visitor:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decoratable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutatorExportable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"tiles(variations:number:offset:size:masked:outset:with:layerAlpha:visitor:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tiles"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variations"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"number"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OffsetPair","preciseIdentifier":"s:2C310OffsetPairV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OffsetPair","preciseIdentifier":"s:2C310OffsetPairV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Size","preciseIdentifier":"s:2C34SizeV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"masked"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InsetGroup","preciseIdentifier":"s:2C310InsetGroupV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Affine","preciseIdentifier":"s:2C36AffineV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"visitor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TileVisitor","preciseIdentifier":"s:2C311TileVisitora"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"abstract":[{"type":"text","text":"Add tile layers to item(s) and mutate them via closure."},{"type":"text","text":" "},{"type":"text","text":"Provide optional "},{"type":"emphasis","inlineContent":[{"type":"text","text":"variations"}]},{"type":"text","text":". The variation index will"},{"type":"text","text":" "},{"type":"text","text":"be provided to the closure in order to help determine how"},{"type":"text","text":" "},{"type":"text","text":"the tile should be decorated. Specify "},{"type":"emphasis","inlineContent":[{"type":"text","text":"number"}]},{"type":"text","text":" of tiles on"},{"type":"text","text":" "},{"type":"text","text":"either axis, both axes or no axes to get specific number of"},{"type":"text","text":" "},{"type":"text","text":"tiles with size relative to parent. Specify number of tiles"},{"type":"text","text":" "},{"type":"text","text":"on a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"single axis"}]},{"type":"text","text":" to provide rows or columns (vs cells). If"},{"type":"text","text":" "},{"type":"text","text":"there is more than 1 variation, adjust number of tiles to"},{"type":"text","text":" "},{"type":"text","text":"improve “checkered” effect if that is your goal. Apply "},{"type":"emphasis","inlineContent":[{"type":"text","text":"offset"}]},{"type":"text","text":" "},{"type":"text","text":"on either axis as a positive or negative value, to create gaps"},{"type":"text","text":" "},{"type":"text","text":"between tiles or for tiles to overlap (which is effective"},{"type":"text","text":" "},{"type":"text","text":"if tiles have alpha values). Apply "},{"type":"emphasis","inlineContent":[{"type":"text","text":"size"}]},{"type":"text","text":" to make tiles"},{"type":"text","text":" "},{"type":"text","text":"an absolute sizing (per axis). This will implicitly override"},{"type":"text","text":" "},{"type":"text","text":"the “number” parameter for the given axis and will cause the"},{"type":"text","text":" "},{"type":"text","text":"creation of additional tiles beyond the bottom\/right side."},{"type":"text","text":" "},{"type":"text","text":"Specify "},{"type":"emphasis","inlineContent":[{"type":"text","text":"mask"}]},{"type":"text","text":" boolean if tiles should be masked per the size"},{"type":"text","text":" "},{"type":"text","text":"of the matrix, respecting rounded corners. The default behavior"},{"type":"text","text":" "},{"type":"text","text":"(if not specifying mask boolean) is to automatically apply the"},{"type":"text","text":" "},{"type":"text","text":"mask to shape\/text layers, but not to plain layers."},{"type":"text","text":" "},{"type":"text","text":"Provide "},{"type":"emphasis","inlineContent":[{"type":"text","text":"outset"}]},{"type":"text","text":" to expand the tile matrix from any side"},{"type":"text","text":" "},{"type":"text","text":"(or use negative values to contract the matrix)."},{"type":"text","text":" "},{"type":"text","text":"Since this will expand\/contract the area within which the tiles"},{"type":"text","text":" "},{"type":"text","text":"will be computed, size\/spacing may be altered accordingly."},{"type":"text","text":" "},{"type":"text","text":"Provide affine transform that will affect the entire tile"},{"type":"text","text":" "},{"type":"text","text":"matrix. To transform individually tiles, do so in the closure."},{"type":"text","text":" "},{"type":"text","text":"Provide a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"closure"}]},{"type":"text","text":" to mutate the tiles using the full"},{"type":"text","text":" "},{"type":"text","text":"Mutator API. The closure will be provided with the mutator"},{"type":"text","text":" "},{"type":"text","text":"of a tile and the variation index to help determine how"},{"type":"text","text":" "},{"type":"text","text":"the tile should be decorated. The mutator passed to the closure"},{"type":"text","text":" "},{"type":"text","text":"will contain the same options\/deviation as the current mutator."},{"type":"text","text":" "},{"type":"text","text":"Randomization (via .mutate(.random, deviation:..)) affects"},{"type":"text","text":" "},{"type":"text","text":"absolute size, offset values and is passed down (with other"},{"type":"text","text":" "},{"type":"text","text":"Mutator options) to the visitor closure. To randomize variation"},{"type":"text","text":" "},{"type":"text","text":"index, provide index randomization in the closure. Example:"},{"type":"text","text":" "},{"type":"text","text":".tiles { tile, _ in"},{"type":"text","text":" "},{"type":"text","text":"switch (1…3).random {"},{"type":"text","text":" "},{"type":"text","text":"case 1 : .."},{"type":"text","text":" "},{"type":"text","text":"etc .."},{"type":"text","text":" "},{"type":"text","text":"}"},{"type":"text","text":" "},{"type":"text","text":"Performance tip: Prefer setting tiles "},{"type":"emphasis","inlineContent":[{"type":"text","text":"after"}]},{"type":"text","text":" resizing item(s) or"},{"type":"text","text":" "},{"type":"text","text":"setting corner radius\/mask to avoid unnecessarily refreshing the tiles."},{"type":"text","text":" "},{"type":"text","text":"See also “tileboard” API for high performance alternative to tiles."},{"type":"text","text":" "},{"type":"text","text":"See Mutator.embedMaskedView() which supports masked hierarchies"},{"type":"text","text":" "},{"type":"text","text":"if the desire is to transform\/animate tiles within a masked area."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/tiles(variations:number:offset:size:masked:outset:with:layerAlpha:visitor:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/mutator\/tiles(variations:number:offset:size:masked:outset:with:layeralpha:visitor:)"},"doc://com.davidbjames.C3/documentation/C3/Size":{"role":"symbol","title":"Size","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Size"}],"abstract":[{"type":"text","text":"A size that can take nilable width or height values"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Size","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Size"}],"url":"\/documentation\/c3\/size"},"doc://com.davidbjames.C3/documentation/C3/InsetGroup":{"role":"symbol","title":"InsetGroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InsetGroup"}],"abstract":[{"type":"text","text":"Inset group of top, bottom, leading and trailing."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/InsetGroup","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InsetGroup"}],"url":"\/documentation\/c3\/insetgroup"},"doc://com.davidbjames.C3/documentation/C3/OffsetPair":{"role":"symbol","title":"OffsetPair","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OffsetPair"}],"abstract":[{"type":"text","text":"Offset pair of x, y values."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/OffsetPair","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OffsetPair"}],"url":"\/documentation\/c3\/offsetpair"},"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"C3UI"}]},{"type":"text","text":" is a Swift framework for developing apps on iOS and iPadOS."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/documentation/C3/Mutator":{"role":"symbol","title":"Mutator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutator"}],"abstract":[{"type":"text","text":"This wraps the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query"},{"type":"text","text":" object that holds the items to"},{"type":"text","text":" "},{"type":"text","text":"be mutated and also conforms to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/QueryInterface"},{"type":"text","text":" "},{"type":"text","text":"suite of protocols for common functionality."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutator"}],"url":"\/documentation\/c3\/mutator"},"doc://com.davidbjames.C3/documentation/C3/Query":{"role":"symbol","title":"Query","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Query"}],"abstract":[{"type":"text","text":"Core "},{"type":"codeVoice","code":"Query"},{"type":"text","text":" wrapper to one or more items of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Queryable"},{"type":"text","text":" type."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Query"}],"url":"\/documentation\/c3\/query"},"doc://com.davidbjames.C3/documentation/C3/TileVisitor":{"role":"symbol","title":"TileVisitor","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TileVisitor"}],"abstract":[{"type":"text","text":"Function used with "},{"type":"codeVoice","code":"Tile"},{"type":"text","text":" on creation."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/TileVisitor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TileVisitor"}],"url":"\/documentation\/c3\/tilevisitor"}}}