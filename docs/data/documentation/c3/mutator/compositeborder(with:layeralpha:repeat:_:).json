{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compositeBorder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Affine","preciseIdentifier":"s:2C36AffineV","text":"Affine"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"repeat"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" = 1, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"closure"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CompositeBorderBuilder","preciseIdentifier":"s:2C322CompositeBorderBuilderC","text":"CompositeBorderBuilder"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","preciseIdentifier":"s:2C37MutatorV","text":"Mutator"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/mutator\/compositeborder(with:layeralpha:repeat:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/compositeBorder(with:layerAlpha:repeat:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Apply composite borders to queried item(s). In addition to what"},{"type":"text","text":" "},{"type":"text","text":"regular borders support, “composite borders” support gradients,"},{"type":"text","text":" "},{"type":"text","text":"outlines, offset, scaling, rotation, edge offsets and nesting (multiple borders)."},{"type":"text","text":" "},{"type":"text","text":"To offset\/scale\/rotate the entire composed border (vs individual"},{"type":"text","text":" "},{"type":"text","text":"offset\/scale\/rotate) pass an Affine transform. Nested borders may"},{"type":"text","text":" "},{"type":"text","text":"override offset\/scale\/rotate individually as needed. This is slightly"},{"type":"text","text":" "},{"type":"text","text":"different than how transforms usually work, in that offset\/scale\/rotate"},{"type":"text","text":" "},{"type":"text","text":"used in the build closure are overrides of the global transform rather than additive."},{"type":"text","text":" "},{"type":"text","text":"NOTE: Border is drawn with it’s center on the edge of the parent."},{"type":"text","text":" "},{"type":"text","text":"Use “edgeOffset” to move border within edge of parent, if desired."},{"type":"text","text":" "},{"type":"text","text":"Example:"},{"type":"text","text":" "},{"type":"text","text":".compositeBorder(with:Affine(offset:10, rotate:-15)) {"},{"type":"text","text":" "},{"type":"text","text":"$0.width = 10.0"},{"type":"text","text":" "},{"type":"text","text":"$0.gradient = VerticalGradient(..)"},{"type":"text","text":" "},{"type":"text","text":"$0.outline {"},{"type":"text","text":" "},{"type":"text","text":"$0.width = 1.0"},{"type":"text","text":" "},{"type":"text","text":"$0.color = .."},{"type":"text","text":" "},{"type":"text","text":"}"},{"type":"text","text":" "},{"type":"text","text":"$0.add {"},{"type":"text","text":" "},{"type":"text","text":"$0.width = 5.0"},{"type":"text","text":" "},{"type":"text","text":"$0.color = .."},{"type":"text","text":" "},{"type":"text","text":"$0.offset = 0.0"},{"type":"text","text":" "},{"type":"text","text":"\/\/ reset above offset for this nested border"},{"type":"text","text":" "},{"type":"text","text":"\/\/ without affecting the rotation."},{"type":"text","text":" "},{"type":"text","text":"}"},{"type":"text","text":" "},{"type":"text","text":"}"}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decoratable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutatorExportable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"compositeBorder(with:layerAlpha:repeat:_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compositeBorder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Affine","preciseIdentifier":"s:2C36AffineV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"repeat"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"CompositeBorderBuilder","preciseIdentifier":"s:2C322CompositeBorderBuilderC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"symbolKind":"method","externalID":"s:2C37MutatorVA2A11DecoratableR_rlE15compositeBorder4with10layerAlpha6repeat_ACyxq_GAA6AffineVSg_12CoreGraphics7CGFloatVSgSiyAA09CompositeE7BuilderCXEtF","extendedModule":"C3","modules":[{"name":"C3"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/AbstractBackgroundDecoratable-Implementations"]]},"references":{"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"C3UI"}]},{"type":"text","text":" is a Swift framework for developing apps on iOS and iPadOS."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/documentation/C3/Mutator/compositeBorder(with:layerAlpha:repeat:_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decoratable"},{"type":"text","text":", "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutatorExportable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Queryable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"compositeBorder(with:layerAlpha:repeat:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compositeBorder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Affine","preciseIdentifier":"s:2C36AffineV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"layerAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:12CoreGraphics7CGFloatV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"repeat"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"CompositeBorderBuilder","preciseIdentifier":"s:2C322CompositeBorderBuilderC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Mutator","preciseIdentifier":"s:2C37MutatorV"}],"abstract":[{"type":"text","text":"Apply composite borders to queried item(s). In addition to what"},{"type":"text","text":" "},{"type":"text","text":"regular borders support, “composite borders” support gradients,"},{"type":"text","text":" "},{"type":"text","text":"outlines, offset, scaling, rotation, edge offsets and nesting (multiple borders)."},{"type":"text","text":" "},{"type":"text","text":"To offset\/scale\/rotate the entire composed border (vs individual"},{"type":"text","text":" "},{"type":"text","text":"offset\/scale\/rotate) pass an Affine transform. Nested borders may"},{"type":"text","text":" "},{"type":"text","text":"override offset\/scale\/rotate individually as needed. This is slightly"},{"type":"text","text":" "},{"type":"text","text":"different than how transforms usually work, in that offset\/scale\/rotate"},{"type":"text","text":" "},{"type":"text","text":"used in the build closure are overrides of the global transform rather than additive."},{"type":"text","text":" "},{"type":"text","text":"NOTE: Border is drawn with it’s center on the edge of the parent."},{"type":"text","text":" "},{"type":"text","text":"Use “edgeOffset” to move border within edge of parent, if desired."},{"type":"text","text":" "},{"type":"text","text":"Example:"},{"type":"text","text":" "},{"type":"text","text":".compositeBorder(with:Affine(offset:10, rotate:-15)) {"},{"type":"text","text":" "},{"type":"text","text":"$0.width = 10.0"},{"type":"text","text":" "},{"type":"text","text":"$0.gradient = VerticalGradient(..)"},{"type":"text","text":" "},{"type":"text","text":"$0.outline {"},{"type":"text","text":" "},{"type":"text","text":"$0.width = 1.0"},{"type":"text","text":" "},{"type":"text","text":"$0.color = .."},{"type":"text","text":" "},{"type":"text","text":"}"},{"type":"text","text":" "},{"type":"text","text":"$0.add {"},{"type":"text","text":" "},{"type":"text","text":"$0.width = 5.0"},{"type":"text","text":" "},{"type":"text","text":"$0.color = .."},{"type":"text","text":" "},{"type":"text","text":"$0.offset = 0.0"},{"type":"text","text":" "},{"type":"text","text":"\/\/ reset above offset for this nested border"},{"type":"text","text":" "},{"type":"text","text":"\/\/ without affecting the rotation."},{"type":"text","text":" "},{"type":"text","text":"}"},{"type":"text","text":" "},{"type":"text","text":"}"}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/compositeBorder(with:layerAlpha:repeat:_:)","kind":"symbol","type":"topic","url":"\/documentation\/c3\/mutator\/compositeborder(with:layeralpha:repeat:_:)"},"doc://com.davidbjames.C3/documentation/C3/CompositeBorderBuilder":{"role":"symbol","title":"CompositeBorderBuilder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompositeBorderBuilder"}],"abstract":[{"type":"text","text":"Proxy to creating single or nested borders."},{"type":"text","text":" "},{"type":"text","text":"Simply assign the border properties to this"},{"type":"text","text":" "},{"type":"text","text":"builder, use “outline{}” to add outlines and"},{"type":"text","text":" "},{"type":"text","text":"use “add{}” to nest add’l borders."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/CompositeBorderBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CompositeBorderBuilder"}],"url":"\/documentation\/c3\/compositeborderbuilder"},"doc://com.davidbjames.C3/documentation/C3/Mutator/AbstractBackgroundDecoratable-Implementations":{"role":"collectionGroup","title":"AbstractBackgroundDecoratable Implementations","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator\/AbstractBackgroundDecoratable-Implementations","kind":"article","type":"topic","url":"\/documentation\/c3\/mutator\/abstractbackgrounddecoratable-implementations"},"doc://com.davidbjames.C3/documentation/C3/Mutator":{"role":"symbol","title":"Mutator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutator"}],"abstract":[{"type":"text","text":"This wraps the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query"},{"type":"text","text":" object that holds the items to"},{"type":"text","text":" "},{"type":"text","text":"be mutated and also conforms to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/QueryInterface"},{"type":"text","text":" "},{"type":"text","text":"suite of protocols for common functionality."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutator"}],"url":"\/documentation\/c3\/mutator"},"doc://com.davidbjames.C3/documentation/C3/Query":{"role":"symbol","title":"Query","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Query"}],"abstract":[{"type":"text","text":"Core "},{"type":"codeVoice","code":"Query"},{"type":"text","text":" wrapper to one or more items of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Queryable"},{"type":"text","text":" type."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Query"}],"url":"\/documentation\/c3\/query"},"doc://com.davidbjames.C3/documentation/C3/QueryInterface":{"role":"symbol","title":"QueryInterface","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueryInterface"}],"abstract":[{"type":"text","text":"QueryInterface provides the common interface to"},{"type":"text","text":" "},{"type":"text","text":"queried items via "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Query"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Mutator"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Autolayout"},{"type":"text","text":" wrappers."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/QueryInterface","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"QueryInterface"}],"url":"\/documentation\/c3\/queryinterface"},"doc://com.davidbjames.C3/documentation/C3/Affine":{"role":"symbol","title":"Affine","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Affine"}],"abstract":[{"type":"text","text":"Convenience wrapper for creating affine transforms."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Affine","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Affine"}],"url":"\/documentation\/c3\/affine"}}}