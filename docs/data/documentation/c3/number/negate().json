{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"negate"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Number","preciseIdentifier":"s:2C36NumberV","text":"Number"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/number\/negate()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Number\/negate()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Return a new Number with value negated."},{"type":"text","text":" "},{"type":"text","text":"This also negates the clamping values"},{"type":"text","text":" "},{"type":"text","text":"so that the same clamping range applies"},{"type":"text","text":" "},{"type":"text","text":"(min and\/or max) but negated."},{"type":"text","text":" "},{"type":"text","text":"For example, if the value is 20, min is 10"},{"type":"text","text":" "},{"type":"text","text":"and max is 100, resulting number will have"},{"type":"text","text":" "},{"type":"text","text":"value: -20, min: -100 and max: -10."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"negate"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Number","preciseIdentifier":"s:2C36NumberV"}],"title":"negate()","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:2C36NumberV6negateACyF","modules":[{"name":"C3"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3","doc:\/\/com.davidbjames.C3\/documentation\/C3\/Number"]]},"references":{"doc://com.davidbjames.C3/documentation/C3/Number":{"role":"symbol","title":"Number","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Number"}],"abstract":[{"type":"text","text":"Decimal number."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Number","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Number"}],"url":"\/documentation\/c3\/number"},"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"C3UI"}]},{"type":"text","text":" is a Swift framework for developing apps on iOS and iPadOS."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/documentation/C3/Number/negate()":{"role":"symbol","title":"negate()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"negate"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Number","preciseIdentifier":"s:2C36NumberV"}],"abstract":[{"type":"text","text":"Return a new Number with value negated."},{"type":"text","text":" "},{"type":"text","text":"This also negates the clamping values"},{"type":"text","text":" "},{"type":"text","text":"so that the same clamping range applies"},{"type":"text","text":" "},{"type":"text","text":"(min and\/or max) but negated."},{"type":"text","text":" "},{"type":"text","text":"For example, if the value is 20, min is 10"},{"type":"text","text":" "},{"type":"text","text":"and max is 100, resulting number will have"},{"type":"text","text":" "},{"type":"text","text":"value: -20, min: -100 and max: -10."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/Number\/negate()","kind":"symbol","type":"topic","url":"\/documentation\/c3\/number\/negate()"}}}