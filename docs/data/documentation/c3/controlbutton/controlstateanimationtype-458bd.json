{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"controlStateAnimationType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAnimationType","preciseIdentifier":"s:2C325ControlStateAnimationTypeO","text":"ControlStateAnimationType"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/c3\/controlbutton\/controlstateanimationtype-458bd"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton\/controlStateAnimationType-458bd","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Animation type determines the type of supported animation,"},{"type":"text","text":" "},{"type":"text","text":"being “for views” which provides an explicit property animator"},{"type":"text","text":" "},{"type":"text","text":"(and implicit animation of sub-layers via CA transaction)"},{"type":"text","text":" "},{"type":"text","text":"or “for layers” which provides the built-in implicit animations"},{"type":"text","text":" "},{"type":"text","text":"(with adjustable duration\/curve via this protocol)."},{"type":"text","text":" "},{"type":"text","text":"Default is nil, which takes the type of the object getting"},{"type":"text","text":" "},{"type":"text","text":"the control state updates. Note: in most cases it’s not"},{"type":"text","text":" "},{"type":"text","text":"necessary to set this (i.e. just leave it to return nil by default)"},{"type":"text","text":" "},{"type":"text","text":"because even in special cases where the control is a view"},{"type":"text","text":" "},{"type":"text","text":"but the thing updated is a layer, wrapping the layer changes in a"},{"type":"text","text":" "},{"type":"text","text":"view property animator (which is what will happen under the hood)"},{"type":"text","text":" "},{"type":"text","text":"effectively provides the same animation as an implicit layer animation."},{"type":"text","text":" "},{"type":"text","text":"If you absolutely need implicit layer animations then return .layer."},{"type":"text","text":" "},{"type":"text","text":"To handle animations independently but still take advantage of theme-"},{"type":"text","text":" "},{"type":"text","text":"based property changes being fired via control state updates"},{"type":"text","text":" "},{"type":"text","text":"(presumably within the scope of animation blocks) return “.override”."},{"type":"text","text":" "},{"type":"text","text":"For example, in case “.override” is used you can then call"},{"type":"text","text":" "},{"type":"text","text":"mutate.animate(..) { $0.highlighted(true) } which uses your"},{"type":"text","text":" "},{"type":"text","text":"animator but still allows the highlight to update the visual"},{"type":"text","text":" "},{"type":"text","text":"appearance according to the control state update."},{"type":"text","text":" "},{"type":"text","text":"This will also allow implicit layer animations to proceed as normal."},{"type":"text","text":" "},{"type":"text","text":"To stop all animations return 0.0 from “controlStateAnimationDuration”."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"controlStateAnimationType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ControlStateAnimationType","preciseIdentifier":"s:2C325ControlStateAnimationTypeO"},{"kind":"text","text":"?"}],"title":"controlStateAnimationType","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:2C313ControlButtonC25controlStateAnimationTypeAA0befG0OSgvp","modules":[{"name":"C3"}]},"hierarchy":{"paths":[["doc:\/\/com.davidbjames.C3\/documentation\/C3","doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton"]]},"references":{"doc://com.davidbjames.C3/documentation/C3":{"role":"collection","title":"C3","abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3","kind":"symbol","type":"topic","url":"\/documentation\/c3"},"doc://com.davidbjames.C3/documentation/C3/ControlButton/controlStateAnimationType-458bd":{"role":"symbol","title":"controlStateAnimationType","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"controlStateAnimationType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ControlStateAnimationType","preciseIdentifier":"s:2C325ControlStateAnimationTypeO"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Animation type determines the type of supported animation,"},{"type":"text","text":" "},{"type":"text","text":"being “for views” which provides an explicit property animator"},{"type":"text","text":" "},{"type":"text","text":"(and implicit animation of sub-layers via CA transaction)"},{"type":"text","text":" "},{"type":"text","text":"or “for layers” which provides the built-in implicit animations"},{"type":"text","text":" "},{"type":"text","text":"(with adjustable duration\/curve via this protocol)."},{"type":"text","text":" "},{"type":"text","text":"Default is nil, which takes the type of the object getting"},{"type":"text","text":" "},{"type":"text","text":"the control state updates. Note: in most cases it’s not"},{"type":"text","text":" "},{"type":"text","text":"necessary to set this (i.e. just leave it to return nil by default)"},{"type":"text","text":" "},{"type":"text","text":"because even in special cases where the control is a view"},{"type":"text","text":" "},{"type":"text","text":"but the thing updated is a layer, wrapping the layer changes in a"},{"type":"text","text":" "},{"type":"text","text":"view property animator (which is what will happen under the hood)"},{"type":"text","text":" "},{"type":"text","text":"effectively provides the same animation as an implicit layer animation."},{"type":"text","text":" "},{"type":"text","text":"If you absolutely need implicit layer animations then return .layer."},{"type":"text","text":" "},{"type":"text","text":"To handle animations independently but still take advantage of theme-"},{"type":"text","text":" "},{"type":"text","text":"based property changes being fired via control state updates"},{"type":"text","text":" "},{"type":"text","text":"(presumably within the scope of animation blocks) return “.override”."},{"type":"text","text":" "},{"type":"text","text":"For example, in case “.override” is used you can then call"},{"type":"text","text":" "},{"type":"text","text":"mutate.animate(..) { $0.highlighted(true) } which uses your"},{"type":"text","text":" "},{"type":"text","text":"animator but still allows the highlight to update the visual"},{"type":"text","text":" "},{"type":"text","text":"appearance according to the control state update."},{"type":"text","text":" "},{"type":"text","text":"This will also allow implicit layer animations to proceed as normal."},{"type":"text","text":" "},{"type":"text","text":"To stop all animations return 0.0 from “controlStateAnimationDuration”."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton\/controlStateAnimationType-458bd","kind":"symbol","type":"topic","url":"\/documentation\/c3\/controlbutton\/controlstateanimationtype-458bd"},"doc://com.davidbjames.C3/documentation/C3/ControlButton":{"role":"symbol","title":"ControlButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlButton"}],"abstract":[{"type":"text","text":"ControlButton is kind of button that is automatically"},{"type":"text","text":" "},{"type":"text","text":"“control state updatable” for theme changes on the button"},{"type":"text","text":" "},{"type":"text","text":"itself and potentially on a ControlBackground (layer) if it exists."},{"type":"text","text":" "},{"type":"text","text":"(This also presumes the button or super type (e.g. UIView)"},{"type":"text","text":" "},{"type":"text","text":"conforms to ThemeAccessible or ThemeOverridable.)"},{"type":"text","text":" "},{"type":"text","text":"This button is also Dismissable if “dismissive” is passed."},{"type":"text","text":" "},{"type":"text","text":"This button supports optionally constructing with data on"},{"type":"text","text":" "},{"type":"text","text":"attachment (i.e. via in(..data:) method). The data type to"},{"type":"text","text":" "},{"type":"text","text":"provide is a tuple of button text, optional button outset,"},{"type":"text","text":" "},{"type":"text","text":"and whether or not to add a control background."},{"type":"text","text":" "},{"type":"text","text":"(You may create multiple buttons this way by providing"},{"type":"text","text":" "},{"type":"text","text":"multiple data tuples as normal with ConstructibleWithData.)"},{"type":"text","text":" "},{"type":"text","text":"Passing a theme to in() is optional but preferred (the theme"},{"type":"text","text":" "},{"type":"text","text":"will be applied to the button as well as the background)."},{"type":"text","text":" "},{"type":"text","text":"The default background type is ControlBackground but you may"},{"type":"text","text":" "},{"type":"text","text":"also use a custom subclass of ControlBackground by subclassing"},{"type":"text","text":" "},{"type":"text","text":"the button class and assigning the new background type to the"},{"type":"text","text":" "},{"type":"text","text":"typealias UpdatableBackground. Example:"},{"type":"text","text":" "},{"type":"text","text":"class MyButton : ConfirmButton { typealias UpdatableBackground = MyBackground }"},{"type":"text","text":" "},{"type":"text","text":"If you pass a theme that inherits from the built-in theme"},{"type":"text","text":" "},{"type":"text","text":"(via Theme.getBuiltInTheme()) then this button and it’s"},{"type":"text","text":" "},{"type":"text","text":"background will inherit the default styling."},{"type":"text","text":" "},{"type":"text","text":"(If you want the background to receive the default styling"},{"type":"text","text":" "},{"type":"text","text":"your Theme must also statically conform to ExtendedStyleAccessible"},{"type":"text","text":" "},{"type":"text","text":"with the static property ExtendedStyleDefaults, with"},{"type":"text","text":" "},{"type":"text","text":"usesButtonBackgroundLayers set to true.)"},{"type":"text","text":" "},{"type":"text","text":"If you choose to use this initializer but do not want the"},{"type":"text","text":" "},{"type":"text","text":"background to appear at all you may either hide it manually:"},{"type":"text","text":" "},{"type":"text","text":"e.g. .with { $0.backgrounds }.hide()"},{"type":"text","text":" "},{"type":"text","text":"or create a style in your theme to hide it:"},{"type":"text","text":" "},{"type":"text","text":"e.g. MyControlButton.self > Background.self => .contentAlpha(0.0)"},{"type":"text","text":" "},{"type":"text","text":"CAVEAT: If you want to use a custom Model type (not the one"},{"type":"text","text":" "},{"type":"text","text":"that is already on ControlButton) you cannot use this class due to"},{"type":"text","text":" "},{"type":"text","text":"generics limitations. Use DismissableButton or Button instead with"},{"type":"text","text":" "},{"type":"text","text":"ControlStateCombinedUpdatable as necessary."},{"type":"text","text":" "},{"type":"text","text":"See also ControlButton2 that supports Shape based backgrounds."}],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlButton"}],"url":"\/documentation\/c3\/controlbutton"},"doc://com.davidbjames.C3/documentation/C3/ControlStateAnimationType":{"role":"symbol","title":"ControlStateAnimationType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ControlStateAnimationType"}],"abstract":[],"identifier":"doc:\/\/com.davidbjames.C3\/documentation\/C3\/ControlStateAnimationType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ControlStateAnimationType"}],"url":"\/documentation\/c3\/controlstateanimationtype"}}}